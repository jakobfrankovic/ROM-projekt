(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1247225,      24251]
NotebookOptionsPosition[   1238840,      24106]
NotebookOutlinePosition[   1239324,      24124]
CellTagsIndexPosition[   1239281,      24121]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Analiza podjetja Nvidia", "Title",
 CellChangeTimes->{{3.839412249161846*^9, 
  3.8394122745423517`*^9}},ExpressionUUID->"41df66de-46f5-4784-9070-\
df1411bada08"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.839412242874187*^9, 
  3.839412244119372*^9}},ExpressionUUID->"96f30f97-9c6b-419c-8354-\
67d1524a16fb"],

Cell[CellGroupData[{

Cell["Pridobivanje podatkov ", "Section",
 CellChangeTimes->{{3.839412222302518*^9, 
  3.839412231097734*^9}},ExpressionUUID->"dceb28dc-6c4c-437c-a77d-\
a4176e97a783"],

Cell["\<\
Podjetje NVIDIA se ukvarja s proizvajanjem polprevodnikov, najbolj znana je \
po svojih grafi\[CHacek]nih karticah. V spodnji tabeli so podatki podjetja.\
\>", "Text",
 CellChangeTimes->{{3.839491977604467*^9, 3.8394919907061853`*^9}, 
   3.839596254107645*^9},ExpressionUUID->"b4a4d569-2d52-4395-9294-\
07369a0d86ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompanyData", "[", 
  RowBox[{
   TemplateBox[{"\"NVIDIA\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Company\"", ",", "\"NVIDIACorporation::7ymsk\""}], "]"}], 
     "\"Entity[\\\"Company\\\", \\\"NVIDIACorporation::7ymsk\\\"]\"", 
     "\"company\""},
    "Entity"], ",", " ", "\"\<Dataset\>\""}], "]"}]], "Input",
 CellChangeTimes->{
  3.83949199734636*^9, {3.839586618697196*^9, 3.8395866233284607`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e502ea71-f627-4cd0-9126-901600a2ba8a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      EntityProperty["Company", "AccountsPayable"] -> 
       Quantity[9.88*^8, "USDollars"], 
       EntityProperty["Company", "AccountsReceivable"] -> 
       Quantity[2.2415*^9, "USDollars"], 
       EntityProperty["Company", "AccumulatedDepreciation"] -> 
       Quantity[-3.71146*^8, "USDollars"], 
       EntityProperty["Company", "AdditionalPaidInCapital"] -> 
       Quantity[8.051*^9, "USDollars"], 
       EntityProperty["Company", "Address"] -> {"2788 San Tomas Expressway"}, 
       EntityProperty["Company", "Amortization"] -> 
       Quantity[1.4251*^7, "USDollars"/"Years"], 
       EntityProperty["Company", "AssetsTurnover"] -> 0.239723, 
       EntityProperty["Company", "BeginningCashPosition"] -> 
       Quantity[1.0896*^10, "USDollars"], 
       EntityProperty["Company", "CapitalExpenditure"] -> 
       Quantity[-1.128*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "Cash"] -> Missing["NotAvailable"], 
       EntityProperty["Company", "CashAndCashEquivalents"] -> 
       Quantity[5.4665*^9, "USDollars"], 
       EntityProperty["Company", "CashDividendsPaid"] -> 
       Quantity[-3.95*^8, "USDollars"/"Years"], 
       EntityProperty["Company", "CashEquivalents"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "CashFlowFromContinuingFinancingActivities"] -> 
       Quantity[3.804*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "CashFlowFromContinuingInvestingActivities"] -> 
       Quantity[-1.9675*^10, "USDollars"/"Years"], 
       EntityProperty["Company", "CashFlowFromContinuingOperatingActivities"] -> 
       Quantity[5.822*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "CashFlowFromDiscontinuedOperation"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "CashFromDiscontinuedFinancingActivities"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "CashFromDiscontinuedInvestingActivities"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "ChangeInAccruedExpense"] -> 
       Quantity[2.39*^8, "USDollars"/"Years"], 
       EntityProperty["Company", "ChangeInInterestPayable"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "ChangeInInventory"] -> 
       Quantity[-5.24*^8, "USDollars"/"Years"], 
       EntityProperty["Company", "ChangeInPayable"] -> 
       Quantity[3.63*^8, "USDollars"/"Years"], 
       EntityProperty["Company", "ChangeInTaxPayable"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "ChangeInWorkingCapital"] -> 
       Quantity[-7.03*^8, "USDollars"/"Years"], 
       EntityProperty["Company", "ChangesInCash"] -> 
       Quantity[-1.0049*^10, "USDollars"/"Years"], 
       EntityProperty["Company", "ChangesInReceivables"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "City"] -> 
       Entity["City", {"SantaClara", "California", "UnitedStates"}], 
       EntityProperty["Company", "CommonShares"] -> {
         Entity["Financial", "NASDAQ:NVDA"], 
         Entity["Financial", "DE:NVD"], 
         Entity["Financial", "F:NVD"]}, 
       EntityProperty["Company", "CommonStock"] -> 
       Quantity[1.*^6, "USDollars"], 
       EntityProperty["Company", "CommonStockIssuance"] -> 
       Quantity[1.4*^8, "USDollars"/"Years"], 
       EntityProperty["Company", "CommonStockPayments"] -> 
       Quantity[0., "USDollars"/"Years"], 
       EntityProperty["Company", "Coordinates"] -> {37.364613, -121.9679336}, 
       EntityProperty["Company", "CorporateStructure"] -> "Corporation", 
       EntityProperty["Company", "CostOfRevenue"] -> 
       Quantity[6.28*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "CurrentAccruedExpenses"] -> 
       Quantity[9.725*^8, "USDollars"], 
       EntityProperty["Company", "CurrentAssets"] -> 
       Quantity[1.617825*^10, "USDollars"], 
       EntityProperty["Company", "CurrentDebt"] -> 
       Quantity[1.15*^7, "USDollars"], 
       EntityProperty["Company", "CurrentLiabilities"] -> 
       Quantity[2.97675*^9, "USDollars"], 
       EntityProperty["Company", "CurrentNotesPayable"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "CurrentRatio"] -> 
       4.090446, EntityProperty["Company", "DeferredAssets"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "DeferredCosts"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "DeferredTaxAssets"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "DefunctDate"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "Depreciation"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "DepreciationAmortizationDepletion"] -> 
       Quantity[1.4251*^7, "USDollars"/"Years"], 
       EntityProperty["Company", "DepreciationAndAmortization"] -> 
       Quantity[1.4251*^7, "USDollars"/"Years"], 
       EntityProperty["Company", "EBIT"] -> 
       Quantity[4.593*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "EBITDA"] -> 
       Quantity[5.691*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "Employees"] -> Quantity[18975, "People"], 
       EntityProperty["Company", "EndCashPosition"] -> 
       Quantity[8.47*^8, "USDollars"], 
       EntityProperty["Company", "EntityClasses"] -> {
         EntityClass[
         "Company", {"City", {"SantaClara", "California", "UnitedStates"}}], 
         EntityClass[
         "Company", {
          "AdministrativeDivision", {"California", "UnitedStates"}}], 
         EntityClass["Company", {"Country", "UnitedStates"}], 
         EntityClass[
         "Company", {
          "MetropolitanArea", 
           "SanJoseSunnyvaleSantaClaraCAUnitedStatesMetro"}], 
         EntityClass["Company", {"PostalCode", "95051"}]}, 
       EntityProperty["Company", "EquityInvestments"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "FinancialHealthGrade"] -> "A", 
       EntityProperty["Company", "FinancialLeverage"] -> 1.704315, 
       EntityProperty["Company", "FinancingCashFlow"] -> 
       Quantity[3.804*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "FormerNames"] -> Missing["NotAvailable"], 
       EntityProperty["Company", "FoundingDate"] -> 
       DateObject[{1993}, "Year", "Gregorian", 2.], 
       EntityProperty["Company", "FreeCashFlow"] -> 
       Quantity[4.694*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "GeneralAndAdministrativeExpense"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "Goodwill"] -> 
       Quantity[3.30175*^9, "USDollars"], 
       EntityProperty["Company", "GoodwillAndOtherIntangibleAssets"] -> 
       Quantity[5.43475*^9, "USDollars"], 
       EntityProperty["Company", "GrossLoan"] -> Missing["NotAvailable"], 
       EntityProperty["Company", "GrossMargin"] -> 
       Quantity[60.38980000000001, "Percent"], 
       EntityProperty["Company", "GrossPPE"] -> 
       Quantity[2.99475*^9, "USDollars"], 
       EntityProperty["Company", "GrossProfit"] -> 
       Quantity[1.0395*^10, "USDollars"/"Years"], 
       EntityProperty["Company", "GrowthGrade"] -> "B", 
       EntityProperty["Company", "HeldToMaturitySecurities"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "Image"] -> 
       Image[CompressedData["
1:eJy9mk9oXUUUxh+6EbJxEVxkIShkJXHVRRfZiAEx4KbRlUFoTSxiiJAYROIu
uDHgIoKbuCgGV3ElDRaDf5CISipiiH8wtqlJY6NNSGsTG60+/PV9dBjOmbnv
3veCh5vHzdy58+d8833nzLz3wKkXTzx3V61WG7+HjxMnX35kbOzkKwP38s9T
o+PPnx4dHnp89KXh08Njx0/dTeF9/L3F3+37egk7f+WFTzce+2zjiRauqwdL
cVMzMzPHSlhfX9/Q0NDc3Nza2tr+/n7cwvLycm9vb1y5v79/c3MzN/ipqSnT
+PT09K1/D1ZXV3nRPKI7vbWwsFBynLTGkHZ2dnzX8/PzZqiDg4PJmrLFxUVT
Px6z8UMl++SXR99fu5/r7M8PcoUb3evf+DM8+uDCQ1dunIubmpiY6OjoqN2x
+N4XctPV1TU5OYm3w/hxMjOK63d2duKr5MipjJNN46yiemMl0Lh5RKFeZPH4
gSWHzT0DYL2Fd4PRkZkgI88tNibITHMdxaurkh3+s/vHX2sQ8KNLvecuPhwg
C1dcknxajGBJY/ysT4hDC6zhkZERM01KkuOHSrjXNCVXt4NgbpB01zKCANTT
05NrnHZyqzQHHJ7/affNr7dHv9h6+sfdNxDDjevvrV97Z+X3V9FGA1YSO11b
N862j6DmvrS0lHMv4pNUJyTU1ETHRGfAMuBi7SCIAUHMxEoINu0xjLzYWOcg
9dWvz364fgwg+Pz88pOgdmHv7Yt7Z8Dx4O/Le4crl669S50CAgZFPRIOyghb
ggkvmeUKmyCpmQu+GhgYiKvRNQFFT1kPhoMYcp3zJ+8iyP0No/fcLGI/l0eQ
efFi8fQZbRhezrb3PxZ2eB7qAdPun+elopSgogIUNCEpUHKDuhr2GRp6DpqB
4Q30fzoy6iT1BG8IJuZL3DGPaMRMx2NEs8EJVTkoJcf/yB2N0DjS7ddAd3d3
WEvlEaRBPxgv8orgSbt5a/u7q68JO/IW3A5A8HHv5rfg+M1v49Dwy61nVIH8
hHvA5UVYCaZJ9pXkIEsan9AXS5dP3TAjMPLrHJi0wmdnZ80j6GaE1NeBRAX4
1go56HMJRkIXxvOMGemuhCBTZt36mt5XBIukkAITiIgyBD5IB6CACDTiHeGP
Ejri0Q87r8dAh9dzHGyKIJ5PLkufc/IicGsK+N/w1MSgJE+Db+upTKbWjIM+
G0yqXxDSkghS2cwU412vEvxrkqV6g0RgEeCDesDEjWQTLSWfAUqAo1yvAJyi
5OL6cYT3NoiHK6Q3JeOgGWoOQebl85CAIK7zMS4WGdhkAOLfkAvVUxwszkVz
+Tw1jZ9humZUEkGfMCvkJefos27yTHmbiKbdN/t3beXATgm89oPgKBAhnUqA
GHrWGyLMW7F+ts9BTc1LbpAR8DVPIV14yrsGAiRI05EdCQfrjW04sS+uGdSg
JII+XlCiiOCHQeOmBegDleRwslBKSGYEqPgVEKQCARECKrHhIjjiE+DjpuVc
tABB1qEZf4ygdx3+USCjjt8zxhJaz2QyleKgzOt52PiUQdAHCyxs/RiPP74g
+MYtAEGgIeEMFYWJ2rwLoHp0JoN4Sj/1lMpcSC6EVaEEuVIuWoAgszMeQKAC
gqxSf96iufPIgMvEzZlJMpNpgYMFEbkMgtTxZw6hIybrPeY3hmij8kkczqaP
nQJ5qfCClYAYOBhwBHSoh5wSKEMhmwtK0N74FK4dDnoEYw5ipKamgpJV6Omh
N5lqUkVb4GBSCkoiyFBNpKtF+bbMR0lWSBzQZXFywjZBzBIuoElhOGMBa0Ch
AruMgBS6SgshyoCjpNhzEHGrpKLFCOI9gwJI4We/TpBQf0JedT+YRNDDFE7a
myLo0Wc6yIi2VNpe4QQjNVg4l4gN7iCeggMIICY6CYIUckMuSgWdyRAf0Vsp
J59gTf3QDtwkvQmxteVctN7goKlsEPR5uHb9yULT+JGoKCUMydQkD8mBaxD0
yZhAxEC26475OkmnAXcAUXs9sICPcJALxoELN0pjhB07CMlswA68wtay/Vy0
qYrWU6QmTBhykYX6LqqebPsQxr9exuODu2IEufHolzRG7jeGAUQdlAEQ1IN0
1w+/F6HEKVgJvoikztbqjWNwOAi+Oik1h6Vt5qJNEYRcXgyNmcgSEPTHKQUI
En3Qt+WG0SkJIYPx7IgPFooR9AGuksHfeHMUGyKJMIack8AHNKDJRQID6aSZ
ylp15uZPR8t/N9FyLiojPyn4UqbWwCW5XKvuB/VlZXfDcsfalDPB0EUBgskk
E0B7MuY7RVgKDrr17RKaSaoJOhATOdUFIrBPx6Q8Kv6a6X9QUW39Cr7vUG7j
G68aB8uYznjLIJjc6EErBrCUMhahyXlq0bYxZ5BURIOGgIV4combTa+COGiG
0U4mI/N7h9joMak2R/79IBMxW84CBGnfPPKHLcYKjm6aWtg1GIDK3BwhB+OT
7dh43R9rhFfwVbLxI/yVBb0Dlp9FDsHkqXvuZwbBfMSHlSV/ekFYJAVt4cdO
kLfpL53ANLeQmKz55Q/T9AhSQvqX/IEQyyMXLNr8pRMZL4MhR9KXhkma537p
pCw0Lkfq/X7HT5PpmGHw1n+HOJmH
         "], "Byte", ColorSpace -> "RGB", 
         Interleaving -> True, MetaInformation -> 
         Association[
          "Source" -> "http://www.brandsoftheworld.com/logo/nvidia-9", "URL" -> 
           "http://www.wolframcdn.com/waimage/hset037/cef/\
cef14fe1c64e82926c9479d1db788920_v001s.gif"]], 
       EntityProperty["Company", "IncomeTaxPayable"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "Industry"] -> 
       "Semiconductors", 
       EntityProperty["Company", "InterestBearingDepositsAssets"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "InterestBearingDepositsLiabilities"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "InterestExpense"] -> 
       Quantity[1.85*^8, "USDollars"/"Years"], 
       EntityProperty["Company", "InterestExpenseNonOperating"] -> 
       Quantity[1.85*^8, "USDollars"/"Years"], 
       EntityProperty["Company", "InterestExpenseOperating"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "InterestIncome"] -> 
       Quantity[5.8*^7, "USDollars"/"Years"], 
       EntityProperty["Company", "InterestIncomeNonOperating"] -> 
       Quantity[5.8*^7, "USDollars"/"Years"], 
       EntityProperty["Company", "InterestIncomeOperating"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "InterestPayable"] -> 
       Quantity[4.675*^7, "USDollars"], 
       EntityProperty["Company", "Inventory"] -> 
       Quantity[1.4625*^9, "USDollars"], 
       EntityProperty["Company", "InventoryTurnover"] -> 1.005185, 
       EntityProperty["Company", "InvestingCashFlow"] -> 
       Quantity[-1.9675*^10, "USDollars"/"Years"], 
       EntityProperty["Company", "LongTermDebt"] -> 
       Quantity[6.4615*^9, "USDollars"], 
       EntityProperty["Company", "LongTermDebtIssuance"] -> 
       Quantity[4.968*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "LongTermDebtPayments"] -> 
       Quantity[0., "USDollars"/"Years"], 
       EntityProperty["Company", "LongTermDebtTotalCapitalRatio"] -> 0.280874,
        EntityProperty["Company", "LongTermInvestments"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "MetropolitanArea"] -> 
       Entity["MetropolitanArea", 
         "SanJoseSunnyvaleSantaClaraCAUnitedStatesMetro"], 
       EntityProperty["Company", "MinorityInterest"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "MoneyMarketInvestments"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "Name"] -> "NVIDIA",
        EntityProperty["Company", "NetBusinessPurchaseAndSale"] -> 
       Quantity[-8.524*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "NetIncome"] -> 
       Quantity[4.332*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "NetIncomeCommonStockholders"] -> 
       Quantity[4.332*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "NetIncomeContinuousOperations"] -> 
       Quantity[4.332*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "NetIncomeDiscontinuousOperations"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "NetIncomeExtraordinary"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "NetIncomeGrowth"] -> 
       Quantity[46.778, "Percent"], 
       EntityProperty["Company", "NetIntangiblesPurchaseAndSale"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "NetInterestIncome"] -> 
       Quantity[-1.27*^8, "USDollars"/"Years"], 
       EntityProperty["Company", "NetInvestmentIncome"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "NetInvestmentPurchaseAndSale"] -> 
       Quantity[-1.0023*^10, "USDollars"/"Years"], 
       EntityProperty["Company", "NetLoan"] -> Missing["NotAvailable"], 
       EntityProperty["Company", "NetMargin"] -> 
       Quantity[29.122500000000002`, "Percent"], 
       EntityProperty["Company", "NetNonOperatingInterestIncomeExpense"] -> 
       Quantity[-1.27*^8, "USDollars"/"Years"], 
       EntityProperty["Company", "NetOperatingInterestIncomeExpense"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "NetPPE"] -> 
       Quantity[2.64275*^9, "USDollars"], 
       EntityProperty["Company", "NetPPEPurchaseAndSale"] -> 
       Quantity[-6.*^8, "USDollars"/"Years"], 
       EntityProperty["Company", "NetTechnologyPurchaseAndSale"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "NonCurrentAccruedExpenses"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "NonCurrentNoteReceivables"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "NonInterestExpense"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "NonInterestIncome"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "NotesReceivable"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "OperatingCashFlow"] -> 
       Quantity[5.822*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "OperatingExpense"] -> 
       Quantity[5.863*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "OperatingIncome"] -> 
       Quantity[4.532*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "OperatingIncomeGrowth"] -> 
       Quantity[18.2123, "Percent"], 
       EntityProperty["Company", "OperatingMargin"] -> 
       Quantity[33.26, "Percent"], 
       EntityProperty["Company", "OperatingRevenue"] -> 
       Quantity[1.6675*^10, "USDollars"/"Years"], 
       EntityProperty["Company", "OtherFinancialInstruments"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "OtherIncomeExpense"] -> 
       Quantity[3.*^6, "USDollars"/"Years"], 
       EntityProperty["Company", "OtherIntangibleAssets"] -> 
       Quantity[2.133*^9, "USDollars"], 
       EntityProperty["Company", "OtherShortTermInvestments"] -> 
       Quantity[6.79225*^9, "USDollars"], 
       EntityProperty["Company", "OwnershipType"] -> "PubliclyTraded", 
       EntityProperty["Company", "Position"] -> 
       GeoPosition[{37.364613, -121.9679336}], 
       EntityProperty["Company", "PostalCode"] -> "95051", 
       EntityProperty["Company", "PredecessorCompanies"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "PreferredStock"] -> 
       Quantity[0., "USDollars"], 
       EntityProperty["Company", "PreferredStockDividends"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "PreferredStockIssuance"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "PreferredStockPayments"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "PretaxIncome"] -> 
       Quantity[4.408*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "ProfitabilityGrade"] -> "C", 
       EntityProperty["Company", "PurchaseOfBusiness"] -> 
       Quantity[-8.524*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "PurchaseOfEquitySecurities"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "PurchaseOfFixedMaturitySecurities"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "PurchaseOfIntangibles"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "PurchaseOfInvestment"] -> 
       Quantity[-1.9342*^10, "USDollars"/"Years"], 
       EntityProperty["Company", "PurchaseOfLongTermInvestments"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "PurchaseOfPPE"] -> 
       Quantity[-6.*^8, "USDollars"/"Years"], 
       EntityProperty["Company", "PurchaseOfShortTermInvestments"] -> 
       Quantity[-3.134*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "PurchaseOfTechnology"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "ResearchAndDevelopment"] -> 
       Quantity[3.925*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "RetainedEarnings"] -> 
       Quantity[1.714025*^10, "USDollars"], 
       EntityProperty["Company", "RevenueGrowth"] -> 
       Quantity[20.6753, "Percent"], 
       EntityProperty["Company", "RevenuePerEmployee"] -> 
       Quantity[363194.19237749546`, "USDollars"/"Years"], 
       EntityProperty["Company", "ROA"] -> 
       Quantity[5.2341999999999995`, "Percent"], 
       EntityProperty["Company", "ROE"] -> Quantity[9.0421, "Percent"], 
       EntityProperty["Company", "SaleOfBusiness"] -> Missing["NotAvailable"],
        EntityProperty["Company", "SaleOfIntangibles"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "SaleOfInvestment"] -> 
       Quantity[9.319*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "SaleOfLongTermInvestments"] -> 
       Quantity[2.0862*^7, "USDollars"/"Years"], 
       EntityProperty["Company", "SaleOfPPE"] -> 
       Quantity[7.*^6, "USDollars"/"Years"], 
       EntityProperty["Company", "SaleOfShortTermInvestments"] -> 
       Quantity[2.515*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "SalesOfEquitySecurities"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "SalesOfFixedMaturitySecurities"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "SellingAndMarketingExpense"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "SellingGeneralAndAdministration"] -> 
       Quantity[1.938*^9, "USDollars"/"Years"], 
       EntityProperty["Company", "ShortTermDebtIssuance"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "ShortTermDebtPayments"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "Status"] -> 
       "Active", EntityProperty["Company", "StockholdersEquity"] -> 
       Quantity[1.481*^10, "USDollars"], 
       EntityProperty["Company", "SuccessorCompanies"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "TaxProvision"] -> 
       Quantity[7.6*^7, "USDollars"/"Years"], 
       EntityProperty["Company", "TotalAssets"] -> 
       Quantity[2.60265*^10, "USDollars"], 
       EntityProperty["Company", "TotalDebt"] -> 
       Quantity[7.668*^9, "USDollars"], 
       EntityProperty["Company", "TotalDeposits"] -> Missing["NotAvailable"], 
       EntityProperty["Company", "TotalExpenses"] -> 
       Quantity[1.2143*^10, "USDollars"/"Years"], 
       EntityProperty["Company", "TotalInvestments"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "TotalLiabilities"] -> 
       Quantity[3.48875*^9, "USDollars"], 
       EntityProperty["Company", "TotalNonCurrentAssets"] -> 
       Quantity[9.84825*^9, "USDollars"], 
       EntityProperty["Company", "TotalNonCurrentLiabilities"] -> 
       Quantity[2.44*^9, "USDollars"], 
       EntityProperty["Company", "TotalRevenue"] -> 
       Quantity[1.6675*^10, "USDollars"/"Years"], 
       EntityProperty["Company", "TotalTaxPayable"] -> 
       Quantity[6.425*^7, "USDollars"], 
       EntityProperty["Company", "TradingLiabilities"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Company", "TradingSecurities"] -> 
       Missing["NotAvailable"], EntityProperty["Company", "TreasuryStock"] -> 
       Quantity[1.03885*^10, "USDollars"], 
       EntityProperty["Company", "UnearnedIncome"] -> Missing["NotAvailable"],
        EntityProperty["Company", "Website"] -> "https://www.nvidia.com", 
       EntityProperty["Company", "WorkingCapital"] -> 
       Quantity[1.32015*^10, "USDollars"]], "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 183], "Meta" -> 
     Association["ID" -> 47708738794596], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 183], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 183, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"accounts payable\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "AccountsPayable"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                   InterpretationBox[
                   "9.88`*^8", 9.88*^8, Selectable -> False]}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "AccountsPayable"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"accounts receivable\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "AccountsReceivable"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                   InterpretationBox[
                   "2.2415`*^9", 2.2415*^9, Selectable -> False]}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "AccountsReceivable"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"accumulated depreciation\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "AccumulatedDepreciation"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                   InterpretationBox[
                    RowBox[{"-", "3.71146`*^8"}], -3.71146*^8, Selectable -> 
                    False]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "AccumulatedDepreciation"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"additional paid in capital\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "AdditionalPaidInCapital"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                   InterpretationBox[
                   "8.051`*^9", 8.051*^9, Selectable -> False]}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "AdditionalPaidInCapital"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"address\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "Address"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"2788 San Tomas Expressway"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"2788 San Tomas Expressway"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    EntityProperty["Company", "Address"]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "Address"]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"amortization\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "Amortization"]]}, "Item", False],
                "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{"1.4251`*^7", 
                   RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                   RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
                   "US dollars per year", 
                   FractionBox["\"USDollars\"", "\"Years\""]}, 
                  "QuantityPrefixUnit", SyntaxForm -> Mod], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "Amortization"]]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"assets turnover\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "AssetsTurnover"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.239723"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "AssetsTurnover"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"beginning cash position\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "BeginningCashPosition"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                   InterpretationBox[
                   "1.0896`*^10", 1.0896*^10, Selectable -> False]}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "BeginningCashPosition"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"capital expenditures\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "CapitalExpenditure"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"-", "1.128`*^9"}], 
                   RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                   RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
                   "US dollars per year", 
                   FractionBox["\"USDollars\"", "\"Years\""]}, 
                  "QuantityPrefixUnit", SyntaxForm -> Mod], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "CapitalExpenditure"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"cash\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "Cash"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "Cash"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"cash and cash equivalents\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "CashAndCashEquivalents"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                   InterpretationBox[
                   "5.4665`*^9", 5.4665*^9, Selectable -> False]}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "CashAndCashEquivalents"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"cash dividends paid\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "CashDividendsPaid"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"-", "3.95`*^8"}], 
                   RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                   RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
                   "US dollars per year", 
                   FractionBox["\"USDollars\"", "\"Years\""]}, 
                  "QuantityPrefixUnit", SyntaxForm -> Mod], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "CashDividendsPaid"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"cash equivalents\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "CashEquivalents"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "CashEquivalents"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"cash flow from continuing financing activities\"", 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Company", "CashFlowFromContinuingFinancingActivities"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{"3.804`*^9", 
                   RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                   RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
                   "US dollars per year", 
                   FractionBox["\"USDollars\"", "\"Years\""]}, 
                  "QuantityPrefixUnit", SyntaxForm -> Mod], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Company", "CashFlowFromContinuingFinancingActivities"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"cash flow from continuing investing activities\"", 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Company", "CashFlowFromContinuingInvestingActivities"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"-", "1.9675`*^10"}], 
                   RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                   RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
                   "US dollars per year", 
                   FractionBox["\"USDollars\"", "\"Years\""]}, 
                  "QuantityPrefixUnit", SyntaxForm -> Mod], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Company", "CashFlowFromContinuingInvestingActivities"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"cash flow from continuing operating activities\"", 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Company", "CashFlowFromContinuingOperatingActivities"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{"5.822`*^9", 
                   RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                   RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
                   "US dollars per year", 
                   FractionBox["\"USDollars\"", "\"Years\""]}, 
                  "QuantityPrefixUnit", SyntaxForm -> Mod], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Company", "CashFlowFromContinuingOperatingActivities"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"cash flow from discontinued operation\"", FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Company", "CashFlowFromDiscontinuedOperation"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Company", "CashFlowFromDiscontinuedOperation"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"cash from discontinued financing activities\"", FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Company", "CashFromDiscontinuedFinancingActivities"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Company", "CashFromDiscontinuedFinancingActivities"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"cash from discontinued investing activities\"", FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Company", "CashFromDiscontinuedInvestingActivities"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Company", "CashFromDiscontinuedInvestingActivities"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"change in accrued expense\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "ChangeInAccruedExpense"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{"2.39`*^8", 
                   RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                   RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
                   "US dollars per year", 
                   FractionBox["\"USDollars\"", "\"Years\""]}, 
                  "QuantityPrefixUnit", SyntaxForm -> Mod], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Company", "ChangeInAccruedExpense"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 183, 1], {1, 183 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 183, 1], {1, 183 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    183, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    183, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 183, 1], {1, 183 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 183, 1], {1, 183 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{458., {302.6875, 308.3125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{458., {302.6875, 308.3125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.839586629667883*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"1c71dcb7-468d-4f83-a742-a7213461bbcf"]
}, Open  ]],

Cell["\<\
Spodnji ukaz izri\[SHacek]e graf, ki nam pove \[OpenCurlyDoubleQuote]Gross \
profit\[CloseCurlyDoubleQuote], kar je vrednost dobi\[CHacek]ka s prodajo z \
od\[SHacek]tetimi stro\[SHacek]ki prodaje (TTM...zadnjih dvanajst mesecev, \
Quarterly...\[CHacek]etrtletje, Annual...letno). 
Pove nam kako u\[CHacek]inkovito podjetje uporablja svojo delovno silo in \
zaloge za proizvodnjo produktov ali storitev.\
\>", "Text",
 CellChangeTimes->{
  3.839492016620119*^9, {3.839600479161407*^9, 3.839600481283903*^9}, {
   3.8396005184909782`*^9, 3.839600556823329*^9}, {3.839645142455009*^9, 
   3.839645226313377*^9}},ExpressionUUID->"58322030-a303-424a-9484-\
f530eaabdd79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DateListPlot", "[", 
    RowBox[{
     RowBox[{
      TemplateBox[{"\"NVIDIA\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Company\"", ",", "\"NVIDIACorporation::7ymsk\""}], "]"}],
         "\"Entity[\\\"Company\\\", \\\"NVIDIACorporation::7ymsk\\\"]\"", 
        "\"company\""},
       "Entity"], "[", 
      RowBox[{"EntityProperty", "[", 
       RowBox[{"\"\<Company\>\"", ",", "\"\<NetIncome\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<TimeSeriesType\>\"", "\[Rule]", "#"}], ",", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "All"}]}], "}"}]}], "]"}], "]"}],
      ",", 
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "#"}], ",", " ", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"\"\<Annual\>\"", ",", "\"\<Quarterly\>\"", ",", "\"\<TTM\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{
  3.839492023450033*^9, {3.839586634843766*^9, 3.8395866516428432`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"eed2fe77-8023-49a4-af2c-2bf449edc705"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.34398, 0.49112, 0.89936], PointSize[0.012833333333333334`],
         AbsoluteThickness[3], CapForm["Butt"], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQQPXrY/dwQxgvubQXSD1REwX0GoajqI/pDA8AIs
bjtxKYhOaLcB8xPeLZ0Koi+srQDzH+jsmwiiC/5tgcgvVADLP1D5COYrHPi3
EUQHeOu+BJtbvXoXiD5QmAnmp/QcPQ7Wd2jpS4g7ltUcBJn/4iGY/2CG6QQQ
34Ff7hXYvHTddSB6g2kUmJ8RG3gQbH7bNIj8+cMHwOavuQTmM9yzBNtncJnv
NYheE371EIhe8NMLzD9Q5APmO3i1g/kCXzbcAJtfcBjM/7Fh8zOwudP/g/kr
Qm69A9ET9lq/Abv705UnYPP5KsB8g0DlD44AZRt07w==
         "]]}}, 
      {RGBColor[0.34398, 0.49112, 0.89936], PointSize[0.012833333333333334`], 
       AbsoluteThickness[3], CapForm["Butt"]}, {
       {RGBColor[0.34398, 0.49112, 0.89936], PointSize[0.012833333333333334`],
         AbsoluteThickness[3], CapForm["Butt"]}, {}}, {
       {RGBColor[0.34398, 0.49112, 0.89936], PointSize[0.012833333333333334`],
         AbsoluteThickness[3], CapForm["Butt"]}, {}}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{3.1582656*^9, 0},
    DisplayFunction->Identity,
    Frame->{{True, False}, {True, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameStyle->{{
       StrokeForm[
        Opacity[0]], 
       StrokeForm[
        Opacity[0]]}, {Automatic, None}},
    FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}]& , None}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
         None]}}, {{{{0., 
          FormBox["0", TraditionalForm], {0.01, 0.}}, {1.*^9, 
          FormBox[
           TemplateBox[{"\[Times]", "\"\[Times]\"", "1", 
             TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> 
              SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01,
           0.}}, {2.*^9, 
          FormBox[
           TemplateBox[{"\[Times]", "\"\[Times]\"", "2", 
             
             TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> 
              SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01,
           0.}}, {3.*^9, 
          FormBox[
           TemplateBox[{"\[Times]", "\"\[Times]\"", "3", 
             
             TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> 
              SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01,
           0.}}, {4.*^9, 
          FormBox[
           TemplateBox[{"\[Times]", "\"\[Times]\"", "4", 
             
             TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> 
              SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01,
           0.}}}, None}, {{{2.9979072*^9, 
          FormBox[
           StyleBox["\"1995\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           StyleBox["\"2000\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           StyleBox["\"2005\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           StyleBox["\"2010\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           StyleBox["\"2015\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           StyleBox["\"2020\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.9446784*^9, 
          FormBox[
           StyleBox["\"2025\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {2.9979072*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0294432*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0610656*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0926016*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1241376*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.187296*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.218832*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.250368*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.281904*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3450624*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3765984*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4081344*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4397568*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5028288*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5343648*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5659872*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5975232*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6922176*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7552896*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.818448*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.88152*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.9446784*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}}, {{2.9979072*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.9446784*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {2.9979072*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0294432*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0610656*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0926016*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1241376*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.187296*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.218832*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.250368*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.281904*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3450624*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3765984*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4081344*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4397568*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5028288*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5343648*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5659872*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5975232*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6922176*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7552896*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.818448*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.88152*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.9446784*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}}}}],
    GridLines->{None, {0., 1.*^9, 2.*^9, 3.*^9, 4.*^9}},
    GridLinesStyle->Directive[
      GrayLevel[0.4, 0.5], 
      AbsoluteThickness[1], 
      AbsoluteDashing[{1, 2}]],
    ImageSize->200,
    Method->{
     "NoShowPlotTheme" -> "Business", "OptimizePlotMarkers" -> True, 
      "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Annual\"", TraditionalForm],
    PlotRange->{{3.1582656*^9, 3.82104*^9}, {-6.7987*^7, 4.332*^9}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{{}, Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& }], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.34398, 0.49112, 0.89936], PointSize[0.011000000000000001`],
         AbsoluteThickness[3], CapForm["Butt"], LineBox[CompressedData["
1:eJxVkntIk1EYxj8MuhlzERghmzOC/MNg3VDaqC2ii6MYObCtiyuKnKXOrisT
vrKaRtky3ZiZTWvlyGzQupo2nYRZ1ppFQVFbN+cFWhKlSS7P89YfDcbz/c57
3vc8z/m+pC35a7fFcBy3buzPdOwnydP1KNnD0g+ZTPU2A/FQmZapw2si7kjd
yjTYawbzuy8bmXpbrMR2YwH2hZ20v/TgXqaKqTeJT7QfxL5F7cTVaYeYSj8H
iLU5B5gaBR+I62J4pu7Ub2BFh+oY04ieC8PXdUk5NDYOLHn/+iz8LRCDubeT
NVjfNId43FxzK8tnlhM/XFXCVDhPBeZjX+5iql6vo3p0wn6mlqMG4olL1jH1
XzMR98Si7j5ipv7kDXvg76qV6uPNGcj30kl1UaMJ+UY9VF+iOgx/Lh/xjXtl
uP9AgPK4X51BvpEQWLFHdBr5Zn0De+WpNvh7FqX5O2sq4W9I0Et9jRXIN1MM
1vdttSOfag7VnxZdxLk/ZODgrpILOCdRBfZusF3C3JU6sKVregPWCwxgf1dd
I+YsN4GFrmlOzMk30/z+F9XsviV2K5izF5yCjzYn9euralldmOsBS7RcPWO1
1UfnJybYGVseBGjeLyf8+8MhML9YAb/82Qj1T9ruQN/9KM1/1OVg/dwXQR/W
LTLchyJODDZm7UO+yN0U4jIx+qUfZWDhpal1WJ+iAvv3KpDPvVAHdlS5zuFe
JhvACsvzk9g330Tn/d5cjTkbzWD+/EA97v+4lebLm3E+N9cJDsaX43tW6Dxg
7s6oFX3FPpo3uAbzvA0BsPRNcS38ZYZoflgD/24+Qv2TimuQzxUFu0tqcJ60
W9CPukFyBecWiYhvDeI+JVdSiOsf43vV+2XEGRnXkHs4/V8defin2v/Y+zMb
zA8m4/vgkkxgb9JsL/Klm4kvFPng73sl8YK0FvgTO8HBr1mtyLfCQ/W84Q7k
MPrARmeDH/4SAlQvLA3A37IQWD2yHfVgboTmTdOgLrFFab/8Hfz4lYIB+P1R
eBvvZYcIzOXuRl1dkQLWd3d24n03y8DBU5lP4KM8HeyYrXkMf03agb9+2pDv
UzbNzw93K5tG383YlgNenRj/QvkHQSS3ow==
         "]]}}, 
      {RGBColor[0.34398, 0.49112, 0.89936], PointSize[0.011000000000000001`], 
       AbsoluteThickness[3], CapForm["Butt"]}, {
       {RGBColor[0.34398, 0.49112, 0.89936], PointSize[0.011000000000000001`],
         AbsoluteThickness[3], CapForm["Butt"]}, {}}, {
       {RGBColor[0.34398, 0.49112, 0.89936], PointSize[0.011000000000000001`],
         AbsoluteThickness[3], CapForm["Butt"]}, {}}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{3.1344192*^9, 0},
    DisplayFunction->Identity,
    Frame->{{True, False}, {True, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameStyle->{{
       StrokeForm[
        Opacity[0]], 
       StrokeForm[
        Opacity[0]]}, {Automatic, None}},
    FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}]& , None}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
         None]}}, {{{{-2.5*^8, 
          FormBox[
           TemplateBox[{"\[Times]", "\"\[Times]\"", 
             TagBox[
              InterpretationBox["\"-2.50\"", -2.5, AutoDelete -> True], 
              NumberForm[#, {
                DirectedInfinity[1], 2}]& ], 
             
             TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> 
              SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01,
           0.}}, {0., 
          FormBox["0", TraditionalForm], {0.01, 0.}}, {2.5*^8, 
          FormBox[
           TemplateBox[{"\[Times]", "\"\[Times]\"", 
             TagBox[
              InterpretationBox["\"2.50\"", 2.5, AutoDelete -> True], 
              NumberForm[#, {
                DirectedInfinity[1], 2}]& ], 
             
             TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> 
              SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01,
           0.}}, {5.*^8, 
          FormBox[
           TemplateBox[{"\[Times]", "\"\[Times]\"", 
             TagBox[
              InterpretationBox["\"5.00\"", 5., AutoDelete -> True], 
              NumberForm[#, {
                DirectedInfinity[1], 2}]& ], 
             
             TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> 
              SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01,
           0.}}, {7.5*^8, 
          FormBox[
           TemplateBox[{"\[Times]", "\"\[Times]\"", 
             TagBox[
              InterpretationBox["\"7.50\"", 7.5, AutoDelete -> True], 
              NumberForm[#, {
                DirectedInfinity[1], 2}]& ], 
             
             TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> 
              SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01,
           0.}}, {1.*^9, 
          FormBox[
           TemplateBox[{"\[Times]", "\"\[Times]\"", 
             TagBox[
              InterpretationBox["\"1.00\"", 1., AutoDelete -> True], 
              NumberForm[#, {
                DirectedInfinity[1], 2}]& ], 
             
             TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> 
              SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01,
           0.}}, {1.25*^9, 
          FormBox[
           TemplateBox[{"\[Times]", "\"\[Times]\"", 
             TagBox[
              InterpretationBox["\"1.25\"", 1.25, AutoDelete -> True], 
              NumberForm[#, {
                DirectedInfinity[1], 2}]& ], 
             
             TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> 
              SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01,
           0.}}}, None}, {{{2.9979072*^9, 
          FormBox[
           StyleBox["\"1995\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           StyleBox["\"2000\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           StyleBox["\"2005\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           StyleBox["\"2010\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           StyleBox["\"2015\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           StyleBox["\"2020\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.9446784*^9, 
          FormBox[
           StyleBox["\"2025\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {2.9979072*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0294432*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0610656*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0926016*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1241376*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.187296*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.218832*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.250368*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.281904*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3450624*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3765984*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4081344*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4397568*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5028288*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5343648*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5659872*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5975232*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6922176*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7552896*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.818448*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.88152*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.9446784*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}}, {{2.9979072*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.9446784*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {2.9979072*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0294432*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0610656*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0926016*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1241376*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.187296*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.218832*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.250368*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.281904*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3450624*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3765984*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4081344*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4397568*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5028288*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5343648*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5659872*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5975232*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6922176*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7552896*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.818448*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.88152*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.9446784*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}}}}],
    GridLines->{None, {-2.5*^8, 0., 2.5*^8, 5.*^8, 7.5*^8, 1.*^9, 1.25*^9}},
    GridLinesStyle->Directive[
      GrayLevel[0.4, 0.5], 
      AbsoluteThickness[1], 
      AbsoluteDashing[{1, 2}]],
    ImageSize->200,
    Method->{
     "NoShowPlotTheme" -> "Business", "OptimizePlotMarkers" -> True, 
      "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Quarterly\"", TraditionalForm],
    PlotRange->{{3.1344192*^9, 3.8287296*^9}, {-2.01338*^8, 1.3479765*^9}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{{}, Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& }], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.34398, 0.49112, 0.89936], PointSize[0.011000000000000001`],
         AbsoluteThickness[3], CapForm["Butt"], LineBox[CompressedData["
1:eJwlk2tIk2EUx98uqKXMVSSGqdNS+rDBvFE6hQlS4vZBUzInyiq1iZgr+jBM
YV5yRpLTdE6SmsRspsbEVeZlTmelFCkrS4Jiy0taIq8pplSaz/8ZjP9+z3nP
Of9znr1BF4vO5u5mGObczpfozse5qPkeT36k1lYQtVl1YHW65BbOF4yUswu0
RMUHntLnqxsbcB4zCuYdLG4iKpxz0Hi5qpmokvMNbBP6tRA1n1wBCzfdDURZ
ObOAOnF1RqIGT28weyG5k6gzMgCczGVN6JMtADP9rfeIyjWxYPmysZEoN1xC
6yXuK0ZepgwsTnSvIqqtzAfzfHh6opNdKrCTb62Dv3INja8F1sNHh47WG+ff
hu8pI9jwJw5x5ZaF9m/loT+v3Q62sXkPcO5w0P6+e0w0z0Xzuy10vuMrtJ9t
qxv+Jrapn721PfC3wVlEvU8JFswXHACevNT3DPNJBGD2Rkcf9rIuAlf/CxlE
30AJWL0ePEz3IgPrpX9HUfdqPjin5uVr+DqtAksVR8bho0gDNq2et8Fns45y
RBr6y0eMtH5MW8kw8VdooX5z0noJJ+vs4LGV3OeEtUMOsLjtsYXw5IIL7NRH
aQmr77LghaRQM+oMbNN4phf2xcxzfmDe0PR21PEOAPMuC57g/AUfrFya7cJ9
zYjADT5h8K/0ktD84c0R3HeUDKzISsF+tPvzwQajwIo9R6jAHqlxA9h/lgbs
zDuEeHKVjvafsKM+E2YEb2wkop5YZgGLtS2Iqyvs1N+dj/2Yr9MBZr5G4/6U
6S5w9dsh3J9ZzYLHnIYh+G7fBp+KvIL6wvecn0Q706cwj7PUHyy9bgXzHvHB
004F8uWTIjDz0IV8w2YS2HZNiufV7zJo3K2M/j9+K8DyuYQ3OA9SgYXNng7M
laQBc9fM0/C31ggW14R8wXMBRjAb7uHCfGcsNP9V7AzmU9rBG+aeefTxc9B8
RdgS/CW4aNzixmK+QhbsW1OygvmatsGmtM/LuK94DvL0h2/iPeIW+IOFq4Wz
uK8GPtj3/jr8aAdFYPmvD4gr65PAqtI+5Jv7M8AndonpezarAHMry2hdjopq
yjHqr7cKfDR6ejX+P/avuN4=
         "]]}}, 
      {RGBColor[0.34398, 0.49112, 0.89936], PointSize[0.011000000000000001`], 
       AbsoluteThickness[3], CapForm["Butt"]}, {
       {RGBColor[0.34398, 0.49112, 0.89936], PointSize[0.011000000000000001`],
         AbsoluteThickness[3], CapForm["Butt"]}, {}}, {
       {RGBColor[0.34398, 0.49112, 0.89936], PointSize[0.011000000000000001`],
         AbsoluteThickness[3], CapForm["Butt"]}, {}}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{3.1582656*^9, 0},
    DisplayFunction->Identity,
    Frame->{{True, False}, {True, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameStyle->{{
       StrokeForm[
        Opacity[0]], 
       StrokeForm[
        Opacity[0]]}, {Automatic, None}},
    FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}]& , None}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
         None]}}, {{{{0., 
          FormBox["0", TraditionalForm], {0.01, 0.}}, {1.*^9, 
          FormBox[
           TemplateBox[{"\[Times]", "\"\[Times]\"", "1", 
             
             TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> 
              SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01,
           0.}}, {2.*^9, 
          FormBox[
           TemplateBox[{"\[Times]", "\"\[Times]\"", "2", 
             
             TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> 
              SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01,
           0.}}, {3.*^9, 
          FormBox[
           TemplateBox[{"\[Times]", "\"\[Times]\"", "3", 
             
             TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> 
              SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01,
           0.}}, {4.*^9, 
          FormBox[
           TemplateBox[{"\[Times]", "\"\[Times]\"", "4", 
             
             TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> 
              SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01,
           0.}}, {5.*^9, 
          FormBox[
           TemplateBox[{"\[Times]", "\"\[Times]\"", "5", 
             
             TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> 
              SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01,
           0.}}}, None}, {{{2.9979072*^9, 
          FormBox[
           StyleBox["\"1995\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           StyleBox["\"2000\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           StyleBox["\"2005\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           StyleBox["\"2010\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           StyleBox["\"2015\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           StyleBox["\"2020\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.9446784*^9, 
          FormBox[
           StyleBox["\"2025\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {2.9979072*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0294432*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0610656*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0926016*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1241376*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.187296*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.218832*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.250368*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.281904*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3450624*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3765984*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4081344*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4397568*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5028288*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5343648*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5659872*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5975232*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6922176*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7552896*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.818448*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.88152*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.9446784*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}}, {{2.9979072*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {3.9446784*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.013888888888888888`, 0.}, 
          Directive[]}, {2.9979072*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0294432*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0610656*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.0926016*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1241376*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.187296*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.218832*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.250368*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.281904*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3135264*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3450624*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.3765984*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4081344*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4397568*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5028288*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5343648*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5659872*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.5975232*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6290592*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6922176*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7552896*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.818448*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.88152*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.9446784*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}}}}],
    GridLines->{None, {0., 1.*^9, 2.*^9, 3.*^9, 4.*^9, 5.*^9}},
    GridLinesStyle->Directive[
      GrayLevel[0.4, 0.5], 
      AbsoluteThickness[1], 
      AbsoluteDashing[{1, 2}]],
    ImageSize->200,
    Method->{
     "NoShowPlotTheme" -> "Business", "OptimizePlotMarkers" -> True, 
      "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"TTM\"", TraditionalForm],
    PlotRange->{{3.1582656*^9, 3.8287296*^9}, {-4.08184*^8, 5.327*^9}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{{}, Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& }]}], "}"}]], "Output",
 CellChangeTimes->{3.839586655828786*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"e05fa308-b6be-4c44-967e-dc56a8d1b638"]
}, Open  ]],

Cell["\<\
Najve\[CHacek]ji tekmec Nvidie je podjetje AMD, zato si poglejmo kako izgleda \
\"gross profit\" AMDja :\
\>", "Text",
 CellChangeTimes->{{3.839492103141602*^9, 
  3.839492107811755*^9}},ExpressionUUID->"55dce983-5f6c-487d-ae51-\
cb5c5fad54a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"DateListPlot", "[", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Advanced Micro Devices\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Company\"", ",", "\"AdvancedMicroDevices::7739t\""}], 
           "]"}], "\"Entity[\\\"Company\\\", \
\\\"AdvancedMicroDevices::7739t\\\"]\"", "\"company\""},
        "Entity"], "[", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<Company\>\"", ",", "\"\<NetIncome\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<TimeSeriesType\>\"", "\[Rule]", "#"}], ",", 
           RowBox[{"\"\<Date\>\"", "\[Rule]", "All"}]}], "}"}]}], "]"}], 
       "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "#"}], ",", " ", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"\"\<Annual\>\"", ",", "\"\<Quarterly\>\"", ",", "\"\<TTM\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.839492116935947*^9, {3.839586690098274*^9, 3.8395867034922647`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"2deaad7a-8012-4075-a693-8be42dc8e3a9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[3]], 
        LineBox[{{2.8715904*^9, -5.36*^7}, {2.9031264*^9, 1.454*^8}, {
         2.9347488*^9, 2.45*^8}, {2.9662848*^9, 2.28881*^8}, {2.9978208*^9, 
         3.05266*^8}, {3.0293568*^9, 3.00531*^8}, {3.0609792*^9, -6.895*^7}, {
         3.0925152*^9, -2.109*^7}, {3.1240512*^9, -1.0396*^8}, {
         3.1555872*^9, -8.8936*^7}, {3.1872096*^9, 9.83026*^8}, {
         3.2187456*^9, -6.0582*^7}, {3.2502816*^9, -1.303012*^9}, {
         3.2818176*^9, -2.7449*^8}, {3.31344*^9, 9.1156*^7}, {3.344976*^9, 
         1.65483*^8}, {3.376512*^9, -1.66*^8}, {
         3.3921229579831934`*^9, -1.7565*^9}}], 
        LineBox[{{3.451848161658031*^9, -1.7565*^9}, {3.4712064*^9, 
         3.76*^8}, {3.5027424*^9, 4.71*^8}, {3.5342784*^9, 4.91*^8}, {
         3.5659008*^9, -1.183*^9}, {3.5974368*^9, -8.3*^7}, {
         3.6289728*^9, -4.03*^8}, {3.6605088*^9, -6.6*^8}, {
         3.6921312*^9, -4.98*^8}, {3.7236672*^9, -3.3*^7}, {3.7552032*^9, 
         3.37*^8}, {3.7867392*^9, 3.41*^8}, {3.8052579484411354`*^9, 
         1.5995*^9}}]}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[3]]}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[3]]}, {}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[3]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {2.8715904*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {{
        StrokeForm[
         Opacity[0]], 
        StrokeForm[
         Opacity[0]]}, {Automatic, None}}, 
     FrameTicks -> {{Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}]& , None}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, {-1.5*^9, -1.*^9, -5.*^8, 0., 5.*^8, 1.*^9, 1.5*^9}},
      GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 200, 
     Method -> {
      "NoShowPlotTheme" -> "Business", "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Annual\"", TraditionalForm], 
     PlotRange -> {{2.8715904*^9, 3.8183616*^9}, {-1.7565*^9, 1.5995*^9}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Charting`FindScaledTicks[
        (Charting`SimpleTicks[#, #2, 6]& )[
         SlotSequence[1]], {Identity, Identity}]& }}], 
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[3]], 
        LineBox[CompressedData["
1:eJwl0l9IU3EUB/CRJLp82IMvVyPX01YPeoPyglQsy/WHiJVu0Z6Wf8v+OFot
K7O7FRnh1lxmGSQzStMHu2XWUGR39GAP7bKXoIcJl/5YgxGSFsh6aOd7BuO7
D+fce3733G1u7jrWts5gMNQWvpSFjyktfN9DP7aXd1A61qzs/tftlKImsXv+
naK0pezseMCVLIT818l+s+Ylq1Vt7OLALXJs1ceOrHdQKitB9tMbXsrljVG2
dgQW7aPssH8Y8xoUWP6yaxDn25fg+tv5m5SRcxp7/HQfZXpokV32KIJ5Z3Ls
xsYQpdqZZzfNhJGDxiVktg5127wA24p03N8ctcL6wlbMFwckrofqhii9s3ZY
/TaJuvLVyfZ38fnirXBsb/lD5Dsf++ivB7ivHuT+Twt3Mc8YheWsDIulo+wT
lm7MLVH4vGfvyNj/tgTXM4eC2L9bY++vv4j91yxy/9w03p9SnWOLRS3Y//E8
91t29FK/GDD+QN1/u4NscgmwWpENkc1OK9czH8JkT6/E9kxX47nG7bDsP3gJ
2eOEPUuPR6g/cq2V+y+X3cf7euaDY6tbhjFPC3LdVXIP+0gNwKYr0THs42MM
1rtfvcD+/7yEP+90x/F8mxJ8vUV6jv2vpGDzhfdPMOd3hutN/fi/6ZU5OD1y
YAzP15Dnuls6TzZUGH/CVVdP4nyCAJszG9DvqLfCy1OHp5LX+yYmOmvg3a5i
NfkfD2QC8A==
         "]], 
        LineBox[{{3.253761762420382*^9, -5.377015*^8}, {
         3.2580576*^9, -1.46356*^8}, {3.26592*^9, -1.40096*^8}, {
         3.2738688*^9, -3.1231*^7}, {3.2818176*^9, 4.3193*^7}, {3.28968*^9, 
         4.5091*^7}, {3.2975424*^9, 3.218*^7}, {3.3054912*^9, 4.3848*^7}, {
         3.31344*^9, -2.9963*^7}, {3.321216*^9, -1.7423*^7}, {3.3290784*^9, 
         1.1319*^7}, {3.3370272*^9, 7.6*^7}, {3.344976*^9, 9.5587*^7}, {
         3.352752*^9, 1.84524*^8}, {3.3606144*^9, 8.8847*^7}, {3.3685632*^9, 
         1.34455*^8}, {3.376106586858041*^9, -5.377015*^8}}], 
        LineBox[{{3.3945778427294116`*^9, -5.377015*^8}, {
         3.4000992*^9, -3.96*^8}, {3.400917773316279*^9, -5.377015*^8}}], 
        LineBox[{{3.4149111884910893`*^9, -5.377015*^8}, {
         3.4159104*^9, -3.58*^8}, {3.4176106227119136`*^9, -5.377015*^8}}], 
        LineBox[{{3.4286476036881356`*^9, -5.377015*^8}, {
         3.4317216*^9, -1.27*^8}, {3.434238627049499*^9, -5.377015*^8}}], 
        LineBox[{{3.446453723952756*^9, -5.377015*^8}, {
         3.4474464*^9, -4.08*^8}, {3.4553088*^9, -3.1*^8}, {
         3.4632576*^9, -1.06*^8}, {3.4668090124594183`*^9, 4.775025*^8}}], 
        LineBox[{{3.477164131240721*^9, 4.775025*^8}, {3.4789824*^9, 
         2.57*^8}, {3.4868448*^9, -4.3*^7}, {3.4947936*^9, -1.18*^8}, {
         3.5027424*^9, 3.75*^8}, {3.508646544*^9, 4.775025*^8}}], 
        LineBox[{{3.5110874608997774`*^9, 4.775025*^8}, {3.5183808*^9, 
         6.1*^7}, {3.5263296*^9, 9.7*^7}, {3.5342784*^9, -1.77*^8}, {
         3.5411451783864408`*^9, -5.377015*^8}}], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQnb2IVSMy9ZUjkGkXxnbgIJBmkCgG8xlmLWkE0Q6O
TWB+g9P2RSD5hqyJYL5DhuEeED/BfgFE/cT0hSB+gd16mP6JIP6G9H0QfsLj
NhD9YcJZCF/RYiqIvpB6B8K/IFQMUv8g5TWE36HVCOIr9P2C8FPMCkB0wnbO
12C+8aatIHmHHgkIX6t0KYgf0K0O5jesmwzmT9hiBuF/q14O4l+46wpRPy1w
Bti+OyEQ/tU/M0H8D7eTIfzc4gkg2oC1GKJf0HgH2H96TRD5Fac7wPYxT4Tw
l1TUg8ODaQGE/4WtBcRfoL0ewvcS6wXRD0L2Qfhr5IpA8gc0z0L4N/0ng8ND
4w6EL7JiNogWCHoNdy+IDqj+BdPfBHZfAOcbML+hJQ8cL/4SEH7ZhgawuyvU
IXyLOXNA9IGFZhD+X+clYPsWuL6B2r8Y7L75IW9g8Q2iFU4mQ/hv7bY7bnGc
6r43BcxXkSnb4wgAcS6uRw==
         "]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[3]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[3]]}, {}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[3]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {2.8321056*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {{
        StrokeForm[
         Opacity[0]], 
        StrokeForm[
         Opacity[0]]}, {Automatic, None}}, 
     FrameTicks -> {{Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}]& , None}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, {-4.*^8, -2.*^8, 0., 2.*^8, 4.*^8}}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 200, 
     Method -> {
      "NoShowPlotTheme" -> "Business", "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Quarterly\"", TraditionalForm], 
     PlotRange -> {{2.8321056*^9, 3.8261376*^9}, {-5.377015*^8, 4.775025*^8}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Charting`FindScaledTicks[
        (Charting`SimpleTicks[#, #2, 6]& )[
         SlotSequence[1]], {Identity, Identity}]& }}], 
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[3]], 
        LineBox[CompressedData["
1:eJwl021IU2EUB/DbC+r2IaRPraQWfRkUOk249slrtpsgxQiuvaApphUb2WhG
hWbXhYJScrdSFwXOF5hZ6pJqvuTciMCVW5oVBo5GmmWtELUoJcjnfwbj7Ldz
7/N/nrO7ncXnj5Su5zju4Nqb1bWXEBI/Z7EP+sBVVuXfEln7fi+r/h2l5D8N
dYG14lq2kktDN5k9SzZywbCNeSHJQY6OGpn1YissZ0mtrAoGDyzELXexajww
Qv1rk92sKufCsD/+jYfV8aYI9cPp6HvMMVq/z4T7/aZV6t/Roc/dVs+hfrvX
g5xhDTw+m/OAVa1DR/1yFfp6O0/9vmfIswyKcHST0Ie8GQk2/kuFlf4SWMiP
wS6vFT526AMcjdro/ob4R8hTO+CM4XlYr2qlvOzD2I+Q4KH9cCYnzpE6Qi5T
n8T5ToRhf6FFwfxTImTfqVuYf3IMlg1V1Zj/0VXy37uVmH+1+gvW+5FUzpyY
pyELm5uZtZKOXG/uYC6q4mFPaq0LeW6R+nzQySxXSuRRHtcrFSXkhyuXmMc7
rHBR3OkW5IVt1N+X3oi8kB32vzbg/PoxF6zUZjzB/H/1wjmun0HsY/sI3Dmb
G8J1SyHy48JXmP/iNJw44H2BuW+LwXLz8xbM37BKzp65wfK5reqvuG53mhv7
02hgIej2Mhv362DjxP0hnM/Mw51O0ySzRRDhtMWL7zCPTAlOnnn5ltl/tgTO
s1yeQJ7DCivF+R7k2W2UXz+G30+r2GHXcbERcxtwwfKZpnZ8/6mX3D+Evuz1
wVy3sQLrPg2R23oK8Fx9nKbztKmvYy6qGLywaxDrLURWYEvdHObNRVTz+B1q
agbpf6mBE66s8yEvRQdz34PteD428rAy5R7DPDaIcFlX8xSexz0SfMGZGQ2Y
NeYtPDl3wBAN/AdTGmwk
         "]], 
        LineBox[CompressedData["
1:eJxN0k1IFGEYB/Bhw5W9iaCMpwzBVYwUq6FD5Cw4l0xdbDyEl0HXvi4uSSGK
tIrgwfxir4GvIBGUuuBiKn6MtrbuxtaGhwpXGJSgHMHF8LJ4cJ//w4KH4T8/
3pnned6Z91p7V0unQ5Kk6uxFGTkx2hzf/nmytw3LmrWZTSmRgqWmZ4uU1rQN
l950fqdMiwxsTvXvUtbEXUd4/ncz7P8vw+Zh4Sqld8cNB+aC25RGVGGXze5Q
irQGGy+LUN8qaeX3C+rX0E/2waWN5VuYT+5mP92HVc8gbGldcXLg+STsj4kf
ZKNOcP2rzi9k/715WD3XY+TQk3VYnN35TE5PJHg/dixITnam2M6BIfTx2bn9
BjHHWIY99HMYfT65bMx/P28J872RYeNR1CR7R9xw4G3JNnkirMBqY+9X9NvX
eP3xB8xjpXRYLI5uYr69Dq6/citMrsnr5uf/6qjvvzHItubW0O/KJPu2exnf
wyG430lkgyyq5mFppmcc/fT1nF+TzcqEfXm/yYoU11vo/0hZ0GLz+qtQCP+7
L8P1leIwzofXdYx1n4J1tVmGA3uRd8geN/v60Xvsa1qB1bqHeD8pNNjMz8d5
sKb049x5QMY6YOtubRzf+fQF7H0weoA60QH410HvH88F10z2Ng==
         "]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[3]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[3]]}, {}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[3]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {2.8556928*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {{
        StrokeForm[
         Opacity[0]], 
        StrokeForm[
         Opacity[0]]}, {Automatic, None}}, 
     FrameTicks -> {{Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}]& , None}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, {-2.*^9, -1.*^9, 0., 1.*^9, 2.*^9, 3.*^9}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 200, 
     Method -> {
      "NoShowPlotTheme" -> "Business", "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"TTM\"", TraditionalForm], 
     PlotRange -> {{2.8556928*^9, 3.8261376*^9}, {-2.184039*^9, 2.883*^9}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Charting`FindScaledTicks[
        (Charting`SimpleTicks[#, #2, 6]& )[
         SlotSequence[1]], {Identity, Identity}]& }}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.839586706584442*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"0fbc828b-dcd2-40f2-aeb9-28c94889c61d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Primerjava z najve\[CHacek]jim tekmecem", "Section",
 CellChangeTimes->{{3.839412281843964*^9, 
  3.839412324643257*^9}},ExpressionUUID->"dff97070-423f-4d7d-bb9b-\
db628d9c4c91"],

Cell["\<\
Primerjajmo \[CHacek]isti dobi\[CHacek]ek (od\[SHacek]teti \[CHacek]isto vsi \
stro\[SHacek]ki) podjetja AMD s podjetjem Nvidia.\
\>", "Text",
 CellChangeTimes->{{3.839492048968721*^9, 3.839492059799356*^9}, {
  3.839492101428814*^9, 3.839492136173132*^9}, {3.839600617930356*^9, 
  3.839600625117455*^9}},ExpressionUUID->"7b7d7ada-5835-4f86-b878-\
a1971ee92516"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nvidia", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     TemplateBox[{"\"NVIDIA\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Company\"", ",", "\"NVIDIACorporation::7ymsk\""}], "]"}], 
       "\"Entity[\\\"Company\\\", \\\"NVIDIACorporation::7ymsk\\\"]\"", 
       "\"company\""},
      "Entity"], "[", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<Company\>\"", ",", "\"\<NetIncome\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<TimeSeriesType\>\"", "\[Rule]", "#"}], ",", 
         RowBox[{"\"\<Date\>\"", "\[Rule]", "All"}]}], "}"}]}], "]"}], "]"}], 
    "&"}], "/@", 
   RowBox[{"{", "\"\<TTM\>\"", "}"}]}]}]], "Input",
 CellChangeTimes->{
  3.839492146076605*^9, {3.839586737922421*^9, 3.8395867379311657`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"61614d84-ea30-4516-b1bb-8480a5e3dc43"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["TimeSeries",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{}, {{}, {}, {
                 GrayLevel[0.5], 
                 PointSize[0.125], 
                 AbsoluteThickness[1.5], 
                 StyleBox[
                  LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                   "]], {FontFamily -> "Arial"}, StripOnInput -> 
                  False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
              AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
              GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
              DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{0., 50.}, {-7.030970816185017, 
               4.273359296964368}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{1, 1}, {1, 1}}, 
              Ticks -> {Automatic, Automatic}], 
             GridBox[{{
                TagBox[
                 TemplateBox[{
                   RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 Jan 2000\"", "SummaryItem"]}], 
                   RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"30 Apr 2021\"", "SummaryItem"]}]}, 
                  "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["86", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{}, {{}, {}, {
                 GrayLevel[0.5], 
                 PointSize[0.125], 
                 AbsoluteThickness[1.5], 
                 StyleBox[
                  LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                   "]], {FontFamily -> "Arial"}, StripOnInput -> 
                  False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
              AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
              GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
              DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{0., 50.}, {-7.030970816185017, 
               4.273359296964368}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{1, 1}, {1, 1}}, 
              Ticks -> {Automatic, Automatic}], 
             GridBox[{{
                TagBox[
                 TemplateBox[{
                   RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 Jan 2000\"", "SummaryItem"]}], 
                   RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"30 Apr 2021\"", "SummaryItem"]}]}, 
                  "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["86", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["True", "SummaryItem"]}], 
                RowBox[{
                  TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["1", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["None", "SummaryItem"]}], 
                RowBox[{
                  TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"89", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
                TagBox["\"\"", "SummaryItem"], 
                RowBox[{
                  TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                   "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   TemporalData[TimeSeries, {{{
       Quantity[4.102*^7, "USDollars"/"Years"], 
       Quantity[5.3046*^7, "USDollars"/"Years"], 
       Quantity[6.8868*^7, "USDollars"/"Years"], 
       Quantity[8.6336*^7, "USDollars"/"Years"], 
       Quantity[9.8469*^7, "USDollars"/"Years"], 
       Quantity[1.06832*^8, "USDollars"/"Years"], 
       Quantity[1.17886*^8, "USDollars"/"Years"], 
       Quantity[1.34479*^8, "USDollars"/"Years"], 
       Quantity[1.8092*^8, "USDollars"/"Years"], 
       Quantity[2.37515*^8, "USDollars"/"Years"], 
       Quantity[2.09193*^8, "USDollars"/"Years"], 
       Quantity[1.15896*^8, "USDollars"/"Years"], 
       Quantity[9.0799*^7, "USDollars"/"Years"], 
       Quantity[2.7301*^7, "USDollars"/"Years"], 
       Quantity[4.6197*^7, "USDollars"/"Years"], 
       Quantity[1.01189*^8, "USDollars"/"Years"], 
       Quantity[7.4419*^7, "USDollars"/"Years"], 
       Quantity[7.6021*^7, "USDollars"/"Years"], 
       Quantity[5.699*^7, "USDollars"/"Years"], 
       Quantity[7.6513*^7, "USDollars"/"Years"], 
       Quantity[8.8615*^7, "USDollars"/"Years"], 
       Quantity[1.3171*^8, "USDollars"/"Years"], 
       Quantity[2.01428*^8, "USDollars"/"Years"], 
       Quantity[2.40802*^8, "USDollars"/"Years"], 
       Quantity[3.01908*^8, "USDollars"/"Years"], 
       Quantity[3.2814*^8, "USDollars"/"Years"], 
       Quantity[3.40056*^8, "USDollars"/"Years"], 
       Quantity[3.81314*^8, "USDollars"/"Years"], 
       Quantity[4.47446*^8, "USDollars"/"Years"], 
       Quantity[4.89029*^8, "USDollars"/"Years"], 
       Quantity[5.75008*^8, "USDollars"/"Years"], 
       Quantity[7.04158*^8, "USDollars"/"Years"], 
       Quantity[7.97645*^8, "USDollars"/"Years"], 
       Quantity[8.42191*^8, "USDollars"/"Years"], 
       Quantity[5.4853*^8, "USDollars"/"Years"], 
       Quantity[3.74617*^8, "USDollars"/"Years"], 
       Quantity[-3.0041*^7, "USDollars"/"Years"], 
       Quantity[-4.08184*^8, "USDollars"/"Years"], 
       Quantity[-3.92557*^8, "USDollars"/"Years"], 
       Quantity[-3.46728*^8, "USDollars"/"Years"], 
       Quantity[-6.7987*^7, "USDollars"/"Years"], 
       Quantity[2.70945*^8, "USDollars"/"Years"], 
       Quantity[2.35286*^8, "USDollars"/"Years"], 
       Quantity[2.12571*^8, "USDollars"/"Years"], 
       Quantity[2.53146*^8, "USDollars"/"Years"], 
       Quantity[2.50771*^8, "USDollars"/"Years"], 
       Quantity[5.43305*^8, "USDollars"/"Years"], 
       Quantity[6.36716*^8, "USDollars"/"Years"], 
       Quantity[5.8109*^8, "USDollars"/"Years"], 
       Quantity[5.06308*^8, "USDollars"/"Years"], 
       Quantity[4.73781*^8, "USDollars"/"Years"], 
       Quantity[5.04588*^8, "USDollars"/"Years"], 
       Quantity[5.62536*^8, "USDollars"/"Years"], 
       Quantity[5.7999*^8, "USDollars"/"Years"], 
       Quantity[5.57392*^8, "USDollars"/"Years"], 
       Quantity[4.67046*^8, "USDollars"/"Years"], 
       Quantity[4.4*^8, "USDollars"/"Years"], 
       Quantity[4.99109*^8, "USDollars"/"Years"], 
       Quantity[5.30637*^8, "USDollars"/"Years"], 
       Quantity[5.8487*^8, "USDollars"/"Years"], 
       Quantity[6.31943*^8, "USDollars"/"Years"], 
       Quantity[6.28943*^8, "USDollars"/"Years"], 
       Quantity[5.26967*^8, "USDollars"/"Years"], 
       Quantity[6.*^8, "USDollars"/"Years"], 
       Quantity[6.14*^8, "USDollars"/"Years"], 
       Quantity[6.88*^8, "USDollars"/"Years"], 
       Quantity[9.15*^8, "USDollars"/"Years"], 
       Quantity[1.211*^9, "USDollars"/"Years"], 
       Quantity[1.657*^9, "USDollars"/"Years"], 
       Quantity[1.956*^9, "USDollars"/"Years"], 
       Quantity[2.286*^9, "USDollars"/"Years"], 
       Quantity[2.582*^9, "USDollars"/"Years"], 
       Quantity[3.047*^9, "USDollars"/"Years"], 
       Quantity[3.784*^9, "USDollars"/"Years"], 
       Quantity[4.302*^9, "USDollars"/"Years"], 
       Quantity[4.694*^9, "USDollars"/"Years"], 
       Quantity[4.141*^9, "USDollars"/"Years"], 
       Quantity[3.291*^9, "USDollars"/"Years"], 
       Quantity[2.742*^9, "USDollars"/"Years"], 
       Quantity[2.411*^9, "USDollars"/"Years"], 
       Quantity[2.796*^9, "USDollars"/"Years"], 
       Quantity[3.319*^9, "USDollars"/"Years"], 
       Quantity[3.389*^9, "USDollars"/"Years"], 
       Quantity[3.826*^9, "USDollars"/"Years"], 
       Quantity[4.332*^9, "USDollars"/"Years"], 
       Quantity[5.327*^9, "USDollars"/"Years"]}}, {
      TemporalData`UniformTimeSpecification[CompressedData["
1:eJxNVLltHEEQPIOWslAG/T8hCKAlQwHIECCLBpk/2Ls8TrVzuNrZanQ9sz//
vv3+9+fxeLy/zM/r//ePXz/mj7KXhAfRE0aQMWBqN9mBxa0tgF1VdGCnZx6u
kLvE4QqrpR+uCJsYATazgqtJIeCaEzO4Lj2vHhgU1uBGeRe4GW4Jbtn97jds
kevwCZVIhAqwODB53GHG5NmyCPLnOD3A1U6CsSN+9gDXXQ3yNa5NwE2WlYJm
80pBK27Xv2FbSR2ukeRKwZhypWBcTjDW5shhrH3tdKCJ2prsRAr55tkFYy28
FcZaapWBW+wJ+VbtouB22krByW2l4KzMkO/C5CjhdIFWCq7RK4WxPBXGXo0s
GDvxhK7J05xckzMkIN/LhGHsrDCX5XDnOTPqHZRFkB+j3lHvuPqNFGKKtVII
7UkR3LGmUMIYDSuFGPJKIZI6dMFqhrExzYk1eZpDmHyt1JCf47nB2OTShrFT
qmkAuLOxQn4a31fwwO6VwnwmaqUwF8MT8jPvQQcW20phBNlKITu5YWyRf31W
npCVGpNL7hoBjnGX/E+U4cyR
       "]]}, 1, {"Continuous", 1}, {"Discrete", 1}, 
     1, {ValueDimensions -> 1, DateFunction -> Automatic, 
      ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
      TemporalRegularity -> True}}, True, 12.],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.83958673897465*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"92dd992c-dec6-4b58-9cca-b36a80fdafa6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Amd", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     TemplateBox[{"\"Advanced Micro Devices\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Company\"", ",", "\"AdvancedMicroDevices::7739t\""}], 
         "]"}], "\"Entity[\\\"Company\\\", \
\\\"AdvancedMicroDevices::7739t\\\"]\"", "\"company\""},
      "Entity"], "[", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<Company\>\"", ",", "\"\<NetIncome\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<TimeSeriesType\>\"", "\[Rule]", "#"}], ",", 
         RowBox[{"\"\<Date\>\"", "\[Rule]", "All"}]}], "}"}]}], "]"}], "]"}], 
    "&"}], "/@", 
   RowBox[{"{", "\"\<TTM\>\"", "}"}]}]}]], "Input",
 CellChangeTimes->{
  3.839492157182403*^9, {3.83958674089188*^9, 3.839586740911231*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"65fb498f-e16f-489b-b6d8-f4944757f610"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["TimeSeries",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{}, {{}, {}, {
                 GrayLevel[0.5], 
                 PointSize[0.125], 
                 AbsoluteThickness[1.5], 
                 StyleBox[
                  LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                   "]], {FontFamily -> "Arial"}, StripOnInput -> 
                  False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
              AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
              GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
              DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{0., 50.}, {-7.030970816185017, 
               4.273359296964368}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{1, 1}, {1, 1}}, 
              Ticks -> {Automatic, Automatic}], 
             GridBox[{{
                TagBox[
                 TemplateBox[{
                   RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"30 Jun 1990\"", "SummaryItem"]}], 
                   RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 Mar 2021\"", "SummaryItem"]}]}, 
                  "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["124", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{}, {{}, {}, {
                 GrayLevel[0.5], 
                 PointSize[0.125], 
                 AbsoluteThickness[1.5], 
                 StyleBox[
                  LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                   "]], {FontFamily -> "Arial"}, StripOnInput -> 
                  False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
              AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
              GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
              DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{0., 50.}, {-7.030970816185017, 
               4.273359296964368}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{1, 1}, {1, 1}}, 
              Ticks -> {Automatic, Automatic}], 
             GridBox[{{
                TagBox[
                 TemplateBox[{
                   RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"30 Jun 1990\"", "SummaryItem"]}], 
                   RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 Mar 2021\"", "SummaryItem"]}]}, 
                  "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["124", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["True", "SummaryItem"]}], 
                RowBox[{
                  TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["1", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["None", "SummaryItem"]}], 
                RowBox[{
                  TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"90", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
                TagBox["\"\"", "SummaryItem"], 
                RowBox[{
                  TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                   "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   TemporalData[TimeSeries, {{{
       Quantity[3.12*^7, "USDollars"/"Years"], 
       Quantity[1.3*^6, "USDollars"/"Years"], 
       Quantity[-5.36*^7, "USDollars"/"Years"], 
       Quantity[-6.25*^7, "USDollars"/"Years"], 
       Quantity[-3.93*^7, "USDollars"/"Years"], 
       Quantity[-4.4*^6, "USDollars"/"Years"], 
       Quantity[1.454*^8, "USDollars"/"Years"], 
       Quantity[2.261*^8, "USDollars"/"Years"], 
       Quantity[2.502*^8, "USDollars"/"Years"], 
       Quantity[2.822*^8, "USDollars"/"Years"], 
       Quantity[2.45*^8, "USDollars"/"Years"], 
       Quantity[2.216*^8, "USDollars"/"Years"], 
       Quantity[2.446*^8, "USDollars"/"Years"], 
       Quantity[2.568*^8, "USDollars"/"Years"], 
       Quantity[2.28881*^8, "USDollars"/"Years"], 
       Quantity[2.51968*^8, "USDollars"/"Years"], 
       Quantity[2.80802*^8, "USDollars"/"Years"], 
       Quantity[3.06188*^8, "USDollars"/"Years"], 
       Quantity[3.05266*^8, "USDollars"/"Years"], 
       Quantity[3.1748*^8, "USDollars"/"Years"], 
       Quantity[3.16231*^8, "USDollars"/"Years"], 
       Quantity[2.85708*^8, "USDollars"/"Years"], 
       Quantity[3.00531*^8, "USDollars"/"Years"], 
       Quantity[2.29057*^8, "USDollars"/"Years"], 
       Quantity[1.024*^8, "USDollars"/"Years"], 
       Quantity[7.875*^6, "USDollars"/"Years"], 
       Quantity[-6.895*^7, "USDollars"/"Years"], 
       Quantity[-8.1326*^7, "USDollars"/"Years"], 
       Quantity[-3.6686*^7, "USDollars"/"Years"], 
       Quantity[-2.9999*^7, "USDollars"/"Years"], 
       Quantity[-2.109*^7, "USDollars"/"Years"], 
       Quantity[-9.6768*^7, "USDollars"/"Years"], 
       Quantity[-1.71296*^8, "USDollars"/"Years"], 
       Quantity[-1.38615*^8, "USDollars"/"Years"], 
       Quantity[-1.0396*^8, "USDollars"/"Years"], 
       Quantity[-1.696*^8, "USDollars"/"Years"], 
       Quantity[-2.5144*^7, "USDollars"/"Years"], 
       Quantity[-1.31695*^8, "USDollars"/"Years"], 
       Quantity[-8.8936*^7, "USDollars"/"Years"], 
       Quantity[2.2878*^8, "USDollars"/"Years"], 
       Quantity[3.56026*^8, "USDollars"/"Years"], 
       Quantity[8.70138*^8, "USDollars"/"Years"], 
       Quantity[9.83026*^8, "USDollars"/"Years"], 
       Quantity[9.18514*^8, "USDollars"/"Years"], 
       Quantity[7.28724*^8, "USDollars"/"Years"], 
       Quantity[1.33228*^8, "USDollars"/"Years"], 
       Quantity[-6.0582*^7, "USDollars"/"Years"], 
       Quantity[-1.94582*^8, "USDollars"/"Years"], 
       Quantity[-3.96872*^8, "USDollars"/"Years"], 
       Quantity[-4.64114*^8, "USDollars"/"Years"], 
       Quantity[-1.303012*^9, "USDollars"/"Years"], 
       Quantity[-1.440205*^9, "USDollars"/"Years"], 
       Quantity[-1.395363*^9, "USDollars"/"Years"], 
       Quantity[-1.172423*^9, "USDollars"/"Years"], 
       Quantity[-2.7449*^8, "USDollars"/"Years"], 
       Quantity[-8.3043*^7, "USDollars"/"Years"], 
       Quantity[8.9233*^7, "USDollars"/"Years"], 
       Quantity[1.64312*^8, "USDollars"/"Years"], 
       Quantity[9.1156*^7, "USDollars"/"Years"], 
       Quantity[2.8642*^7, "USDollars"/"Years"], 
       Quantity[7.781*^6, "USDollars"/"Years"], 
       Quantity[3.9933*^7, "USDollars"/"Years"], 
       Quantity[1.65483*^8, "USDollars"/"Years"], 
       Quantity[3.6743*^8, "USDollars"/"Years"], 
       Quantity[4.44958*^8, "USDollars"/"Years"], 
       Quantity[5.03413*^8, "USDollars"/"Years"], 
       Quantity[-1.66*^8, "USDollars"/"Years"], 
       Quantity[-9.61524*^8, "USDollars"/"Years"], 
       Quantity[-1.650371*^9, "USDollars"/"Years"], 
       Quantity[-2.180826*^9, "USDollars"/"Years"], 
       Quantity[-3.379*^9, "USDollars"/"Years"], 
       Quantity[-3.126*^9, "USDollars"/"Years"], 
       Quantity[-3.715*^9, "USDollars"/"Years"], 
       Quantity[-3.446*^9, "USDollars"/"Years"], 
       Quantity[-3.098*^9, "USDollars"/"Years"], 
       Quantity[-3.148*^9, "USDollars"/"Years"], 
       Quantity[-2.269*^9, "USDollars"/"Years"], 
       Quantity[-2.248*^9, "USDollars"/"Years"], 
       Quantity[3.76*^8, "USDollars"/"Years"], 
       Quantity[1.041*^9, "USDollars"/"Years"], 
       Quantity[1.308*^9, "USDollars"/"Years"], 
       Quantity[1.296*^9, "USDollars"/"Years"], 
       Quantity[4.71*^8, "USDollars"/"Years"], 
       Quantity[7.24*^8, "USDollars"/"Years"], 
       Quantity[8.28*^8, "USDollars"/"Years"], 
       Quantity[1.043*^9, "USDollars"/"Years"], 
       Quantity[4.91*^8, "USDollars"/"Years"], 
       Quantity[-6.09*^8, "USDollars"/"Years"], 
       Quantity[-6.33*^8, "USDollars"/"Years"], 
       Quantity[-8.87*^8, "USDollars"/"Years"], 
       Quantity[-1.183*^9, "USDollars"/"Years"], 
       Quantity[-7.39*^8, "USDollars"/"Years"], 
       Quantity[-8.5*^8, "USDollars"/"Years"], 
       Quantity[-6.45*^8, "USDollars"/"Years"], 
       Quantity[-8.3*^7, "USDollars"/"Years"], 
       Quantity[4.3*^7, "USDollars"/"Years"], 
       Quantity[8.1*^7, "USDollars"/"Years"], 
       Quantity[5.*^7, "USDollars"/"Years"], 
       Quantity[-4.03*^8, "USDollars"/"Years"], 
       Quantity[-5.63*^8, "USDollars"/"Years"], 
       Quantity[-7.08*^8, "USDollars"/"Years"], 
       Quantity[-9.22*^8, "USDollars"/"Years"], 
       Quantity[-6.6*^8, "USDollars"/"Years"], 
       Quantity[-5.89*^8, "USDollars"/"Years"], 
       Quantity[-3.39*^8, "USDollars"/"Years"], 
       Quantity[-5.48*^8, "USDollars"/"Years"], 
       Quantity[-4.98*^8, "USDollars"/"Years"], 
       Quantity[-4.22*^8, "USDollars"/"Years"], 
       Quantity[-5.33*^8, "USDollars"/"Years"], 
       Quantity[-6.6*^7, "USDollars"/"Years"], 
       Quantity[-3.3*^7, "USDollars"/"Years"], 
       Quantity[8.1*^7, "USDollars"/"Years"], 
       Quantity[2.39*^8, "USDollars"/"Years"], 
       Quantity[2.8*^8, "USDollars"/"Years"], 
       Quantity[3.37*^8, "USDollars"/"Years"], 
       Quantity[2.72*^8, "USDollars"/"Years"], 
       Quantity[1.91*^8, "USDollars"/"Years"], 
       Quantity[2.09*^8, "USDollars"/"Years"], 
       Quantity[3.41*^8, "USDollars"/"Years"], 
       Quantity[4.87*^8, "USDollars"/"Years"], 
       Quantity[6.09*^8, "USDollars"/"Years"], 
       Quantity[8.79*^8, "USDollars"/"Years"], 
       Quantity[2.49*^9, "USDollars"/"Years"], 
       Quantity[2.883*^9, "USDollars"/"Years"]}}, {
      TemporalData`UniformTimeSpecification[CompressedData["
1:eJxNVTmu21AQc5Eqt8gNZl+OEOBXOUKKAKlS/JQ5fCjbejONIcKk9ERyRt9+
/vnx69/j8fj8gp+P359/v3/FhZR7tBTRG4aGcRyY7E02sDViYKXg58B2zjza
JmUZcjN1Dbm5ylkOlMBfdKBa2iKbuNhAJ8WjB5ZqjDZCapHTKGhgcYuOtvp5
pxt2lhyyErl3DGQ1bzlQ2C7uga2+yJrCi2xOdYxVchCOsYoTdi5yVLoPzAjO
0Zb5pKDU4jxkJhyEFyx2PVrmYJKjZVz6IiuX5IJ4+R6tZWiN1t1rkUPNFjlx
s2MsIBIeY/kSLnJblx8o9Arwhky5UhCIbZElXMZYUXue8YYmqjJax60X2Yt8
jMWdrgwOTK2o0RbXSgF1f1X2DTvdxlgEbCsFWGk2ZLzD88gHNuUYq5q0Urhs
zUV2SR9jEW2wjTbgo442w1cKcOY5rzdsYZ8SXgfsKeHV7ZWCYRPwIotmjrGG
hFcKhubkImOabRprjvaPsYYDrxQsceJFTozoGGuIxGy0bddOuiHizZWCM9pd
C5bWlNAFD54SOt5ppYA0X+P9hg4nxlj37JWCozm0yKmR01i/RnCM9WpbKTg2
lA45CHUeY4Mx/jPdIa/xPbB6pYDlvdYmNrkFTwkxJ9fYHIgnrRQiSnORM0TH
WJjOKwV8Ml7jfcNGgw9MwmdgjMU3JFcKKXjWImOvmC7YmJ3RWopPvZ9bcZFD
9trMxGqcEmbiezUlzIpcKWRb0JALtsYYW6j6SgGjjySGLIjlaux/MtYlTQ==

       "]]}, 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
     ValueDimensions -> 1, DateFunction -> Automatic, 
      ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
      TemporalRegularity -> True}}, True, 12.],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.839586742157649*^9, 3.8395868169022284`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"48e2868a-1457-4227-a073-0d4b3699905d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Amd", " ", ",", "Nvidia"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2005", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2021", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], "*", 
         RowBox[{"10", "^", "9"}]}], ",", 
        RowBox[{"5", "*", 
         RowBox[{"10", "^", "9"}]}]}], "}"}]}], "}"}]}], " ", ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Amd\>\"", ",", "\"\<Nvidia\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.8394921647649307`*^9, {3.8395868185024157`*^9, 3.839586818519022*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"61c50de5-2f2e-4d3d-b88d-aba71bfe8c0a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxN1XtMU3cUB/A7nWD7x0LMttDNzC4mo4sECzLKkmVcpm2MG9q4XqeLjkaK
Osi0sbgxHnrp1EUnrMUpmJlwESJMeXSM8VLKZT6gSLGOPTC22Q2oCO0cAd0D
tmT8vmckIyGHD+d3f+f8zv01fXHnvs3ZiziOK5r/ZXH+h/eb7qWzP/S9xSyK
vwtk7U9rWJRXZJP/LDvWOx+kRw5ytr+U2TPjJO/odjJPLS8nK/1mZr2pGhbT
hWoWeaMH5qMeXWDRvK6H8oeGG1l0fTAEy9Hfe1gMnA5RfigZeU9uhPZvycHz
cs4c5c/okOe+UN9HnDzbhDrdGjhwd/1FFrXlOsrnqZDXuw2Ub7mMevYuE6w8
xbeg3pgAm/9JhF0dNpjfHoGldge8NeM2rChOer4s+mvUU5fDqd0TsF5VTfXW
bkQ//FIP9cPlVOIciT3kver3cL53h2A50+7C/FeHyN6sk5h/QgQWjQdLMP93
5sh/fVmE+Zeox7Hfr8vzmGO2aMj8sgpmraAjH8+tZbYeNMCexKMS6tWZKG/w
VTKLRQK534D1rkIbuWH2I+ZArQO2Ru2qQr0hJ+VfTT6Fen43LN804vz6QQl2
HU39FvN/3Ayvlx760McLPXD93Tf9WDfjJ7dm3sD8p4NwTGf7Ncz9+QgsVlyp
wvyNc+S1YydYfe459QOsW5VUh/40Gpj31bUzm9/QweZbX13C+XINcH1lzjCz
nTfBSdMHfsQ80gQ4YWzgB2Z5jw3eYs+/hXrlDti1c7sH9dxOqn98EO9P63LD
0jbTKcytU4LF3adr8P/RZnLHJeTFdi/MNZoLsW+bn3yuaQfu1S9BOs859SeY
iyoCT63swn5ToVnYfuw+5s2FVBN4D0eOdNHnUgMv/fgJL+qt1sFc2FeD+/Gk
AXaN1A1iHotN8N4LFSO4j/ECvL8yTcF9FGzw1ofxE5iH4KB6mRvGMQ+LEx4Z
bAxj/sVuync2YL3rvASb/3ga6+2FzbBVyIPFAi+suz6OenKNH+Y7emDOH6T+
N77fhrlXh2HtmqibmIc0C8tVxcOoO6CaxPrbm2D7TCwsjy27jD7642Cx6STu
m7UvhbyysR/va8oIWw88g/0VjUDPx6zrRr1YG6zNeOk79BfrIO8JwXy6E1aM
+wZwvhw3bPdJuE/WNIn2XxF1HfN4vRnm/7b4MP/dXlh6nHoF83f5J/97f7hv
gewgOarkMOrYwgvnPYk+ymbJh3/+FHXaVWH0v2FJB/o7EQtbt/XJeF+fxcHi
Wc01vK/WFJjPKLiBeiEj5XddRD9K0AJLbaW96O9OFu3fldzKrF/ioPUPLNjf
nuAkK03dqLfYTX4lrhPzWCRRvd+u9jBLq5phrjb/c9SzeBd8CPfjZX/4/+cN
6IK03zfFDfi8bA5T/kMPvg/MhbO0f8qzrbgfZlUEeVsK8vymWFi8c/U8Yn4c
OX6yHueqToH5tLfxfEAywnJ0NO6DUmWJLNwHRF8WrLyWNIA5T++HzW+VjmKf
vhJ4ZLTgXvq/BgKCoA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwlk2tIk2EUx99uailzFYkh6jSVPmwwb1ROYYKUuH3QlMyJtkptIuaKPgxT
mGbOSHKaTiWpScw0NSaum9fprJQix8qSoNjy0iyRdyqmVJrP/xmM/37nvOec
/3mevUEXik7n7mQY5sz2l+j2x76g+RFPfqTW3CBqHtKB1emSW4g7DZSzC7RE
xfuf0uerGuoRjxkD8w4UNxIVztlovlzVTFTJ+Q42C/1aiBqPucDCDXc9UVbO
ONEnrtZAVO/pDWbPJ3cRtUcFgJO5bDvmZAvATH/rPaJyTSxYvmRoIMqNkNB+
iXuLUZcpA4sT3SuJaivywTwfXhNRa7cKbOcP1cJfuYbmVwPr4KNTR/tN8G/D
95QBrP8Th7xy00Tnt/Iwn9dhAZvZvAeI22x0vu+udlrnoPU9JrpfiIvOM2/2
wN/kFvWzu6YX/tY5C+j3OcGE/YIDwNaLfc+wn0QAZq939uFc1kTgqn+hg5gb
KAGr14JH6LnIwE3Sv2PoeyUfnFP96g18nVSBpYrDE/BRpAG3r5w1w2ezjnJk
GubLRw20f0xbyQjxV2iifnPSXhBO1lnA467c54S1wzawuO2xibDV6QDbm6K1
hNV3WbAzKcyIPgNbNJ/phfNi5jk/sW9Yegf6eAeAeZcETxB/yQcrF2e7cV8z
InC9Tzj8K70ktH5kYxT3HS0DK7JScD7afflgvUEwhHOOVIE9UuMGcP5ZGrA9
7yDyyZU6On/Sgv5MuAG8vp6IfmKZCSzWtiCvvmGh/u586sd+XTYw8+0E7k+Z
7gBXvRvG/RnVLHjcrh+G744t8PGoy+gv/MD5RbQrfQr72Ev9wdJrQ2DeIz54
2q5AvdwqAjMPHajXbySBzVeleF79PoPm3cro/+O3AiyfS3iLeJAKLGz2tGGv
JA2Yu2qchr/VBrC4OvQrngswgNkIDwf2O2Wi9a9jZ7Cf0gJeN/bOY46fjdYr
whfhL8FB8yY3FvsVsmDf6hIX9mvcArenfVnCfcVzUNd06CbeI26BP1i4UjiL
+6rng33vr8GPdlAEli9/RF5ZlwRWlfah3tifAT66Q0zfs1kFmFtRRvtyVFRT
jrDxoXtCFudpnHdOvxz/H/3RuVI=
         "]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.3135264*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.3135264*^9, 3.818448*^9}, {-4000000000, 5000000000}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Amd\"", "\"Nvidia\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.839586819156948*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"e21cf72b-1bc8-47be-a243-3a5e70e49c40"]
}, Open  ]],

Cell["\<\
Vidimo, da ima Nvidia trenutno veliko ve\[CHacek] dobi\[CHacek]ka kot AMD, \
sploh v zadnjih 5 letih. Poglejmo si \[SHacek]e logaritmi\[CHacek]no krivuljo.\
\>", "Text",
 CellChangeTimes->{{3.839492169022208*^9, 
  3.839492194553306*^9}},ExpressionUUID->"f723e6db-349e-4ec0-a49b-\
3a9f961d6d52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Amd", " ", ",", "Nvidia"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2005", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2021", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
      "Automatic"}], "}"}]}], " ", ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Amd\>\"", ",", "\"\<Nvidia\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.839492200550089*^9, {3.839586821317789*^9, 3.839586821334982*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"930bc44f-a4bd-4a8e-b363-f4e4299c4ce1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{2.8556928*^9, 17.255928652779712`}, {2.8636416*^9, 
         14.077874822431765`}}], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQQGbgufOjq+YBRoPW3kAOQ7uG546qiRaFLZZWMM
4ge47H/qqNy1RLsiDMyfkHvuqSOvwcMT7qVg/oVpd586vlPmPSQeCOZvyH7z
1DH+/9afKeZg/oGs308d5TS916wJAPMZpnA9c1ycM7ldKRbMd9gr+cxxjdq3
xavtwXyFSRrPHA9Kxy5xjQDzDSaaP3O0dpALZCoB8wt2uT1zfD9pT45WF8S+
x6HPHBkPzjyR0glx346UZ46Pcztv5E8G8xdsL37mmMPE0pw7Ccx/8KDpmePf
SLX8wgqIfVyTnjlKh53xSGmF2Me58Jmj2Kk/zPcg7nHg2PDM0aP9P8uRQnD4
NBjuf+Z4cYHRP7VD+g4A6Ot0fg==
         "]], 
        LineBox[{{3.1634496*^9, 19.248271401061803`}, {3.171312*^9, 
         19.69051431985734}, {3.1792608*^9, 20.584162377723626`}, {
         3.1872096*^9, 20.706146127405603`}, {3.1949856*^9, 
         20.63826770474608}, {3.202848*^9, 20.4068056174625}, {3.2107968*^9, 
         18.707572504189702`}}], 
        LineBox[{{3.2975424*^9, 18.306761484290654`}, {3.3054912*^9, 
         18.917277617467622`}, {3.31344*^9, 18.3280828824848}, {3.321216*^9, 
         17.170384730020785`}, {3.3290784*^9, 15.867195422599067`}, {
         3.3370272*^9, 17.502713607697267`}, {3.344976*^9, 
         18.9243790284722}, {3.352752*^9, 19.722043382283797`}, {3.3606144*^9,
          19.91349045365378}, {3.3685632*^9, 20.036921464726166`}}], 
        LineBox[{{3.4712064*^9, 19.745099701354167`}, {3.4789824*^9, 
         20.763447626579243`}, {3.4868448*^9, 20.991765089981417`}, {
         3.4947936*^9, 20.982548434876495`}, {3.5027424*^9, 
         19.970368651980692`}, {3.5105184*^9, 20.40030195034999}, {
         3.5183808*^9, 20.534523712349532`}, {3.5263296*^9, 
         20.765367012965047`}, {3.5342784*^9, 20.011954685758795`}}], 
        LineBox[{{3.6052128*^9, 17.576710673657836`}, {3.6130752*^9, 
         18.209959712636714`}, {3.621024*^9, 17.72753356339242}}], 
        LineBox[{{3.7314432*^9, 18.209959712636714`}, {3.7393056*^9, 
         19.291974109895786`}, {3.7472544*^9, 19.450300161133523`}, {
         3.7552032*^9, 19.635593488316637`}, {3.7629792*^9, 
         19.42131262426027}, {3.7708416*^9, 19.067783986010905`}, {
         3.7787904*^9, 19.157844809929085`}, {3.7867392*^9, 
         19.64739303524779}, {3.7946016*^9, 20.003774681046863`}, {
         3.802464*^9, 20.22732882567417}, {3.8104128*^9, 20.59429545564945}, {
         3.8183616*^9, 21.635548547423028`}, {3.8261376*^9, 
         21.782097255602675`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwl0W9IU1EYBvDbJAySZVH2bbuNZUYYS+8UKmRPH2YxQRMq0az1jzAi2wdL
Q0okuhhYU3ARWglyP4QFEakVaquk8MNyzcyaq1Ys7jkuyBHIsJtre++Bw+EH
54Xn4d10vLH6lEEQBGv6Zt70iXJZxYpUa7xL3uFI2z/uU+Fd/iidmCQLTFGB
WzF7SU5Rxo61Qyq+DGt/1jvJbTsnVOR/Td4ZP022/QypcCD5oa+VfN74Q4X1
TeT6+x7yo9KEirINJ5fkEfKCW2BQWH12S1Zxxv2r1zBENEtN/j5yVDIxPN9f
YFAKyOKRQobZSCDQ1EXzbnk3w8D08Dqtmpxb5GKwnJmaPmSm/FV1tQx9S5X2
lEL2Xm1gMHrsh5+eo//Bh83p+Yn5DqOo52uXGRLdAzXtm/V8gz6Gz3u67S/m
aN42ozD0zmw3b92i91t+wpD39kGTv4Is3n/NEFsYvSg91vOFQgyjonvjoknv
9/c7Q2msJG+wQu9nTTCUh3uiN6+RvVMphs75OSnWSw4mjRzhXx3fVirkXIuJ
Y+TYmO/gK3KVq5BDswV/l8fJwuIujn+XXoazDRLty+ziuHcjLl3eRm7bW8tx
QfOsqj9K9nsaOLJmP71zXiH3O5s51MkDZbZOcrRR5lAqnw2dNZPF2z6Ouy05
dYGxYsd/em7jvQ==
         "]], 
        LineBox[CompressedData["
1:eJwlz2tIk1EYB/Dll3Do9EMtRCdKipWbvqUuaULvk1q0wsSQsYV4azAv4Upl
g5TWBSe0aJYuiT5IsWKVNlG6abbll4KyzWAFCk5m5s55qdnN1qo1n/fA4fDj
wPP8/5kNbVXaOIFAIIvd9Td2TFdDQShhIh3zzQVszK7JaBAC2njd5H60YFlE
wLgw7JmSotmkdAJ9tKbKoEaHnkgJaC5brIkqNBNQEBh5Gd8ZTitctz7hEAGt
t/qzrRztLNIQ4EZH3fl5aKuwicDUuZ4uKkR7CowEKmotH2kY5yXXmAm4HhFj
Av9f2WMjUN2p2rSYjRbstMfytLX2j8nQrGY8tm/7LaF5K9p0fprAWZnPBj/5
fvdnCUQK03P/LKP1qkUCzh+9a+xGPp8pRODSK8PBL2J0yBEl4G096vyQj2be
iSj81nx64yhF+7slFPK/NXw9uQ+dcUdKQb7b1L5tM7rOo6AgXlOdbpCjh8JK
Chf9OrGyhM83o6ZgXWp60KJGu9Z0FN6XPqxovsn3yzRS2FI2P7CD8P2UZgpz
b+cK9HuKMN/3AQr/Vlw5K8fRTLqdQl+3TO21oPUHxilckOxK+nsP7dRPU+hK
Laqr96HrUmcp3A3Xi3yJcsxXtkgh52lc8Uge2n8iRMHwfK9yQzk641qUwvI0
e4ZkoT0g4uC2+8VCCsF5yS0SDnr9g4frJ9CV/VIO7MO5x05dR1ufKTgodq9q
a118vitKDmaONKaUc3y+CTUH2e1j3I1Vvt+SjoNfWZEORzLuY0RGDlqGAvZO
hs/3uIeDYNrg60atnP0PRy0XCA==
         "]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     GridLines -> {None, None}, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.3135264*^9, 13.42693009079444}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.3135264*^9, 3.818448*^9}, {13.42693009079444, 
      22.396054064881273`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, 
       Charting`ScaledTicks[{Log, Exp}]}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Amd\"", "\"Nvidia\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.839586821982045*^9, 3.8395868477086487`*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"9b2e3afc-b694-4c29-9f7c-619a544cf241"]
}, Open  ]],

Cell["\<\
Zgoraj vidimo, da je po logaritmi\[CHacek]ni krivulji Nvidia prehitela AMD \
okoli leta 2012
Poglejmo si \[SHacek]e graf obeh delnic\
\>", "Text",
 CellChangeTimes->{{3.839492213555954*^9, 
  3.839492221354303*^9}},ExpressionUUID->"d84f25a0-fcfc-4c5e-a4c8-\
0d059b253120"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"FinancialData", "[", 
   RowBox[{
    NamespaceBox["LinguisticAssistant",
     DynamicModuleBox[{Typeset`query$$ = "AMD stock", Typeset`boxes$$ = 
      TemplateBox[{"\"Advanced Micro Devices Inc\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Financial\"", ",", "\"NASDAQ:AMD\""}], "]"}], 
        "\"Entity[\\\"Financial\\\", \\\"NASDAQ:AMD\\\"]\"", 
        "\"financial entity\""}, "Entity"], Typeset`allassumptions$$ = {}, 
      Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
      Typeset`querystate$$ = {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       1.107079`6.495723606280665, "Messages" -> {}}}, 
      DynamicBox[ToBoxes[
        AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
         Dynamic[Typeset`query$$], 
         Dynamic[Typeset`boxes$$], 
         Dynamic[Typeset`allassumptions$$], 
         Dynamic[Typeset`assumptions$$], 
         Dynamic[Typeset`open$$], 
         Dynamic[Typeset`querystate$$]], StandardForm],
       ImageSizeCache->{293.2265625, {8.11328125, 17.11328125}},
       TrackedSymbols:>{
        Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
         Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
      DynamicModuleValues:>{},
      UndoTrackedVariables:>{Typeset`open$$}],
     BaseStyle->{"Deploy"},
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True], ",", "\"\<Jan. 1, 2005\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.839492230453237*^9, {3.839590311884647*^9, 3.8395903134615993`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"88d857d4-8943-4006-8112-bb9e57024d8b"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
+pd2/99z1fiOm3M5v7S7o86jPmU+n32eGi/YWGPLiHmcX/p7I88n39IeyDWf
9sL+BvPpH8G2ofOpF+nvXDNfzR/KvoBY7LPWW0D///ofX47BC3i9YN+FBfSf
jGev41Prcw3wKfu8y3zUj+DwVx/5Ef97+i7kfKIP/+KFXK/oPXR6Ia+Xduvn
hcwHgh3pFzFeBAd9i7ge0Y/l5CI1n/3DIuYL+D/tYsY/+K2yWPHnfLtY6cGT
aoni219xieIv5F5CfcLfr5dwfMG+5EupV/i73FLyJ+NZOi9V/rfPXMr1wd9J
lin7w45lim9bx2XKv85py5S+PfuWkU/hw1pquWp3tIvAsP+/5Wo+3+7lSo/B
R8vpPxnPO2kF41XaAztWqPWE70e0I77irlTx5R+/UvO5daXqb727kvGN+Iq1
ivkR9hZcpfRp2bxK8W+/vUr5xxV9NfMf/J9vtdJroOlq5S/nDY09UdZwPOgh
zxrmY8GhRmvIH/gevkbp0xdpLeNL2oM519Je0b+lwVquV/KrfchanW9Xr1Xx
E862juNLfrbVXUd7JX87B61T+d2zYp2qH/7z68i31CdH7fXUH+pB//XkS8b3
LV2v5gueXa/rxdf19Ecs4bePn/6W+QKL/Bxf2sOn/OwfR+z/5Ge8Sb0KLdig
6pn1xAbGt/R3vN+gxnOn2Uj/oP5W3qjWaz8agWW9rjcbOb5gb8pNzO+CAxU2
KfvDXTbRX4I9rzbRXzK/P9lm8iE4VHaz6m/9d7Naj2PGZtor6w0m3sL1yf7E
4tjC8QTbO2yhPThvTI3oL/sR794t5FP2I7aSWzmftDvbbqU/5XrP5K3kT7B/
11bqAfuzh1vV+O5/ttFe7M8mRmCcN7Zvo/9w3ri/jfqD/XG2q/WFt2ynXqW/
LbSd8SHYGXMH86VgT4Ed1B/Ob5t2sD4IdtzaQX6wn4y2k+04H+XdyfyE/WST
nVy/YNf1neQP57c/d3E9sh8O5N5FfwgON9yl7LMN20W+wecfu9V6Qzl2cz7s
J+vvZv3BftKzm+OJHtyrdtMfgi3Z9hBDz3/toT8FuwbuoX0SH97le8iv4MA5
fb3TuZf6lXZPv71qPv+SvRxP9BQ6s5f8Yj/5RWNf733KnuDCfSofWE7tU/Fm
/7iP/pZ2ly1AfyE/zA+o+LUdD6jxne8CHE/m96TeT72Jvf5K++k/8HtkP/Mp
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
a5MfvN/xubayz5O+DvmBHqrXob2CQ73q8HrB1oV16B+8H5H2L6X/YJW/uD68
39HjLx2P8//iesH3sb+4Hrwv07Wu9v+cuoxf2Hu4LuMP79O8rku+8Hu0mfWo
P+SDA/WUPoMvNLYkrc/1w9/T6nN86HVfffaHXp/WZ3xBr4kakC/Uj1INlH+s
jxuoeHDEb0j/QJ/FIzDuB7duSP2hnj1oqPK3K24j8oH3TYo04vj4/WrLRuyP
+3/jG9E+1IdYjVV+9hdsrOpBqHlj8onfg45tTH7wvsnmxvQn6kO+Jir/W/5u
Qv/h9+KjmjC+sZ/Y0ITzo37caEI9CrY1bkq94X7E8Ka0H/cj1jVlfzzvuNqU
/sL9tEh/0x7cP1v9N/nC/uYSMPd/FkszNZ89ezPygecvK5rRP3j+cr4Z+cX9
kx/NWC9gb5bmjFc836jdXI1nDTbnerDf/dpc8e3O6KL9eJ+npkvNH+zjIv/Y
r39ykV/s19O14PyyHwxU0zjcs4Xp78F5w9eC9uO8maYl+cR5s3JL8ofzZveW
XD/Oy/NaGj5xf899tKWxH/ffLBVbsd7jfpq7FesPzsuzW5F/nJcPtWJ84bz0
qhXtx3no33+UvZ4Z/1D/uD+1/x9ej/PS8384P77HMbU1+cLzrr2tuT7cT33a
mvrA+ShhG/oDz7tKtuF8uJ+2qw3zGfTwqA3zH97vsLal/3A/tZjG/n/aKv84
7rfl/Li/Hqcd1wM9F26n2oMt2nF+7M/Gt6M+cH86ZnvmZ+i5QHsVL+Fm7Rmv
sH9Me+Yv6HlTe8Y/zkN5OyhsbdqB/EHPIztwPujZH9GO/eV1je2NOtIfOL8N
60j/Ir+t7cj14rx0pSPtxXnpj07kD/t1TyfmB+nvX9WJ68H+8mIn8oPzxq9O
1DOe12X7V+Vjy/l/Gb/Ix9//Zbzi+Vzmzmo8r7Ozyve2s51pL+rvF4NPVcf7
lRm6qPn9Nbqoeh/q3YX2o1587EJ9YT9jc6v2YFW3ut7SU2P7AjfjAeef1F3p
Tzw/rNRV17duERj79bldyQ/2Y0e6qvVaK3RT9dzRpRvtRX2e1Y3+hv0Hdf/g
y25qPFen7uyP55/Tu1M/8P+z7uQX9ibuofr7p/TgevG+7Z4erD/Ynz/pQX1h
f56gJ8cT7C7Rk/7G74F39aS/sT9/2JPj433VeL3UeN6ivRgPOF+06kX+8HuT
e704Pt6/jt2bfOP37YV603/4vYmrN/Mlfh8xrjfjGe/nx+jD+BEczN9HjWdp
1ofxgffHR/ehf+T3AK6NfdR4YXtfNb+tSV/qFfaP6Ev78XuZ9X3JB94fv9aX
4wl2NOzH8QS7h/Zjf9i/ph/tgf2X+zH/wv4/+qv1eQf3V/YGVvZnfYX9F/pr
+3/25/rxe+asA+hv/H5j2QDmU/x+49wA+hu/L/g2gPzj9wWZBnL9+H1BrYG0
H78n+DyQesXvTdIPIn/4PUH1QbQXvyfoNYjjye87PB8GcTz8firtYOobv/+q
Mpjji/3WHoPJh2DH/MFqvcFUHsWHpZKH8YDfy3T1KHtcczzMD/g9xGEP+cHv
TcoPoX/EPmfnIdSb/H7FM3MI40Gw/8AQxgN+//ViCOeXdnfHoep637Sh5Bu/
D983lP3l93WWZ0PJj/y+zp5omMKB/4bRv4LDu4eRPxnP9ngY+cHvAeMPJ//4
PWDx4cxH+L3tzuG8Xn6P6HgwnOuRdnfcEbRX2n1FRtBe+X1jsOUI9sfvbe+O
IJ/y+0tvrJH0J35vWXAk86O0h5uP5Hj4vejYkeQXvxeNPkrhUD6NrX+PYvwI
dowapeZzbxil7PmdIJiv8HvRxqPVeK7ho6ln2L9uNPUgv48OXB1Nf0q7s8EY
1lNp9wwZQ33B/tVjOJ/8nj10aQz5l9+vWy1j6V/8vn3QWF4v/YMrxtIewZYL
Y9X1rizj6G+ZP7x0nGq3Bcep651fxzGeYG/G8cwHsLfmeOoFv789PZ72RxI+
P43neIJ96SbwesHBahNov2BLrwnqeu/7CeRbcCDNROpBcLjyROpBsK37RMZv
ZOF7nuk/Nq3gUMpJ9I9ga8VJ1Kvo0+HW2D17EvmS/r5Dk2ivtNvLeelPaffO
8FLfggP7vdSX4PBzL/Ug9no6TFbjh/ZOZruMb306mf6RdkfC/9T8wcn/0T8S
f5bdGtsf/cd8J9hlnaLi0Vtsiupv2zGF9gp23p+i4tsTZyr1h9/nF56q8kOo
xVTFry/mNOpDcLDANPIFe5tPox4kX9jHTGP84fsW0abT/4LDeaer+WxNp5M/
2DtyOq/H9yP8GlvzzND+bjRDtbuHaexbO4Pzg+8rMxT/rvozFX9ez0yV/wKr
Zqp8Gb6ose3XTPIF/pbPUuu1np9F/vB9g++ztL2ZZzNe8H2DpbOVfuxnZyt/
uL7odm+GOUpfgRpzuB7Ez6k5Sp+ej3OUvv22uQqHqs5lfgXfPYF/72/A57u5
Wr+p52n7K89T67N3m6f1O1e3h1PMV/63VZiv/OHsMl/x7Zk1X+nbf3A+9Qc9
lF3AfAV+Oy1Q7b7pC9T6ggGNve19rLfgc4pPx/8en8pntic+lc+cCRaq/Bjy
LlR8WXctVHw4Hi5U/LnjLVL69hVdpPKTffsi5U/XvUXKXm/sxao9UGix4iPs
Wsz4hx7uLFb68sdYovQVyr9E2WdttkTlE8foJcofwahLVbsl71IVD/YmSzm/
7E9cI5Yy3+N7AuuXUh/Yn+Vexvnxe+CGy8gvfp8/dBn5x++Z10T0x/7y8jLG
H77fU28514v9+uDl9Ad+375yOfnE7/MvLlfj238up73Yrw9YQf1gv75sBfnG
fv3cCs6H/fq3FZwP56VMK+kv/H75jMbuzyvpf7nel34V9YHzRfVVjA/8fvbk
KjWf98MqNV8g7WraL+3hKqu5XnxPoIdu979dTT3g/JZqjRrfWmkN7cV+vesa
zfecNWp8S4q1an328msZ77C/81rFr3fmWtY7/P76wFq1XmeZdWo8T8d1nB/n
z2nrqD/Yv28d9YPz5zONfe3WK38G/1tPvcL+PesVH674fmVveJJf2Wfb6Vf2
OR/4lT89cTdQ7zhvFtnA8XDe3LaB68F58+4G5hN87yDWRqXXYMGNXC+ex7k2
Mj7B5+2Nyl+B6Js4H85v+TZRL/g9+9+bOD9+zz5qE8dHfEXZzPXivGnfrNod
jTdTrzhvDt/MeoLvCazbTL4RX7m2qOtdDbaQf5w/h2zhevG9g9VbqEfYf2kL
14ffs9fdqrB/0FZ1fWjFVjWf9YJud/zYqvgJ9t+m8pNl2TbFlz24TeUr11fd
7s24XdljW7yd+QX57fR2+gvn50/bGR84P6fbwfFw/qy2g/zivPle42CaneRb
sKXKTpVv7d13cv04z7/ZqdYfTrlLxZ+t4i7Fl9O9S/nfM3uXypfW5Lu1Hsrt
Jn/Qw7+7WS+Q32bsVvkjuH+3Gs/l2MN4xfcZOuxR+glM3aPz29495BP57eke
VR/8bfcqPYYm71Xt1t17dX57pLHbuk/NZ5m0T11v37FP6dd1f5/yvzdOQK0n
UDig1uvcGlD5xxMKqPrij7lf5c9QAY2tzfczX+F7Obf205/QR7QD5B/f98l3
gHzhfkTTA8xXqNcjDzD/yPXhPw/Sv7gfkecg7RfsbHSQ/sH9lGEH1fX+tQeV
Ph05D6nx3PUPqfF8Ht0eXHWI64O+Lx1S+vf+dVjNFxh4mPrG90eWHyb/2G+c
P8zrEY/fD1Pf+P5FvyP0h1xvXXpExafjrMbuL0cU374MR5U99kVHVby7Th2l
/rEf+niU/OD7RFWPsT/y2/FjKj/53x3jfLA39XEV39bKx9X1jm7HdX4LH1f5
ypLyhNKvvcIJ6gV67nJC5QvvLI1tyU5yveCz7Emdnztp7J+ucShwUo3nLn1K
5Rtf+1Oqvlj2ntL15Mkp6gPx1ea0yj9h72mV35wPT6v844l3RtVz68QztAf7
te1nuD7s1+5p7It9VsVjsNBZ1ivsH7acVeN575zl+vE92RhB5hN8Tyl/UNV7
W7Ogmi8U9Zwa35r3HOeHv5ucU/pwjzin9Gz587yuD7nPq/hwNTzPfAB9DtU4
sOY89YH7qTkuqPj11Lug4sE/+IKK/9DKC2p+68ULyj5fnYtKn8EBF+kv6HX5
RaUX+znd7vqm221LLql255lLSu+ez5dUf3/6ywo7Fl4m39DnSd3u+3BZjR9M
e0X1t1TV2HvsivJX4O0VdX041VXV31bpKvmH/V2vKv2GXl9V9c2a4prSv6P8
NVW/3J2vqfrlm6n725NeV/HlKnNd1Vdvx+u0B/vLadepZ+yP911nvGK/XuqG
ave30zj0n8bWPTeUvY7HN6gH7Bda3yTG8wHvTfbHeWPnTeYDxN+Dmyq+vXFv
qettE26p8Z3bgG0jniM/3L2l1uuPdVvxFSp4W+Uz9+bbyn++27dV/Q9Gv8P6
jnyW/47SU+DGHfoTfEYJqXxhs4e4HnwfqXGI/sHzreEhzWfku7QHfOa6y/7I
Zw3uqvzlG3KX60M+W31X2ePKfk/199a9p/gMDLrH+ML+bMU95gvszy7cU/nY
X/u+6h/qf1/ZZ112X/HvCN5X63F/vU8+oYe+D5R99sUPFB+u0w+ob9j/6YG2
P91DNZ7nxEOlZ//7h0pPoTSPtL1VHql239FHan3BN4/ob+wnUz1W49srPqZe
YK/7sdJz+NVjpXdb8ifKX85yTzge9PCvxv4ZT5ReHEme0j6cPx1PVT3ydXjK
fIPz59Sn9Cfun+x7qvks+Uzz2faZWm948jPlP9vuZ4o/56NnHB/8/vOc9oHf
Sc9pH+rzjuf0N+y//5z6Ap/jX9AefG9x6wt1vTf0gvEOe2O+VHyFC7yk/sHn
JmCev/23XtJ+fH8s2ivWQ3zfMN8r+gvfN2wa0Y58cP0V/Yt8EOW1yr/2PK9V
vnA1eq3qgXeYbrdFCut6kTOs8o+nfpj2I/48YZVvQ6vCSq/ubG+0nv96o/QZ
HPhG5QfLijdKD/bzuj3gfMv5oed+b9V4tqVvlf+dZ3W758tb6gl66POO64Ue
Fr0jH9DDqXdK776P75Q+grb3Kp+6FgBzv+U9/l7pL/DuPf0H+1N/UOuxVf5A
fUO/4Q+qvzXlRzWeo8JHxhfycReNLa8+qvXak33S+aGsxt5OGgemf1Lx5kz8
WfnbU/oz/QM9tP+s9BGa8lnVR+te3d9X4ovSX7DNF1XPLJO/cD3Yr+36wvGw
X3v4hfkL559WX6kfnNcmfqW92G9u/8r+2G/e+0r/4v5J7G/M9zivjfvGeMd5
c8s3xhvOa3c0Dsb4Tnvle72WAt/pLzw/2vid+QLfR7/5nXrC/feoPzifYFve
H7QPzzua/FDjha79YP7C8/s/fzL/4Pl97p/qenfDn+RXsG/oT8YLnif+8Yt8
4XlMjl/a/nq/1PiBwb+ofzz/WvmL/ON5TFbLc7M+wf46wL/1jO99DwBmf+ty
YH4P2XEOmN8HD9b6Q7Vb+gHzeaN9CTCft7nOAHM93s/AEfz2jvT8//PnXAjM
502ek8B8HuP/AEz+QmkjP///fLjnR1br8x3TOPgWmN/3t1f687mJN/B5+E9l
T/g1MP1jSxHl+f/Xj7N8FGWPp3MUtV7ryyicH8+/kkbl/HieVCYq+Yss9naM
yvEFB6dF5frwPDRRtOdGD9LuLQVsMd/vD7SLRn9Cz/9pbNsDzOet/uLRlb2h
1tHV+q3e6Mof7gcaW1rFUNfbJ8RQ/nJti6HGC8SKqfhyjo2prvdsjqn9fTum
4i8UPZbSjzV/LNXft0Hj4I1YanxL1Niq3W6PrfltDMznibbIcegPfI88FzCf
t3saxFH+8A/R7Q5LXGWvO3tctsPeunG1vYN0f8vKuMpf3izxNJ+146l4DPcH
5vN92zJgnt+dwXiMZ3m/KVTTSv0LtvbV2LHYyvkFu09bmU/wPfJPVuoB9x99
8Wm/tHtPxKf/BAfex2c8CQ6nSUD7BHvmaew/mkCNF3qTgOuDvakSqvEdFROq
/sFDCZmPcP/0dUL6F/dPkydifODvgZRLxHjE3wP5NxH5Fmx7kYj2C3YmSaza
PY7EKr/4OyRW/glNTcx4Rb5KmES1+0omUfks2DaJ6m/5L4nKP/bdSVT+DhRL
quYP/5NU5TfbpKRKb84dSXW+vZ+Uekb8t0ym9OoYn0zlQ/fWZCqefSGNXWOS
q+u9mzQO3Equ6kU4Wgo1vy1fCsWP359C1aPQ9RQ6X0VJqe3Nk1LVP3ejiHbE
19WUKt/aI6WiviKJ/TlTcT7B3vqpqDfBAU8q8i/Y+SsV+RfsyZaaehbs/yu1
Gi80MDXXJ9i6Qvf3ZU6jcNCZRl1v6Z+G/hVsX5qG8Qr7z+rrwzXSqnZbn7Rq
vc5FackX7D+VVq3X/1Ff7+hpU9e7F9iUfb7jNtU/+E63W9KkUzhwJB39j79f
EdbttpTpGR+wt0J6zefB9IwX8PkqvfKPI1kG1d9dNoNan6+TxvbnGRR/rsQZ
Fd/e0hnV+gLtNQ5Pyaiu9yTIpNr9JTIp/kJtMql6Yp2cSdUnx65Mqh4Gi2am
v6DnfzKr+mGfqNtd2zOr6733Mqv5bC2yKP06x2VhfkC925KF8YZ6dycL+UR9
G51VjefbmJXjyfuMwZtZqXe8/xktG+Nf3n+0583G8fF+53qNw9ey0Z94P/XP
7KrdmTs741net/Q0zM71yt8jsl7JTr4FO/7IobA7Rw7V31cvB/kXHBycg+v5
Ku97/szB+b78D3uz5qQ+pH+gTk5t/4Cc9I+8/2lbrrE/Uy7mJ9F/qFYu5mvB
1n7A/HspjiW5eD3+HsuZXIpvS43canx779zkT7Brocbek7nV+gMfcjPfC5/O
HnkUX575GvuPaRx6m4f6+Sb8p7YzHsDvHDvjFfwetjM+hF9L2M56ItfbU+RV
17vK5yVfYl/4QF7qXdptL/OSf7nemTSf8o+nTD61Xn9HYP59K3ei/NSr8OMr
lV/NF2yXX/FjmRLRH+8rxy+gxgsUL8D4gL2tCzB+oAevxs6dBZSeQ0UKqvVZ
WxVk/Mj6HBMKKr7d2woq/nx3Cyo+7K5Cim/X2EJK397NhdT1gdvAv/dHgsPR
C1OPiLdRhbUeNuj20I3Cav3WqEWUPh32IipeguuKqPVbrhWhfdBz5KJcr/R3
5SpKewV7GxRl/Ai2XS6q/OO0FGN8C/ZkL0b78f513WL0H+JxUDHyjffZfxTj
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
mC8E21ax/atg58Vh1INgz89hzM+C/VmHm/WOkPWH6gznesDXt+EcX/wTzDSC
+hZscY6gfgTb+40w8YC/lxf4PIJ6ERxOP5L2iD9tNUYaPjfB371HMh5lfs9C
0x6zAfxtG2X8WQT+rjqK8STXu3uMop6Ef9/8Uaz/goPHRpE/wa5Ko816yuYQ
PruONnqaml3snzOa40l7+PBoxr+028KjyZe0+zuPIf/SHpo5hvwKth4cw/gT
7Hg5hvrKJvYnHUt7pN0eGMv8klPsfTaW6xHsTTSO/hEcKDWO+Uqwc884+ju3
8Pl4HPOHtPvjjyfOJfYWH8/8J+uxthnPeBZ7fA/GM94EB+NOoL4FW4pOYD6G
/a0mMJ8Idk2YQD2Az1gT1XpshSYyvmC/ayLrj/T3jJ1o7KsOvjdPVHw78k+i
/XK9++9J5Ef6+0ZNUuMHN0yiv6XdcnMS+YIeGnsVDgz3Mp/C/nVe5l/Btmte
8gH7I08mBr9DJpt8WUmwdc1k5iPp77g8mXqH/Zb/GF/gPztxTJnPvvI/rgf8
XtDY++M/6k/0Fcgyxeh5vujfE5zC9Uu7/+sU5kPBoYxTmZ8EW2tNZfyB775T
qU/o4dNUpV9L+mnKP/bq0+h/2NtrGvUKvn3TVHzY0k5X7c4q0+lPiXdP9+ms
P4L986Zz/agXR6fTX8gPFWdQv4J97hmsJ4KDs9k+VfKL5fAM5nPk49czyCfq
wb8zmQ8Eh2fMZP4TvmwHZqp863wx0+hzPPJxklnkQ7B12izaJ9ixbxbXh3r2
VGNfwtmMD8HBkrPpD9SHR7PJH+y1ziEfsLfYHNYXud7Weg7jR7D//hxVb0Jx
5jIfiH6sReayHgh2tJzL65HPxrM/8q8l1jzWP8H2gvOYf6QeuprPo95Rf8fM
43oEBzbNU/XMmW8+7Zd2T9P5jC/oeeR8lT9C/vm0V+LLemO+ijdfowXM58gP
wxZwPdDzugVmvJ7Q89UF1JvM54rk43yyvrDHx3wl2HnJR/7les8vH+NZsD/b
QhNf2xFfKxYyXsV+9/mF9D/y2feF1CvszbyI/kE+q72I+kR8nV3E+EI++7KI
9sp84QyLma+Qz2ouVv2dfRaTP/D5cbHKX9Z0S5gfkM+qLWG8SL5z91yi6pNv
wRLmG+SzNEt5vWBX5aUqv3q7LWW9R32eu5T6hP1H2F4S/FZYRn2A3y7LVP4K
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
z2t8qsyLIiv1b5F6dlt1Xkt9rLTqeVLPr1p5nyXSb4U2xk/KvGu28ftbZV4M
Mj6UkHn3so39OCn9eMjG+fYo+tXsLGE+b3XD3/tLWL8zwbEXSvR9PJ/8uETv
i3jmbP770ftK6d9CcOK5UtUPTu8r1XyDcxOlrDebB/qvL9P+BKeeKeN9cuDs
h2U8b7cX+rNlrKeNYNd0u34fz8cq7boPwKa9dt0HYPsZPr9vEzh6dTn7Zxic
vqM8733jdDnPuwscv7JC54HoLa3Q/IjegQqtF7B5K+NDGXByioP+rgFnrA7N
v+jtd7A+DojeuIP92+mD3ncdqg/3zy2qVD8Rt4Qr6cdSsLGRvOI2cHxPJft3
EJw6Uan5b4WfRhXzNwqOra+if7426D1exfsYYNNlPj99FjixplrzgffTO6u1
X8GWP6qpd1s79FlqyF3g7Bs1uo/B5s9r2K8WsOsi486fcV5sfi392oB4sq2W
egvB9s9qmY97wNFcLe83B5yYU8d54QOnvXXUPwHOrarTfHXAr1n19PMpcLal
nvERsPlh8vhpsOuVes0POFPQwHm0E983NTewvzyI2x/U+Ce4X/QljS8TvQcb
dH8gbmls1Pkofq4QTr6+HxxPNLJ+zoFTo8L//b4Xv3/k87Ez4NgyJ8+/xQ8/
n3XqvgNnRpzMzwWwacKp+juhf0YT+3kPODfcpPOnC3q/b9L+CUDvtc3Uvwvx
uKNZ9w++b/6gWfen5P+7Zuo/Kvm/ysV+PgRO2l3UPwX1lllCjh0ER0+5tN+k
Xqe20M8oOF3Swnq9AfnIRf5nnG/Z0qL9KH6a3Kof/ZQtdut+xnnmPjfzcUr6
6wly22aZV++46cdFvG9a5NH5Kf3f49F5iH6PbvCoH4gn3vLQj59kfmU81Htc
5le3l/6fwPvxdV72yzzcNzXk1X6GvuxXXt2PiJv/5PtOv/j7mE/7WeZB0pfn
r+mYj/P0G9zHfsnH/DSJ/ze35s2z3I5WnRdSz0cZf/8I2Pitlf28XOp5Xhv1
2qUeDpNDa5Gv2K9t2q+ov+Tsdp334IynnflYh3ozrWrX+QNO/NKu8wScvqmD
82E16jHnUr6E71ke6tD8gY3tHToP8X52pl/vDzY3+bW/8bzrAb/6he/HXvTr
/JP+O+DX/Ms8a+jUfYl4dHkn718ETjxPXl8ATu/v5H0vSz3/oM+/hnh8aRf1
jUFPalsX9Y0jnv2oS+8j/Tiu8RbRf12A358t/j4d0PyCTcMB3WcyH8YCej/4
Eb0mSP/CiCcqgvR3u/j5bTBf77Ru6r0bnCpTHpN5fHt33ryKnezW/St+XmGw
ng7LPLMZut9lnkUM7QewfbOh+0r8/MfQ+pB6WBzKu4+lN6TzBWxsCum+Ff1v
h7S/xM+FPfQ3In6GyOP14NjjPbxPq9Tz7h7qnyZ+f91D/fPB0WCY+blX/Fwb
pj9/i/5d4bz6yn0Z5vmT8M8yGeZ9Z8i+W93LebxA/H2zl/0fFP1f9Op8ALt+
72X+reLnjj7md6/4eaRP+1Pq94LyiNTv3H76n5T+8ynnpB4+7ef3j4mf5/uZ
jzulfosijL8Hzroj2r9g88oI/XtS/DwXod+jOC9TOKD7VeaDa4DPnw1C/+CA
7p+Aa6zmrxs3CA8WjHW7/gXKiYaw
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.3136992*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.1556736*^9, 
        FormBox[
         StyleBox["\"2000\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         StyleBox["\"2005\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         StyleBox["\"2010\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         StyleBox["\"2015\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         StyleBox["\"2025\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.187296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.218832*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.250368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.281904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3450624*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3765984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4397568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.187296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.218832*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.250368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.281904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3450624*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3765984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4397568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.3136992*^9, 3.8394432*^9}, {0, 63.73499798774719}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.839590317079165*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"bd366015-2888-42b5-85e8-00f4b18af26b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"FinancialData", "[", 
   RowBox[{
    NamespaceBox["LinguisticAssistant",
     DynamicModuleBox[{Typeset`query$$ = "NVIDIA stock", Typeset`boxes$$ = 
      TemplateBox[{"\"NVIDIA\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Financial\"", ",", "\"NASDAQ:NVDA\""}], "]"}], 
        "\"Entity[\\\"Financial\\\", \\\"NASDAQ:NVDA\\\"]\"", 
        "\"financial entity\""}, "Entity"], Typeset`allassumptions$$ = {}, 
      Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
      Typeset`querystate$$ = {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       2.225808`6.799032692516753, "Messages" -> {}}}, 
      DynamicBox[ToBoxes[
        AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
         Dynamic[Typeset`query$$], 
         Dynamic[Typeset`boxes$$], 
         Dynamic[Typeset`allassumptions$$], 
         Dynamic[Typeset`assumptions$$], 
         Dynamic[Typeset`open$$], 
         Dynamic[Typeset`querystate$$]], StandardForm],
       ImageSizeCache->{165.2265625, {8.11328125, 17.11328125}},
       TrackedSymbols:>{
        Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
         Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
      DynamicModuleValues:>{},
      UndoTrackedVariables:>{Typeset`open$$}],
     BaseStyle->{"Deploy"},
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True], ",", "\"\<Jan. 1, 2005\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.839492236774128*^9, {3.839590315691622*^9, 3.839590315853952*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"1175d9c7-3d2b-4fd8-ac9e-e91a6d8262b5"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
HzxthuFP4m3sxg==
       "]], 
      LineBox[{{3.8241114916676846`*^9, 117.23624753952026`}, {3.8241504*^9, 
       115.93299865722656`}, {3.824162548089854*^9, 
       117.23624753952026`}}]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.3136992*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.1556736*^9, 
        FormBox[
         StyleBox["\"2000\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         StyleBox["\"2005\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         StyleBox["\"2010\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         StyleBox["\"2015\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         StyleBox["\"2025\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.187296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.218832*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.250368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.281904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3450624*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3765984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4397568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.187296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.218832*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.250368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.281904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3450624*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3765984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4397568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.3136992*^9, 3.8394432*^9}, {0, 117.23624753952026`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.839590319636525*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"6445d402-94b9-4763-8a25-88cd291394b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FinancialData", "[", 
      RowBox[{
       NamespaceBox["LinguisticAssistant",
        DynamicModuleBox[{Typeset`query$$ = "NVIDIA stock", Typeset`boxes$$ = 
         TemplateBox[{"\"NVIDIA\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"Financial\"", ",", "\"NASDAQ:NVDA\""}], "]"}], 
           "\"Entity[\\\"Financial\\\", \\\"NASDAQ:NVDA\\\"]\"", 
           "\"financial entity\""}, "Entity"], Typeset`allassumptions$$ = {}, 
         Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
         Typeset`querystate$$ = {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          2.225808`6.799032692516753, "Messages" -> {}}}, 
         DynamicBox[ToBoxes[
           AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
            Dynamic[Typeset`query$$], 
            Dynamic[Typeset`boxes$$], 
            Dynamic[Typeset`allassumptions$$], 
            Dynamic[Typeset`assumptions$$], 
            Dynamic[Typeset`open$$], 
            Dynamic[Typeset`querystate$$]], StandardForm],
          ImageSizeCache->{165.2265625, {8.11328125, 17.11328125}},
          
          TrackedSymbols:>{
           Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
            Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
         DynamicModuleValues:>{},
         UndoTrackedVariables:>{Typeset`open$$}],
        BaseStyle->{"Deploy"},
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True], ",", "\"\<Jan. 1, 2005\>\""}], "]"}], ",", 
     " ", 
     RowBox[{"FinancialData", "[", 
      RowBox[{
       NamespaceBox["LinguisticAssistant",
        DynamicModuleBox[{Typeset`query$$ = "AMD stock", Typeset`boxes$$ = 
         TemplateBox[{"\"Advanced Micro Devices Inc\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"Financial\"", ",", "\"NASDAQ:AMD\""}], "]"}], 
           "\"Entity[\\\"Financial\\\", \\\"NASDAQ:AMD\\\"]\"", 
           "\"financial entity\""}, "Entity"], Typeset`allassumptions$$ = {}, 
         Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
         Typeset`querystate$$ = {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          1.062484`6.477867392205118, "Messages" -> {}}}, 
         DynamicBox[ToBoxes[
           AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
            Dynamic[Typeset`query$$], 
            Dynamic[Typeset`boxes$$], 
            Dynamic[Typeset`allassumptions$$], 
            Dynamic[Typeset`assumptions$$], 
            Dynamic[Typeset`open$$], 
            Dynamic[Typeset`querystate$$]], StandardForm],
          ImageSizeCache->{293.2265625, {8.11328125, 17.11328125}},
          
          TrackedSymbols:>{
           Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
            Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
         DynamicModuleValues:>{},
         UndoTrackedVariables:>{Typeset`open$$}],
        BaseStyle->{"Deploy"},
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True], ",", "\"\<Jan. 1, 2005\>\""}], "]"}]}], 
    "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "700"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8394922452831373`*^9, {3.8395903202095013`*^9, 3.839590320240198*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"3a391c9f-c216-4247-bd6b-86fbb84ad5eb"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
jsI/Md6nDU2kHvA+atxJrId4/7fAJM4P7280n2TozX5nkmFvV+zJtC/er843
mePj/eomkzW+5sr70eFRk3k83r//ZQrbo4s980zh/GKIHhpOIR+8Xz1iCvMt
3g9fP4X2wfvVOb3kCz3U9zL/4f1wj5f1BPzXeNVfYcHey17yQ7zVmcp4xf6B
IVPV353xfvjKqTw/9g9cmKr+1f0w/02l/gW7B07T/N5O9mv5/p5G/cv+r+C5
adp/iuzXsnyeRv3L/lJ7xunUi+DAkunMX9jvd3q66n+gjG/7d7rmjwgZ32mb
wfwv+788VWbQ/oKtJ2dwvtjv9/5nf+yX+30m84ec31dxJvX8Rfj3mEn9C3aF
ZzKepb/3t1laH+IK30D5WZwv+HebxfyD/TxzZzH+sF8nxWyOh/2TZWbTftiv
2mU26wf288yaTXtgv21gNvlhv1npOdQ/9k92nGPM3zV9Dust9vvtm8N8KO2B
p3PoH9i33VzD3h7vXNpH5u/fPZf54pPs93s0l/b/KPZPNI/z/Sz2nTSPfOT4
4I55nK9gy4N5nA/2JxaaT/tgP/XW+Zyf9Lfdm898BL6/LmA79JD/J8b+5WYL
OD72T95eQHtCD7EWUo/Qs30h9Yj9v40XMp6wX3XUQs4H+81iLGK+gB5yL6J9
sb+rwc92iR/b8EW0H/YnrltEPWH/YY7Fhr6s9RbzeOj5r8W0D/arXvrZH/sl
a/uYb+D/wT5jPO8KH+sD9PrFx3yA/WUDlqg99kGvy4BdVuxfDJ1le0no9dMS
xpeM58iwlPGF/bO+pYZ/LaeXGvFq/7CU42F/Z7plzPfY31l5GfUi4znfLTP8
70nzN4+X/v4//6aeZbyQ+2/2R/y8+Zv2g79TLTfiMVhuuep/BuKr23Ijvu1z
lnO+iJ/kK+hv2NOxgnyxH7XzCiNenTNX0D5iT8+BFbS31AtrqZXUp2BHh5WG
ftzTVur5q2F/9d6f7eD/ZCXrGfw9ZRXjAXx3rWJ8g+/DVYa9bAlXG/7yT1xN
/cCe21cberTeX029wf/x1jD+BbsLrjHsZ9m6xohX+92f/aHXOGuN+PD+sdYY
L9B0Lesn4ufWWuoJ+79jrmP8ir38eYlRn0ON1rGewt4jf7YL9kVfT71I/2Cu
9TyftFsarGf9w/69YeuZH7F/b+161kvpH86+gfaUdlvdDbSHtDuHbqD+BHtW
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
e9ZD1N9773k8rpd+/Yd6xvpm7D+qn51Y32z+h/UR65vb/3D+uN6I9YHzRz22
f1D94/mb58YH2ht8Y/xLf4Fv7n9pL/BtyHY7fo/lKrClQjTcP7F8pH1wvZzz
I+sprpfrfdT8g/s7rr8+Mh6wHvtGjOt9W7ZP6F/zOq6Xa39S/Y3HemzwJ/LF
emzFJ+oL15+ZP7Pewp41P9P+uP4c8Jn2A/9ln8kH/M99pn1wf6raF+ZPXM/3
/aL++YDrZ98X6hPXz6e/sF7jfsqHL/QP7p8s+o/+wP2/E/9p/7K4f/JO8c5F
0u5L85X2w/X8/K/UP+4/HP3K/I37D2++Mp7BN9U32gv3/8p9Y/7E885D36g/
PC98afYPJf/Oegr+Zb4b53d0/k7/4f7k8+8cH/cnI34Y49tL/eB8cT+iw08c
XfhP+0H/CLYltrxQfQl2FgeOyme4n9ZW2/V+un/Kz3bBoV2K56aKIfYtEu2F
2l+wrxWwL+dg6R+cCOy6fBjPC3YAO+K8xO8V3ufxx6V/oEX0F5oPBIfHAfN+
nW1rdIOf8y5wlD7k/J44MV7A3mHB1jEx2F+wYxPb3eB/CzjK3+Af8xedH+53
B/MqdpeEfTf8YszXex04Kr+Cf/SYGL/mWfDPFVPPn1H62xoAByqfERz6ARyV
38A3RyzyhZ7rxqK/BLuHsj0j7k99i0U+yA9ZY78w9FwLmPfLvYNiqz/T4/n9
8tj0J+5PZYqD/n30+XeNODqe3k/rH4f+wv20pXFoH9zfPgvM9yl8VX/V9m/I
D32AQ1ne4n0U36/0H+4PnwK25W2G+8P/ADPfhXvGVXsNRH5bGJf2wvscx4F9
0V3g/zau+qcdnhekjvdC4wvxNi+e2gfvN7iPxNP5xcbv570G5v3DYMr4wJG1
kN/KAVtKwD7eg/E5PvJFpOKC08E/WQLDnjZHAh0/D/h3SkD9yfxDz7Q98gLs
mzSh2nMfnh+UTEh/Iz+3T0h/wv5TFQ/T63lrIqO/q1giHR+/V+Ztk4j+wPtK
kxNpPJ4RHN6p/Q8VxO+PFbYCr3Ci/rW0cj6ofxOs9Bfq33Zgy5UiqNchK/WC
32tpnhjn76e/RzYO2HaqC66ftyRmvKJe30lM/+P6OXYS9I+lv38yOgnHx++1
+JMwn6F+30zC/IL7P3mSqt7y4/7OemDeP/BdAw6dK4z7D9EiXmi9wv2fXBG0
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
xreA/pfN6I85OC/mBKr9RzzvDOT6HYjngkDG4w7E8/NAlc/Q37A59+ckzrvt
zf/lH83PzaknEOfdE9rzNuK8Cwiifpx31l5B3J9u8O8pZTfCvyVBjLdV+J6s
24LzReN7skcL6u0t7JragvP9gt8PxS24fgv6mf7BrDfT0c+MDKa/RqGfOVnZ
t6KfuSmY86+V71VHrZYqX/G93o1sHobv4Ykt6U98nxvXt2S86IQtJ1ryfQOF
teEhHG9Ef3tcCN8fiv7GWtqDnqA//3UIn/fC9/ztEHWeid00phXjtwL682ta
/Ws+Rx7t4TXR777RiuvphP581daMv3SZz76qNefPQL/7SGv6txT6XRyfPxb6
vfSqHkF/Wz3rVzLuGw7r1Xkh9xP6K3quX4d+kecHnL8n+rNDFfuhX/TnBxzf
XOazlG+j6jn0tmrD/QiB3qQ26nncjyxV9uXoF5UJ/Rc7g0MZvyehNzFU5RP0
WkLpP/SHTZ+FKn+gf9y8LetLE/S74trSv5nCxgVtGY929Is+aUt/TEE/5te2
jPdCYYOxnTpvcL+e1o72i+jHnafd5x9hzUtl34r+8ez2fN4L9+s72rPeTkA/
6Fl7+u8t7sd0HTh+CfqbH5MLd+B+7Aw5H+MNjzswPqvgfqx+R8a7CffVPTty
vpXob/7UUdU/3Ke7OzK+7uK+t04njj+EflB3cn593FdP6cTxvP/368z1v8N9
XkRnri8C99OpnVU+4/5/I5n9UadPF55HHrg/79aF9a0Ueid04f6xf5XThf5A
P936LTk/C/4MC1P1EP2rlDD65xb6F9Yw7n8S9B/n+N9O4f7/VhjjbRru/0eH
U/9U3J9nhdM/J3B//lW4Oo9wX3qDnFaE+94qXWmvJ/ev7i+7cr8zhXXXwIbQ
/XGit1I3cl9hS2g3jh8p47WHunF+H9zv/k17gQn3/R4G+vM49OoNnC8H/h5i
4HzXcf98mXbeZ1vLRXB9H+N+NySC/jstdvegCK4H79ctUWzD/bMmkvFwEPHQ
IpL7F4v784RI7i/6JYZFHF9YCf3YT2m/Xgfx0DyK61uN82BgFN/XHPVqfhT1
DsH96N4ozr8d9dYZxXqVh/NgQHd1vqN+zSXnN0U87OrO/D0M/ecUe0P/i+6M
3034/8OsHqxfuYgHGzl3Lu7/z/agvlGI56c9qO8h8q9BNPdjAfpt26K5f7jv
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
ouJZxuuab+X7q6Ya/ge9d6w+
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
+pd2/99z1fiOm3M5v7S7o86jPmU+n32eGi/YWGPLiHmcX/p7I88n39IeyDWf
9sL+BvPpH8G2ofOpF+nvXDNfzR/KvoBY7LPWW0D///ofX47BC3i9YN+FBfSf
jGev41Prcw3wKfu8y3zUj+DwVx/5Ef97+i7kfKIP/+KFXK/oPXR6Ia+Xduvn
hcwHgh3pFzFeBAd9i7ge0Y/l5CI1n/3DIuYL+D/tYsY/+K2yWPHnfLtY6cGT
aoni219xieIv5F5CfcLfr5dwfMG+5EupV/i73FLyJ+NZOi9V/rfPXMr1wd9J
lin7w45lim9bx2XKv85py5S+PfuWkU/hw1pquWp3tIvAsP+/5Wo+3+7lSo/B
R8vpPxnPO2kF41XaAztWqPWE70e0I77irlTx5R+/UvO5daXqb727kvGN+Iq1
ivkR9hZcpfRp2bxK8W+/vUr5xxV9NfMf/J9vtdJroOlq5S/nDY09UdZwPOgh
zxrmY8GhRmvIH/gevkbp0xdpLeNL2oM519Je0b+lwVquV/KrfchanW9Xr1Xx
E862juNLfrbVXUd7JX87B61T+d2zYp2qH/7z68i31CdH7fXUH+pB//XkS8b3
LV2v5gueXa/rxdf19Ecs4bePn/6W+QKL/Bxf2sOn/OwfR+z/5Ge8Sb0KLdig
6pn1xAbGt/R3vN+gxnOn2Uj/oP5W3qjWaz8agWW9rjcbOb5gb8pNzO+CAxU2
KfvDXTbRX4I9rzbRXzK/P9lm8iE4VHaz6m/9d7Naj2PGZtor6w0m3sL1yf7E
4tjC8QTbO2yhPThvTI3oL/sR794t5FP2I7aSWzmftDvbbqU/5XrP5K3kT7B/
11bqAfuzh1vV+O5/ttFe7M8mRmCcN7Zvo/9w3ri/jfqD/XG2q/WFt2ynXqW/
LbSd8SHYGXMH86VgT4Ed1B/Ob5t2sD4IdtzaQX6wn4y2k+04H+XdyfyE/WST
nVy/YNf1neQP57c/d3E9sh8O5N5FfwgON9yl7LMN20W+wecfu9V6Qzl2cz7s
J+vvZv3BftKzm+OJHtyrdtMfgi3Z9hBDz3/toT8FuwbuoX0SH97le8iv4MA5
fb3TuZf6lXZPv71qPv+SvRxP9BQ6s5f8Yj/5RWNf733KnuDCfSofWE7tU/Fm
/7iP/pZ2ly1AfyE/zA+o+LUdD6jxne8CHE/m96TeT72Jvf5K++k/8HtkP/Mp
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
a5MfvN/xubayz5O+DvmBHqrXob2CQ73q8HrB1oV16B+8H5H2L6X/YJW/uD68
39HjLx2P8//iesH3sb+4Hrwv07Wu9v+cuoxf2Hu4LuMP79O8rku+8Hu0mfWo
P+SDA/WUPoMvNLYkrc/1w9/T6nN86HVfffaHXp/WZ3xBr4kakC/Uj1INlH+s
jxuoeHDEb0j/QJ/FIzDuB7duSP2hnj1oqPK3K24j8oH3TYo04vj4/WrLRuyP
+3/jG9E+1IdYjVV+9hdsrOpBqHlj8onfg45tTH7wvsnmxvQn6kO+Jir/W/5u
Qv/h9+KjmjC+sZ/Y0ITzo37caEI9CrY1bkq94X7E8Ka0H/cj1jVlfzzvuNqU
/sL9tEh/0x7cP1v9N/nC/uYSMPd/FkszNZ89ezPygecvK5rRP3j+cr4Z+cX9
kx/NWC9gb5bmjFc836jdXI1nDTbnerDf/dpc8e3O6KL9eJ+npkvNH+zjIv/Y
r39ykV/s19O14PyyHwxU0zjcs4Xp78F5w9eC9uO8maYl+cR5s3JL8ofzZveW
XD/Oy/NaGj5xf899tKWxH/ffLBVbsd7jfpq7FesPzsuzW5F/nJcPtWJ84bz0
qhXtx3no33+UvZ4Z/1D/uD+1/x9ej/PS8384P77HMbU1+cLzrr2tuT7cT33a
mvrA+ShhG/oDz7tKtuF8uJ+2qw3zGfTwqA3zH97vsLal/3A/tZjG/n/aKv84
7rfl/Li/Hqcd1wM9F26n2oMt2nF+7M/Gt6M+cH86ZnvmZ+i5QHsVL+Fm7Rmv
sH9Me+Yv6HlTe8Y/zkN5OyhsbdqB/EHPIztwPujZH9GO/eV1je2NOtIfOL8N
60j/Ir+t7cj14rx0pSPtxXnpj07kD/t1TyfmB+nvX9WJ68H+8mIn8oPzxq9O
1DOe12X7V+Vjy/l/Gb/Ix9//Zbzi+Vzmzmo8r7Ozyve2s51pL+rvF4NPVcf7
lRm6qPn9Nbqoeh/q3YX2o1587EJ9YT9jc6v2YFW3ut7SU2P7AjfjAeef1F3p
Tzw/rNRV17duERj79bldyQ/2Y0e6qvVaK3RT9dzRpRvtRX2e1Y3+hv0Hdf/g
y25qPFen7uyP55/Tu1M/8P+z7uQX9ibuofr7p/TgevG+7Z4erD/Ynz/pQX1h
f56gJ8cT7C7Rk/7G74F39aS/sT9/2JPj433VeL3UeN6ivRgPOF+06kX+8HuT
e704Pt6/jt2bfOP37YV603/4vYmrN/Mlfh8xrjfjGe/nx+jD+BEczN9HjWdp
1ofxgffHR/ehf+T3AK6NfdR4YXtfNb+tSV/qFfaP6Ev78XuZ9X3JB94fv9aX
4wl2NOzH8QS7h/Zjf9i/ph/tgf2X+zH/wv4/+qv1eQf3V/YGVvZnfYX9F/pr
+3/25/rxe+asA+hv/H5j2QDmU/x+49wA+hu/L/g2gPzj9wWZBnL9+H1BrYG0
H78n+DyQesXvTdIPIn/4PUH1QbQXvyfoNYjjye87PB8GcTz8firtYOobv/+q
Mpjji/3WHoPJh2DH/MFqvcFUHsWHpZKH8YDfy3T1KHtcczzMD/g9xGEP+cHv
TcoPoX/EPmfnIdSb/H7FM3MI40Gw/8AQxgN+//ViCOeXdnfHoep637Sh5Bu/
D983lP3l93WWZ0PJj/y+zp5omMKB/4bRv4LDu4eRPxnP9ngY+cHvAeMPJ//4
PWDx4cxH+L3tzuG8Xn6P6HgwnOuRdnfcEbRX2n1FRtBe+X1jsOUI9sfvbe+O
IJ/y+0tvrJH0J35vWXAk86O0h5uP5Hj4vejYkeQXvxeNPkrhUD6NrX+PYvwI
dowapeZzbxil7PmdIJiv8HvRxqPVeK7ho6ln2L9uNPUgv48OXB1Nf0q7s8EY
1lNp9wwZQ33B/tVjOJ/8nj10aQz5l9+vWy1j6V/8vn3QWF4v/YMrxtIewZYL
Y9X1rizj6G+ZP7x0nGq3Bcep651fxzGeYG/G8cwHsLfmeOoFv789PZ72RxI+
P43neIJ96SbwesHBahNov2BLrwnqeu/7CeRbcCDNROpBcLjyROpBsK37RMZv
ZOF7nuk/Nq3gUMpJ9I9ga8VJ1Kvo0+HW2D17EvmS/r5Dk2ivtNvLeelPaffO
8FLfggP7vdSX4PBzL/Ug9no6TFbjh/ZOZruMb306mf6RdkfC/9T8wcn/0T8S
f5bdGtsf/cd8J9hlnaLi0Vtsiupv2zGF9gp23p+i4tsTZyr1h9/nF56q8kOo
xVTFry/mNOpDcLDANPIFe5tPox4kX9jHTGP84fsW0abT/4LDeaer+WxNp5M/
2DtyOq/H9yP8GlvzzND+bjRDtbuHaexbO4Pzg+8rMxT/rvozFX9ez0yV/wKr
Zqp8Gb6ose3XTPIF/pbPUuu1np9F/vB9g++ztL2ZZzNe8H2DpbOVfuxnZyt/
uL7odm+GOUpfgRpzuB7Ez6k5Sp+ej3OUvv22uQqHqs5lfgXfPYF/72/A57u5
Wr+p52n7K89T67N3m6f1O1e3h1PMV/63VZiv/OHsMl/x7Zk1X+nbf3A+9Qc9
lF3AfAV+Oy1Q7b7pC9T6ggGNve19rLfgc4pPx/8en8pntic+lc+cCRaq/Bjy
LlR8WXctVHw4Hi5U/LnjLVL69hVdpPKTffsi5U/XvUXKXm/sxao9UGix4iPs
Wsz4hx7uLFb68sdYovQVyr9E2WdttkTlE8foJcofwahLVbsl71IVD/YmSzm/
7E9cI5Yy3+N7AuuXUh/Yn+Vexvnxe+CGy8gvfp8/dBn5x++Z10T0x/7y8jLG
H77fU28514v9+uDl9Ad+375yOfnE7/MvLlfj238up73Yrw9YQf1gv75sBfnG
fv3cCs6H/fq3FZwP56VMK+kv/H75jMbuzyvpf7nel34V9YHzRfVVjA/8fvbk
KjWf98MqNV8g7WraL+3hKqu5XnxPoIdu979dTT3g/JZqjRrfWmkN7cV+vesa
zfecNWp8S4q1an328msZ77C/81rFr3fmWtY7/P76wFq1XmeZdWo8T8d1nB/n
z2nrqD/Yv28d9YPz5zONfe3WK38G/1tPvcL+PesVH674fmVveJJf2Wfb6Vf2
OR/4lT89cTdQ7zhvFtnA8XDe3LaB68F58+4G5hN87yDWRqXXYMGNXC+ex7k2
Mj7B5+2Nyl+B6Js4H85v+TZRL/g9+9+bOD9+zz5qE8dHfEXZzPXivGnfrNod
jTdTrzhvDt/MeoLvCazbTL4RX7m2qOtdDbaQf5w/h2zhevG9g9VbqEfYf2kL
14ffs9fdqrB/0FZ1fWjFVjWf9YJud/zYqvgJ9t+m8pNl2TbFlz24TeUr11fd
7s24XdljW7yd+QX57fR2+gvn50/bGR84P6fbwfFw/qy2g/zivPle42CaneRb
sKXKTpVv7d13cv04z7/ZqdYfTrlLxZ+t4i7Fl9O9S/nfM3uXypfW5Lu1Hsrt
Jn/Qw7+7WS+Q32bsVvkjuH+3Gs/l2MN4xfcZOuxR+glM3aPz29495BP57eke
VR/8bfcqPYYm71Xt1t17dX57pLHbuk/NZ5m0T11v37FP6dd1f5/yvzdOQK0n
UDig1uvcGlD5xxMKqPrij7lf5c9QAY2tzfczX+F7Obf205/QR7QD5B/f98l3
gHzhfkTTA8xXqNcjDzD/yPXhPw/Sv7gfkecg7RfsbHSQ/sH9lGEH1fX+tQeV
Ph05D6nx3PUPqfF8Ht0eXHWI64O+Lx1S+vf+dVjNFxh4mPrG90eWHyb/2G+c
P8zrEY/fD1Pf+P5FvyP0h1xvXXpExafjrMbuL0cU374MR5U99kVHVby7Th2l
/rEf+niU/OD7RFWPsT/y2/FjKj/53x3jfLA39XEV39bKx9X1jm7HdX4LH1f5
ypLyhNKvvcIJ6gV67nJC5QvvLI1tyU5yveCz7Emdnztp7J+ucShwUo3nLn1K
5Rtf+1Oqvlj2ntL15Mkp6gPx1ea0yj9h72mV35wPT6v844l3RtVz68QztAf7
te1nuD7s1+5p7It9VsVjsNBZ1ivsH7acVeN575zl+vE92RhB5hN8Tyl/UNV7
W7Ogmi8U9Zwa35r3HOeHv5ucU/pwjzin9Gz587yuD7nPq/hwNTzPfAB9DtU4
sOY89YH7qTkuqPj11Lug4sE/+IKK/9DKC2p+68ULyj5fnYtKn8EBF+kv6HX5
RaUX+znd7vqm221LLql255lLSu+ez5dUf3/6ywo7Fl4m39DnSd3u+3BZjR9M
e0X1t1TV2HvsivJX4O0VdX041VXV31bpKvmH/V2vKv2GXl9V9c2a4prSv6P8
NVW/3J2vqfrlm6n725NeV/HlKnNd1Vdvx+u0B/vLadepZ+yP911nvGK/XuqG
ave30zj0n8bWPTeUvY7HN6gH7Bda3yTG8wHvTfbHeWPnTeYDxN+Dmyq+vXFv
qettE26p8Z3bgG0jniM/3L2l1uuPdVvxFSp4W+Uz9+bbyn++27dV/Q9Gv8P6
jnyW/47SU+DGHfoTfEYJqXxhs4e4HnwfqXGI/sHzreEhzWfku7QHfOa6y/7I
Zw3uqvzlG3KX60M+W31X2ePKfk/199a9p/gMDLrH+ML+bMU95gvszy7cU/nY
X/u+6h/qf1/ZZ112X/HvCN5X63F/vU8+oYe+D5R99sUPFB+u0w+ob9j/6YG2
P91DNZ7nxEOlZ//7h0pPoTSPtL1VHql239FHan3BN4/ob+wnUz1W49srPqZe
YK/7sdJz+NVjpXdb8ifKX85yTzge9PCvxv4ZT5ReHEme0j6cPx1PVT3ydXjK
fIPz59Sn9Cfun+x7qvks+Uzz2faZWm948jPlP9vuZ4o/56NnHB/8/vOc9oHf
Sc9pH+rzjuf0N+y//5z6Ap/jX9AefG9x6wt1vTf0gvEOe2O+VHyFC7yk/sHn
JmCev/23XtJ+fH8s2ivWQ3zfMN8r+gvfN2wa0Y58cP0V/Yt8EOW1yr/2PK9V
vnA1eq3qgXeYbrdFCut6kTOs8o+nfpj2I/48YZVvQ6vCSq/ubG+0nv96o/QZ
HPhG5QfLijdKD/bzuj3gfMv5oed+b9V4tqVvlf+dZ3W758tb6gl66POO64Ue
Fr0jH9DDqXdK776P75Q+grb3Kp+6FgBzv+U9/l7pL/DuPf0H+1N/UOuxVf5A
fUO/4Q+qvzXlRzWeo8JHxhfycReNLa8+qvXak33S+aGsxt5OGgemf1Lx5kz8
WfnbU/oz/QM9tP+s9BGa8lnVR+te3d9X4ovSX7DNF1XPLJO/cD3Yr+36wvGw
X3v4hfkL559WX6kfnNcmfqW92G9u/8r+2G/e+0r/4v5J7G/M9zivjfvGeMd5
c8s3xhvOa3c0Dsb4Tnvle72WAt/pLzw/2vid+QLfR7/5nXrC/feoPzifYFve
H7QPzzua/FDjha79YP7C8/s/fzL/4Pl97p/qenfDn+RXsG/oT8YLnif+8Yt8
4XlMjl/a/nq/1PiBwb+ofzz/WvmL/ON5TFbLc7M+wf46wL/1jO99DwBmf+ty
YH4P2XEOmN8HD9b6Q7Vb+gHzeaN9CTCft7nOAHM93s/AEfz2jvT8//PnXAjM
502ek8B8HuP/AEz+QmkjP///fLjnR1br8x3TOPgWmN/3t1f687mJN/B5+E9l
T/g1MP1jSxHl+f/Xj7N8FGWPp3MUtV7ryyicH8+/kkbl/HieVCYq+Yss9naM
yvEFB6dF5frwPDRRtOdGD9LuLQVsMd/vD7SLRn9Cz/9pbNsDzOet/uLRlb2h
1tHV+q3e6Mof7gcaW1rFUNfbJ8RQ/nJti6HGC8SKqfhyjo2prvdsjqn9fTum
4i8UPZbSjzV/LNXft0Hj4I1YanxL1Niq3W6PrfltDMznibbIcegPfI88FzCf
t3saxFH+8A/R7Q5LXGWvO3tctsPeunG1vYN0f8vKuMpf3izxNJ+146l4DPcH
5vN92zJgnt+dwXiMZ3m/KVTTSv0LtvbV2LHYyvkFu09bmU/wPfJPVuoB9x99
8Wm/tHtPxKf/BAfex2c8CQ6nSUD7BHvmaew/mkCNF3qTgOuDvakSqvEdFROq
/sFDCZmPcP/0dUL6F/dPkydifODvgZRLxHjE3wP5NxH5Fmx7kYj2C3YmSaza
PY7EKr/4OyRW/glNTcx4Rb5KmES1+0omUfks2DaJ6m/5L4nKP/bdSVT+DhRL
quYP/5NU5TfbpKRKb84dSXW+vZ+Uekb8t0ym9OoYn0zlQ/fWZCqefSGNXWOS
q+u9mzQO3Equ6kU4Wgo1vy1fCsWP359C1aPQ9RQ6X0VJqe3Nk1LVP3ejiHbE
19WUKt/aI6WiviKJ/TlTcT7B3vqpqDfBAU8q8i/Y+SsV+RfsyZaaehbs/yu1
Gi80MDXXJ9i6Qvf3ZU6jcNCZRl1v6Z+G/hVsX5qG8Qr7z+rrwzXSqnZbn7Rq
vc5FackX7D+VVq3X/1Ff7+hpU9e7F9iUfb7jNtU/+E63W9KkUzhwJB39j79f
EdbttpTpGR+wt0J6zefB9IwX8PkqvfKPI1kG1d9dNoNan6+TxvbnGRR/rsQZ
Fd/e0hnV+gLtNQ5Pyaiu9yTIpNr9JTIp/kJtMql6Yp2cSdUnx65Mqh4Gi2am
v6DnfzKr+mGfqNtd2zOr6733Mqv5bC2yKP06x2VhfkC925KF8YZ6dycL+UR9
G51VjefbmJXjyfuMwZtZqXe8/xktG+Nf3n+0583G8fF+53qNw9ey0Z94P/XP
7KrdmTs741net/Q0zM71yt8jsl7JTr4FO/7IobA7Rw7V31cvB/kXHBycg+v5
Ku97/szB+b78D3uz5qQ+pH+gTk5t/4Cc9I+8/2lbrrE/Uy7mJ9F/qFYu5mvB
1n7A/HspjiW5eD3+HsuZXIpvS43canx779zkT7Brocbek7nV+gMfcjPfC5/O
HnkUX575GvuPaRx6m4f6+Sb8p7YzHsDvHDvjFfwetjM+hF9L2M56ItfbU+RV
17vK5yVfYl/4QF7qXdptL/OSf7nemTSf8o+nTD61Xn9HYP59K3ei/NSr8OMr
lV/NF2yXX/FjmRLRH+8rxy+gxgsUL8D4gL2tCzB+oAevxs6dBZSeQ0UKqvVZ
WxVk/Mj6HBMKKr7d2woq/nx3Cyo+7K5Cim/X2EJK397NhdT1gdvAv/dHgsPR
C1OPiLdRhbUeNuj20I3Cav3WqEWUPh32IipeguuKqPVbrhWhfdBz5KJcr/R3
5SpKewV7GxRl/Ai2XS6q/OO0FGN8C/ZkL0b78f513WL0H+JxUDHyjffZfxTj
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
mC8E21ax/atg58Vh1INgz89hzM+C/VmHm/WOkPWH6gznesDXt+EcX/wTzDSC
+hZscY6gfgTb+40w8YC/lxf4PIJ6ERxOP5L2iD9tNUYaPjfB371HMh5lfs9C
0x6zAfxtG2X8WQT+rjqK8STXu3uMop6Ef9/8Uaz/goPHRpE/wa5Ko816yuYQ
PruONnqaml3snzOa40l7+PBoxr+028KjyZe0+zuPIf/SHpo5hvwKth4cw/gT
7Hg5hvrKJvYnHUt7pN0eGMv8klPsfTaW6xHsTTSO/hEcKDWO+Uqwc884+ju3
8Pl4HPOHtPvjjyfOJfYWH8/8J+uxthnPeBZ7fA/GM94EB+NOoL4FW4pOYD6G
/a0mMJ8Idk2YQD2Az1gT1XpshSYyvmC/ayLrj/T3jJ1o7KsOvjdPVHw78k+i
/XK9++9J5Ef6+0ZNUuMHN0yiv6XdcnMS+YIeGnsVDgz3Mp/C/nVe5l/Btmte
8gH7I08mBr9DJpt8WUmwdc1k5iPp77g8mXqH/Zb/GF/gPztxTJnPvvI/rgf8
XtDY++M/6k/0Fcgyxeh5vujfE5zC9Uu7/+sU5kPBoYxTmZ8EW2tNZfyB775T
qU/o4dNUpV9L+mnKP/bq0+h/2NtrGvUKvn3TVHzY0k5X7c4q0+lPiXdP9+ms
P4L986Zz/agXR6fTX8gPFWdQv4J97hmsJ4KDs9k+VfKL5fAM5nPk49czyCfq
wb8zmQ8Eh2fMZP4TvmwHZqp863wx0+hzPPJxklnkQ7B12izaJ9ixbxbXh3r2
VGNfwtmMD8HBkrPpD9SHR7PJH+y1ziEfsLfYHNYXud7Weg7jR7D//hxVb0Jx
5jIfiH6sReayHgh2tJzL65HPxrM/8q8l1jzWP8H2gvOYf6QeuprPo95Rf8fM
43oEBzbNU/XMmW8+7Zd2T9P5jC/oeeR8lT9C/vm0V+LLemO+ijdfowXM58gP
wxZwPdDzugVmvJ7Q89UF1JvM54rk43yyvrDHx3wl2HnJR/7les8vH+NZsD/b
QhNf2xFfKxYyXsV+9/mF9D/y2feF1CvszbyI/kE+q72I+kR8nV3E+EI++7KI
9sp84QyLma+Qz2ouVv2dfRaTP/D5cbHKX9Z0S5gfkM+qLWG8SL5z91yi6pNv
wRLmG+SzNEt5vWBX5aUqv3q7LWW9R32eu5T6hP1H2F4S/FZYRn2A3y7LVP4K
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
PI73/VH8fF2/34i4I388+V0Fn7bG8eTXjrj39fF6H6nHdo1HCf8HE7n/Y6Jv
faLmF9iwP1HnmfSHq4l6P+hhuz+J+qUi7hyYRH1bRM+Pk/z5dppAvpOB20IV
X5V+nDnBr1/ZP5qg81f0vMdKP52QfhZs1fku/SzdqvUAbF5k1Xklev5mVX+I
H/ol+93HNDFZ+wuwtS5Z563wfzlZ60v0fCaF+qaLnsnE7cOB7QtSeJ/R4ucd
KeTfSfT+Zwr5PwlsS0plfvJEz6pU6vOr8N+W6ucv39lUnv899DN9n8r7PiTz
rmIi+3Ef0feFiaz/JOF/ZqL2B2DLtxOZ/yDR8/lJzO8+0fPUJK1P8e9txQfF
v4+nUX+X1F+cYp/44Z007v+e6HkrjfnIEf/2TGf8H8De6HStX2DjjHTqt0z0
vJlOvY/gPE/3DJ2v0h8sGfz+0yTwL83Q+YP5ZVufQf9nJkPPLpnUZxSwKSKT
9/vMCv7FjB/vlAr+azLVX8BtRzPJPxvYMjyL/EqB7YVZ7JfRk8C/KYv5SQX2
HMqiH14FNlzn90VDgJ152To/JkLfhmz6NRz7+w5kk+9OxE3ebNUP2BqQo/UK
7F1J3L4Z2LgvR/0ObLlCfDwO2N45l/7cA+wakEv+d4DNbblan8C2S7nk3yr8
752s8xPYHTJZ+y++92UoLkDccWEy++H+NOjbYQr1fTAd/IOmMF9NiBvTpug8
F/6OKfSfA9jQz0a/7YJe5lQb71stfGttrLc3EXfuZPx4d2DT03k6f4Ct1jzy
OSp+qM7jfoHihxfzeJ8+wN73//g+BXom5ms/QtxVmU8/lQF7tuaTz258bzib
Tz2+BTZ/l8/9luB799wC7afihy0F1Ltc/PBuAf2zUPxwp4B+GSp6P1lIvnPE
D88V8r71iFtOFnL/3sB2X6HqKX7uNVXrX/wcO5X5Pyn6vk3c3EX88NVU9rNk
8UOPIvr/YWBfVBH9fVr4lxXRr2eA224Uab2Ln7sV048Fwj+ymHqelXqcVsz1
l6Qe1xXzvFrxR5cS3q9J/DyyROcBvrcVlei8FH84S9TPov8Rrm/+F/JjHTaN
5+8CdhQQ935K/LF6GvVJE/4Hp+l8Ef7XpvH8KtHXVir5230Kcc+qUs0n9jMc
KFU9hf8npX71b3tguvYnqbcV03nfW6Lv3un0wwXxx+XpfvXkuK+MOB982sxl
7Kd9xR+vlfn1M/vFMvo1Vvh3nOHf3zJm0D9nxQ/nZ2j9oL7dhpm8f19gX+BM
3ncWsGnSTJ7XFdi6cCb5LZb+8AvXVy8FNvadpfMZ2JIyi/moQP+w18zi+TeA
XS/NYr6/ADY/Zae+e7DeNsHOfMRngP98u/ZrYPd2fn98MLDvnJ3n/4T1jvHl
1D8JuG1euc5j4e8qZz1el/72Xrn2W2DPnNk873/Ahi2zyWen8D09W+tN+H4z
m/p/hbjp2Tncn/qdmEM/DxB+X8+hPi3Sfx+bS35nhF/MXMZ3ANuPz6V/rbiv
68u5vN95xD2PVlC/28I3qoL89grf6RVa/8C+rvNYPznCd9Q87m8GtpbM437t
wI6187jfQMn3I5X0z0rJ94hK9Z/wnVqp+ZF8NzMe3y7963Al/V0CbAuvUn+I
X/OrtH9ivbuxit//IP3rdX5//C6wqb2KfvpR6mfKfM6vq1jvrSeOOCL53j+f
+X1U+F/VuNSH/f5q7e/A5j3E9itYb/u4WucLsLPTAq1X4RtK3Huq6Ll7Af2T
LvPgI+KcUOF7Tw33OwbsDa6hn/l+SK9h/zdJvf+nhudtFD1/Yzz5fqn/wFrV
T/rVxFrm1y79tq6W99sq8+znWu3X6KemZ+qYf4lbk+v4fZ7M4wV1Wl8yL3bU
0e8x8j7420Ke55L3TZLiNnnfVC0k35el325bSH1WSL89x+8vvC3zYJxD60ne
ZxUOrt8o/F9w6PyU98QZB/P/J+H/LXFElrwXZi+ifmOAjc8vIj+DzLNTil0y
z24vot/kvWbevNiv39veWcz85QA7by1mfTUK355L6LfzMh+ilzCfoofjrSVa
7zK/bi7hfg/J/Oq+lPffLnwtS7le5pmldCn9Xy96fs7vA+Jl/nZdxvx9IO+z
iGWMFwv/4mX+eq9Z5sfPZFyu+sFf1uHL6ZdE8XMhcXwH8XOTfv+T8D+0nPmV
8+xDV/jdx5VHHLBT3mcNK3R+iB9eJ75bJfy9K8h3n7wPJq9kPf0G//pWruT6
weKHfcR3X5b3w5WVmk95P3SuJ94BbFxeTz1fAba01TMfz8n78lI9/Sb+ct27
inzkvegJWcX6TZB6e3WV+kP0vcB4QKXw79DA81vEz0ENWv/CP62B9+kkev7a
wPPCpD/0a6Tf68QPqcQ3HxG9axu1H4kffm6kH+V9ZH56NfUJFz9YVzO/vwjf
6tU8T95/7hcVy+8da58m5lPijsQm8ukt/aGS8YDOwn9rE9f3gV+MZ5uodz/p
bwnNmg/x89xm8v9U+L8g+Pf3uvB/t5n3WS7z5E6z+k3mRbmT60/IvHjOqf1M
+vNJJ+t5gcxnn1PvJ++HXmtYz7tkPry9hvfbAuz6ag3n4zZ5P/RYSz/Oknkc
vZb3Oyzzwr1W/Svz4sZa1ptT5nO3ddpPZT5HriO/o1J/09ZpPci8+Gyd9g/R
s8t66n1K3o8j12v9ynusaD3ze07ms5N40wMy7/7covrKvBvWQj+9JfwLWlQv
eY+tbqE+xzLB/2AL/d6YBT2HtLJf982GnrZWzX8O+K9qZT725IL/gVadz4hb
PmnlfVZgvSd3g/oB+xtWbmA9bgE2791AfjeBbZc3aD8Hdt63UfsP9jMt28j1
VxG3vraR/K4L/4vE/S7jfm0dN/G+XwJ7+29S/+J7+y7i+AHY33Ve418g7jFs
1nmGuCFos/Zn4T+JeNNFxN3/3sx8fAjs+2Uz/bdb+Pd9ln5bmG35P9FchXQ=

       "]]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[
      1.6]}, {}, {}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[
      1.6]}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.3136992*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.1556736*^9, 
        FormBox[
         StyleBox["\"2000\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         StyleBox["\"2005\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         StyleBox["\"2010\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         StyleBox["\"2015\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         StyleBox["\"2025\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.187296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.218832*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.250368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.281904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3450624*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3765984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4397568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.187296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.218832*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.250368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.281904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3450624*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3765984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4397568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.3136992*^9, 3.8394432*^9}, {0, 700}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.839590327944037*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"640f51a8-b874-41af-bd95-42d3b1da6b61"]
}, Open  ]],

Cell["Za bolj\[SHacek]i  prikaz si poglejmo logaritemsko krivuljo.", "Text",
 CellChangeTimes->{{3.83949225141217*^9, 
  3.8394922633193073`*^9}},ExpressionUUID->"e3a71cb4-ff10-462d-ae23-\
553c1197ef70"],

Cell[TextData[Cell[BoxData[
 RowBox[{"DateListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FinancialData", "[", 
      RowBox[{
       TemplateBox[{"\"NVIDIA\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Financial\"", ",", "\"NASDAQ:NVDA\""}], "]"}], 
         "\"Entity[\\\"Financial\\\", \\\"NASDAQ:NVDA\\\"]\"", 
         "\"financial entity\""},
        "Entity"], ",", "\"\<Jan. 1, 2000\>\""}], "]"}], ",", " ", 
     RowBox[{"FinancialData", "[", 
      RowBox[{
       TemplateBox[{"\"Advanced Micro Devices Inc\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Financial\"", ",", "\"NASDAQ:AMD\""}], "]"}], 
         "\"Entity[\\\"Financial\\\", \\\"NASDAQ:AMD\\\"]\"", 
         "\"financial entity\""},
        "Entity"], ",", "\"\<Jan. 1, 2000\>\""}], "]"}]}], " ", "}"}], ",", 
   " ", 
   RowBox[{"PlotLegends", " ", "\[Rule]", "  ", 
    RowBox[{"{", 
     RowBox[{"\"\<Nvidia\>\"", ",", " ", "\"\<AMD\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "700"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.826702693561565*^9, 3.8267027004050817`*^9}, {
  3.826702920609478*^9, 3.82670292142344*^9}, {3.827391959694751*^9, 
  3.8273920357466707`*^9}},ExpressionUUID->"9e02a5c1-5669-4907-9822-\
d04a2fcb8f9d"]], "Text",
 CellChangeTimes->{
  3.8394922705460253`*^9},ExpressionUUID->"8bf30f98-560b-47c9-a492-\
c67ee07b306f"],

Cell["\<\
Vidimo,  da je AMD po rasti svoje delnice prehiteval Nvidio pred letom 2005, \
pribli\[ZHacek]no leta 2007 pa se je zadeva obrnila.\
\>", "Text",
 CellChangeTimes->{{3.839492278557447*^9, 
  3.839492304849962*^9}},ExpressionUUID->"dac9f3a8-14e8-414f-8c3d-\
e977aebc87b3"],

Cell["\<\
Poglejmo si net margin, ki nam pove koliko dobi podjetje \[CHacek]istega dobi\
\[CHacek]ka na en dolar prodaje.\
\>", "Text",
 CellChangeTimes->{{3.83960087956748*^9, 3.8396009049491777`*^9}, {
   3.839645284569525*^9, 3.83964531339473*^9}, 3.839645352353134*^9, {
   3.839658779478972*^9, 3.839658791886943*^9}, {3.839658885486945*^9, 
   3.839658894830014*^9}},ExpressionUUID->"218afd9e-362e-4fd6-b74d-\
00c141de32ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"companyTS", " ", "=", " ", "\n", "  ", 
   RowBox[{"EntityValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       NamespaceBox["LinguisticAssistant",
        DynamicModuleBox[{Typeset`query$$ = "AdvancedMicroDevices", 
         Typeset`boxes$$ = TemplateBox[{"\"Advanced Micro Devices\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"Company\"", ",", "\"AdvancedMicroDevices::7739t\""}], 
             "]"}], "\"Entity[\\\"Company\\\", \
\\\"AdvancedMicroDevices::7739t\\\"]\"", "\"company\""}, "Entity"], 
         Typeset`allassumptions$$ = {{
          "type" -> "Clash", "word" -> "AdvancedMicroDevices", "template" -> 
           "Assuming \"AdvancedMicroDevices\" is a company${separator}Use as \
${desc} or ${desc} instead", "count" -> "3", "pulldown" -> "false", "default" -> 
           "{\"C\", \"AdvancedMicroDevices\"} -> {\"Company\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "Company", "desc" -> "a company", "input" -> 
              "{\"C\", \"AdvancedMicroDevices\"} -> {\"Company\"}"}, {
             "name" -> "Internet", "desc" -> "an internet domain", "input" -> 
              "{\"C\", \"AdvancedMicroDevices\"} -> {\"Internet\"}"}, {
             "name" -> "Financial", "desc" -> "a financial entity", "input" -> 
              "{\"C\", \"AdvancedMicroDevices\"} -> {\"Financial\"}"}}}}, 
         Typeset`assumptions$$ = {
         "{\"C\", \"AdvancedMicroDevices\"} -> {\"Company\"}"}, 
         Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          2.737848`6.888954326777632, "Messages" -> {}}}, 
         DynamicBox[ToBoxes[
           AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
            Dynamic[Typeset`query$$], 
            Dynamic[Typeset`boxes$$], 
            Dynamic[Typeset`allassumptions$$], 
            Dynamic[Typeset`assumptions$$], 
            Dynamic[Typeset`open$$], 
            Dynamic[Typeset`querystate$$]], StandardForm],
          ImageSizeCache->{261.2265625, {8.11328125, 17.11328125}},
          TrackedSymbols:>{
           Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
            Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
         DynamicModuleValues:>{},
         UndoTrackedVariables:>{Typeset`open$$}],
        BaseStyle->{"Deploy"},
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True], ",", 
       NamespaceBox["LinguisticAssistant",
        DynamicModuleBox[{Typeset`query$$ = "NVIDIA", Typeset`boxes$$ = 
         TemplateBox[{"\"NVIDIA\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"Company\"", ",", "\"NVIDIACorporation::7ymsk\""}], 
             "]"}], "\"Entity[\\\"Company\\\", \\\"NVIDIACorporation::7ymsk\\\
\"]\"", "\"company\""}, "Entity"], 
         Typeset`allassumptions$$ = {{
          "type" -> "Clash", "word" -> "NVIDIA", "template" -> 
           "Assuming \"NVIDIA\" is a company${separator}Use as ${desc} or \
${desc} instead", "count" -> "3", "pulldown" -> "false", "default" -> 
           "{\"C\", \"NVIDIA\"} -> {\"Company\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "Company", "desc" -> "a company", "input" -> 
              "{\"C\", \"NVIDIA\"} -> {\"Company\"}"}, {
             "name" -> "Internet", "desc" -> "an internet domain", "input" -> 
              "{\"C\", \"NVIDIA\"} -> {\"Internet\"}"}, {
             "name" -> "Financial", "desc" -> "a financial entity", "input" -> 
              "{\"C\", \"NVIDIA\"} -> {\"Financial\"}"}}}}, 
         Typeset`assumptions$$ = {"{\"C\", \"NVIDIA\"} -> {\"Company\"}"}, 
         Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          1.037277`6.467439741695365, "Messages" -> {}}}, 
         DynamicBox[ToBoxes[
           AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
            Dynamic[Typeset`query$$], 
            Dynamic[Typeset`boxes$$], 
            Dynamic[Typeset`allassumptions$$], 
            Dynamic[Typeset`assumptions$$], 
            Dynamic[Typeset`open$$], 
            Dynamic[Typeset`querystate$$]], StandardForm],
          ImageSizeCache->{154.2265625, {8.11328125, 17.11328125}},
          
          TrackedSymbols:>{
           Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
            Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
         DynamicModuleValues:>{},
         UndoTrackedVariables:>{Typeset`open$$}],
        BaseStyle->{"Deploy"},
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True]}], "}"}], ",", " ", "\n", "   ", 
     RowBox[{"Dated", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<TotalRevenue\>\"", ",", " ", "\"\<GrossProfit\>\"", ",", " ", 
         "\"\<OperatingIncome\>\"", ",", " ", "\n", "     ", 
         "\"\<NetIncome\>\""}], "}"}], ",", " ", "\n", "    ", 
       RowBox[{"Interval", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"DateObject", "[", 
           RowBox[{"{", 
            RowBox[{"2014", ",", " ", "1", ",", " ", "1"}], "}"}], "]"}], ",",
           " ", 
          RowBox[{"DateObject", "[", 
           RowBox[{"{", 
            RowBox[{"2019", ",", " ", "1", ",", " ", "1"}], "}"}], "]"}]}], 
         "}"}], "]"}]}], "]"}], ",", " ", "\n", "   ", 
     "\"\<EntityAssociation\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.8394923236598463`*^9, {3.839590334469487*^9, 3.839590334503448*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"d63a4167-868e-44c7-9685-729306e2588b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Multicolumn", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"data", "=", 
          RowBox[{"#", "/.", "companyTS"}]}], "}"}], ",", 
        RowBox[{"DateListPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "/", 
             RowBox[{"data", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "/", 
             RowBox[{"data", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "/", 
             RowBox[{"data", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Full", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "#"}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<gross margin\>\"", ",", "\"\<operating margin\>\"", ",", 
             "\"\<net margin\>\""}], "}"}]}]}], "]"}]}], "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
       NamespaceBox["LinguisticAssistant",
        DynamicModuleBox[{Typeset`query$$ = "AdvancedMicroDevices", 
         Typeset`boxes$$ = TemplateBox[{"\"Advanced Micro Devices\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"Company\"", ",", "\"AdvancedMicroDevices::7739t\""}], 
             "]"}], "\"Entity[\\\"Company\\\", \
\\\"AdvancedMicroDevices::7739t\\\"]\"", "\"company\""}, "Entity"], 
         Typeset`allassumptions$$ = {{
          "type" -> "Clash", "word" -> "AdvancedMicroDevices", "template" -> 
           "Assuming \"AdvancedMicroDevices\" is a company${separator}Use as \
${desc} or ${desc} instead", "count" -> "3", "pulldown" -> "false", "default" -> 
           "{\"C\", \"AdvancedMicroDevices\"} -> {\"Company\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "Company", "desc" -> "a company", "input" -> 
              "{\"C\", \"AdvancedMicroDevices\"} -> {\"Company\"}"}, {
             "name" -> "Internet", "desc" -> "an internet domain", "input" -> 
              "{\"C\", \"AdvancedMicroDevices\"} -> {\"Internet\"}"}, {
             "name" -> "Financial", "desc" -> "a financial entity", "input" -> 
              "{\"C\", \"AdvancedMicroDevices\"} -> {\"Financial\"}"}}}}, 
         Typeset`assumptions$$ = {
         "{\"C\", \"AdvancedMicroDevices\"} -> {\"Company\"}"}, 
         Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          1.130348`6.5047571637160715, "Messages" -> {}}}, 
         DynamicBox[ToBoxes[
           AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
            Dynamic[Typeset`query$$], 
            Dynamic[Typeset`boxes$$], 
            Dynamic[Typeset`allassumptions$$], 
            Dynamic[Typeset`assumptions$$], 
            Dynamic[Typeset`open$$], 
            Dynamic[Typeset`querystate$$]], StandardForm],
          ImageSizeCache->{261.2265625, {8.11328125, 17.11328125}},
          
          TrackedSymbols:>{
           Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
            Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
         DynamicModuleValues:>{},
         UndoTrackedVariables:>{Typeset`open$$}],
        BaseStyle->{"Deploy"},
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True], ",", 
       NamespaceBox["LinguisticAssistant",
        DynamicModuleBox[{Typeset`query$$ = "Nvidia", Typeset`boxes$$ = 
         TemplateBox[{"\"NVIDIA\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"Company\"", ",", "\"NVIDIACorporation::7ymsk\""}], 
             "]"}], "\"Entity[\\\"Company\\\", \\\"NVIDIACorporation::7ymsk\\\
\"]\"", "\"company\""}, "Entity"], 
         Typeset`allassumptions$$ = {{
          "type" -> "Clash", "word" -> "Nvidia", "template" -> 
           "Assuming \"Nvidia\" is a company${separator}Use as ${desc} or \
${desc} or ${desc} instead", "count" -> "4", "pulldown" -> "false", "default" -> 
           "{\"C\", \"Nvidia\"} -> {\"Company\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "Company", "desc" -> "a company", "input" -> 
              "{\"C\", \"Nvidia\"} -> {\"Company\"}"}, {
             "name" -> "SessionList", "desc" -> " referring to a computation",
               "input" -> "{\"C\", \"Nvidia\"} -> {\"SessionList\"}"}, {
             "name" -> "Internet", "desc" -> "an internet domain", "input" -> 
              "{\"C\", \"Nvidia\"} -> {\"Internet\"}"}, {
             "name" -> "Financial", "desc" -> "a financial entity", "input" -> 
              "{\"C\", \"Nvidia\"} -> {\"Financial\"}"}}}}, 
         Typeset`assumptions$$ = {"{\"C\", \"Nvidia\"} -> {\"Company\"}"}, 
         Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.889303`6.40059475087545, "Messages" -> {}}}, 
         DynamicBox[ToBoxes[
           AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
            Dynamic[Typeset`query$$], 
            Dynamic[Typeset`boxes$$], 
            Dynamic[Typeset`allassumptions$$], 
            Dynamic[Typeset`assumptions$$], 
            Dynamic[Typeset`open$$], 
            Dynamic[Typeset`querystate$$]], StandardForm],
          ImageSizeCache->{154.2265625, {8.11328125, 17.11328125}},
          
          TrackedSymbols:>{
           Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
            Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
         DynamicModuleValues:>{},
         UndoTrackedVariables:>{Typeset`open$$}],
        BaseStyle->{"Deploy"},
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True]}], "}"}]}], ",", "2"}], "]"}], 
  "\[LineSeparator]"}]], "Input",
 CellChangeTimes->{
  3.839492334405018*^9, {3.839590358878743*^9, 3.839590360787986*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"d0d2101f-0fe2-4ef9-b296-1ad034806ef1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, 
         GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDIAWIQDQQXUu+8cuTbsUKqmfe6PZD/IOX1K8dNE1p1UhKv
gfgKfb9eOW5uqJmoYQrmJ2znfO1o+EGz1i7hKojv0CPx2nH+G7bw/U+vgPgB
3eqvHRXnbpe4VHkZxJ+wxey1YygYXATxL9x1fe0YGD/v7vJAMP/BnZDXjqce
My555ATmf7id/Noxr+zppumBl0B8A9bi144+P33Sau6eAfEL9JpeOyb/STq2
eedZsH3ME187Bh1qnv6+6RzYfUwLXjtq9fzqVWg+D+Iv0F7/2jFy/VGdhzFg
9z4I2ffa0Zat4ebco2D+Ac2zrx0XPQ6IuJkP9t8FjTuvHbfnN7bn/gbzBYJe
v3YMPl2W1rAIHD4B1b9eO570n7X4kP4Ne1j4OQk9C3r4eAE8/Kovz773Zdly
ePid5jz/xfzFMnj4ba5p/vVr62x4+Em4bv8t+LYZbh4DAoDtQ+JTRZ6E+AaH
3/NvgYYWLjPh4bdLts3hyMEZ8PA7Ftux56fsUnj4fftx8FVU/3p4+CW/EyzY
c3MDPPyebeMy3n9lI9y/dfPSikUy6uHucRYDuagH7p7gZH6gkxqHbfp7y+8W
evhvDzz8ik0fnjMMXwwPvx1MgVV/MpfBw++IAIfMxaWr7BkmzEtkkUHE74Os
7tX7VyH41r+/TlP+g0gPW7JZPzw+hJIeBlv6B8ff3cscp217F+yHxZ9pRA6v
WPTm/bD4817gnawzZdt+WPwpfb2QsV9n535Y/LG3dHw6OHHDflj8fdKZ23jr
w679sPgLW1B4d8ZmsH5w/N2ymMI9tQWsHhx/O/PtNjCvX7d/sKb/wCmsR47s
2bQfFn4b8pYtPMi9Zz8s/OTqLR58bD8MD79dVQ3r5Bachoef+zOxuS+1jsLD
76aJ4pXMB4fh4Xf6FEPci4Rt8PD7xnpDzIbpIDz8el5d/Tm9ZS88/G7aJm4p
1NgOD7/HG5Yrf6zdAw+/tdeTphWs69oPCz8h0+IvHrsr91Oa/gFEKs7R
          
          "], {{{}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{1, 30, 31, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11,
                 10, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{21, 28, 61, 25, 24, 23, 22}}], 
               PolygonBox[{{62, 29, 40, 39, 38, 37, 36, 35}}]}]}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{41, 26, 63, 43, 42}}], 
               
               PolygonBox[{{64, 27, 60, 59, 58, 
                57}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, \
{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             
             LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
              17, 18, 19, 20}]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[{21, 22, 23, 24, 25, 61}], 
             LineBox[{62, 35, 36, 37, 38, 39, 40}]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[{41, 42, 43, 63}], 
             LineBox[{64, 57, 58, 59, 60}]}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]]}, {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]]}, {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]]}, {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[
              1.6]]}, {}, {}, {}, {}, {}, {}, {}}}], {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {3.6052128*^9, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {
            Charting`DateTicksFunction[
            Automatic, DateTicksFormat -> {Automatic}], 
            Charting`DateTicksFunction[
            Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
             None]}}, GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
           "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           TemplateBox[{"\"Advanced Micro Devices\"", 
             RowBox[{"Entity", "[", 
               
               RowBox[{
                "\"Company\"", ",", "\"AdvancedMicroDevices::7739t\""}], 
               "]"}], "\"Entity[\\\"Company\\\", \
\\\"AdvancedMicroDevices::7739t\\\"]\""}, "EntityTraditionalFramed"], 
           TraditionalForm], 
         PlotRange -> {{3.6052128*^9, 3.7552032*^9}, {0, 1}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"gross margin\"", "\"operating margin\"", "\"net margin\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{}, 
         GraphicsComplexBox[CompressedData["
1:eJzt1OtL01EYwPGVhoZbL7TImkYKzoh5KTNFA3+HcnkBJRPSynSRopY4pKmV
tzBIR/ZCEG/zghc0EdEuUjnn5pxloO23zeYLRWfhZSfaTzLmpmJ6oMf+gN4E
PnA4fDlvDp8Xj8ft7LjU/SwWq2j77Nzbo+jWmpAkiLreWWkM227RNaMJLaeJ
7RLqSPeWMCYULLI0iFpIMy+2TEj6wFlQ3kjaX3cII4d81/62YdJzhe4Y1Svj
ZpOWSZ/s4GNkPuw0sKElnaIJxWgrxPWVdol0szUKo+KrBveNX6RLJhIxsibr
XeId53daYUnHKLpf6MalSLM88jHy5UgKo0tJU1FPMXpe1O06riHNrFZh1Jj3
UFrxg7T/iXaMbtEHPzoxpEWXX2O0btsZ0r0iFUY8Sf3jcZ+v5H9cLUYM/4bd
aAvp5ktGjNq8NwPsraTnshiMNCMBjjrWt7A/foqMdX2XXA5+0YaVe2KjAvym
1wr4Xi7D4KfyXBr4dFcFfkyOuImSjYAfNZ8TWxmgBj+afvP2iIMa/DZ7I47l
v1eDX62wwa3z0Sj4UbbctTPPPoBfJifJenZ9DPzkkQWCbOfP4BcuHSyWMTT4
7VPOpljYOvCL9VpLVrH14Jcn0/m35+rBzz0mrZTLmwS/8yn8kPQDBvDLifgZ
GE4bwE+XzZEPSQ3gtyKMOuUkGAA/iwdXUT4zCH5SW2Z835Qc/CoqQxcnbyrA
78qdwHc1AiX4PTFXV5ntleDX2te8IQyWgV9iG/vCTN0Q+C0GiWeUyUPgRy9M
v+zhKMEvbPT+iqRMDX7f7VKXbdQY+OWeG0no6ZsAv4tNngu8Wg34nfapkfaX
0eCXEVJSvZquBT/z8chCPxc9+Hlqs2Jj2F/Aj9fedbTId9evw5rk6O03BX6s
3SHvf/U/ed/bD3v7YW8//H/74Tfh7Fa9
          "], {{{}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{1, 65, 66, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11,
                 10, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{21, 63, 64, 40, 39, 38, 37, 36, 35, 34, 33, 32, 
                31, 30, 29, 28, 27, 26, 25, 24, 23, 22}}]}]}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{41, 61, 62, 60, 59, 58, 57, 56, 55, 54, 53, 52, 
                51, 50, 49, 48, 47, 46, 45, 44, 43, 
                42}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, \
{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             
             LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
              17, 18, 19, 20}]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             
             LineBox[{21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
              35, 36, 37, 38, 39, 40}]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             
             LineBox[{41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 
              55, 56, 57, 58, 59, 60}]}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]]}, {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]]}, {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]]}, {
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[
              1.6]]}, {}, {}, {}, {}, {}, {}, {}}}], {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {3.6001152*^9, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {
            Charting`DateTicksFunction[
            Automatic, DateTicksFormat -> {Automatic}], 
            Charting`DateTicksFunction[
            Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
             None]}}, GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
           "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           TemplateBox[{"\"NVIDIA\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Company\"", ",", "\"NVIDIACorporation::7ymsk\""}], 
               "]"}], "\"Entity[\\\"Company\\\", \\\"NVIDIACorporation::7ymsk\
\\\"]\""}, "EntityTraditionalFramed"], TraditionalForm], 
         PlotRange -> {{3.6001152*^9, 3.7499328*^9}, {0, 1}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"gross margin\"", "\"operating margin\"", "\"net margin\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8395903619127827`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"3474f86a-4013-4c06-9121-0366aa443472"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Geografska analiza podjetja", "Section",
 CellChangeTimes->{{3.839412337092794*^9, 
  3.839412345568125*^9}},ExpressionUUID->"7a2cdff4-6c29-4eb2-aa60-\
a2229c54d0aa"],

Cell["\<\
Poglejmo si katera podjetja so v okolici Nvidije (Nvidia je v sredini \
zemljevida)\
\>", "Text",
 CellChangeTimes->{{3.8394923657550983`*^9, 
  3.8394923956549597`*^9}},ExpressionUUID->"cf802da4-1f81-4a9c-834e-\
33eec3755807"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EntityPrefetch", "[", 
  RowBox[{"EntityProperty", "[", 
   RowBox[{"\"\<Company\>\"", ",", "\"\<Position\>\""}], "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<Company\>\"", ",", "\"\<NVIDIACorporation::7ymsk\>\""}], 
     "]"}], "[", "\"\<Position\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.839492401798194*^9, {3.839590374681087*^9, 3.839590374690868*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"b123c3bf-4695-4160-8738-9cef9fe14d2d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Prefetch successful.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Property\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"position\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Company\"", ",", "\"Position\""}], "]"}], 
                    "\"EntityProperty[\\\"Company\\\", \\\"Position\\\"]\""}, 
                   "EntityProperty"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Prefetch successful.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Property\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"position\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Company\"", ",", "\"Position\""}], "]"}], 
                    "\"EntityProperty[\\\"Company\\\", \\\"Position\\\"]\""}, 
                   "EntityProperty"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Domain\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Company\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"CloudBase\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"https://www.wolframcloud.com/\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Prefetch\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success["Prefetch", 
   Association[
   "MessageTemplate" -> "Prefetch successful.", "Property" -> 
    EntityProperty["Company", "Position"], "Domain" -> "Company", "CloudBase" -> 
    "https://www.wolframcloud.com/"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.839590380486067*^9, {3.839590816549581*^9, 3.839590816690433*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"8bf4f74f-e252-4fc5-ab91-b618daf2c466"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nearbyCompanies", "=", 
   RowBox[{"EntityList", "[", 
    RowBox[{"FilteredEntityClass", "[", 
     RowBox[{"\"\<Company\>\"", ",", 
      RowBox[{"EntityFunction", "[", 
       RowBox[{"c", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MissingQ", "[", 
           RowBox[{"c", "[", "\"\<Position\>\"", "]"}], "]"}]}], "&&", 
         RowBox[{
          RowBox[{"GeoDistance", "[", 
           RowBox[{
            RowBox[{"c", "[", "\"\<Position\>\"", "]"}], ",", "pos"}], "]"}], 
          "<", 
          RowBox[{"Quantity", "[", 
           RowBox[{"10", ",", "\"\<Miles\>\""}], "]"}]}]}]}], "]"}]}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Length", "[", "nearbyCompanies", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "944", "*)"}]}], "\n"}], "Input",
 CellChangeTimes->{
  3.83949240817959*^9, {3.8395903776464787`*^9, 3.8395903776623573`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"afcfdb9c-f758-4c97-b14b-64c9db59ba8a"],

Cell[BoxData["948"], "Output",
 CellChangeTimes->{3.839590789912521*^9, 3.8395908340770273`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"f78a765e-2db6-4b28-94e7-36e88d91d84d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"netIncomeList", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"DeleteMissing", "[", 
      RowBox[{
       RowBox[{"EntityValue", "[", 
        RowBox[{"nearbyCompanies", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Position\>\"", ",", "\"\<NetIncome\>\""}], "}"}], ",", 
         "\"\<EntityAssociation\>\""}], "]"}], ",", "1", ",", "\[Infinity]"}],
       "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"QuantityMagnitude", "[", 
        RowBox[{"Last", "[", "#", "]"}], "]"}], ">", "0"}], "&"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Length", "[", "netIncomeList", "]"}], "\n", 
 RowBox[{
  RowBox[{"(*", "80", "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.839492414753585*^9, {3.8395908007317247`*^9, 3.8395908007470913`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"1eddffc7-320d-4fd7-a4ea-88a3e0f46a23"],

Cell[BoxData["81"], "Output",
 CellChangeTimes->{3.839590839178171*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"f7114025-7663-426c-b4a3-d85f15f96f99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"TakeLargestBy", "[", 
     RowBox[{"netIncomeList", ",", "Last", ",", "10"}], "]"}], "]"}], "/.", 
   RowBox[{"Rule", "\[Rule]", "List"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.839492423475519*^9, {3.839590844057228*^9, 3.839590844064925*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"b9176fd2-4552-42f3-9cdd-595f3ce3fdf5"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     TemplateBox[{"\"Apple\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Company\"", ",", "\"Apple::5zkjq\""}], "]"}], 
       "\"Entity[\\\"Company\\\", \\\"Apple::5zkjq\\\"]\"", "\"company\""},
      "Entity"], GridBox[{
       {
        RowBox[{"GeoPosition", "[", 
         RowBox[{"{", 
          RowBox[{"37.3317`", ",", 
           RowBox[{"-", "122.031`"}]}], "}"}], "]"}]},
       {
        TemplateBox[{"7.6311`*^10", 
          RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
          "US dollars per year", 
          FractionBox["\"USDollars\"", "\"Years\""]},
         "QuantityPrefixUnit"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {
     TemplateBox[{"\"Alphabet\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Company\"", ",", "\"Alphabet::3t4vn\""}], "]"}], 
       "\"Entity[\\\"Company\\\", \\\"Alphabet::3t4vn\\\"]\"", "\"company\""},
      
      "Entity"], GridBox[{
       {
        RowBox[{"GeoPosition", "[", 
         RowBox[{"{", 
          RowBox[{"37.423`", ",", 
           RowBox[{"-", "122.084`"}]}], "}"}], "]"}]},
       {
        TemplateBox[{"5.1363`*^10", 
          RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
          "US dollars per year", 
          FractionBox["\"USDollars\"", "\"Years\""]},
         "QuantityPrefixUnit"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {
     TemplateBox[{"\"Intel\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Company\"", ",", "\"IntelCorporation::vj6f2\""}], "]"}], 
       "\"Entity[\\\"Company\\\", \\\"IntelCorporation::vj6f2\\\"]\"", 
       "\"company\""},
      "Entity"], GridBox[{
       {
        RowBox[{"GeoPosition", "[", 
         RowBox[{"{", 
          RowBox[{"37.3886`", ",", 
           RowBox[{"-", "121.963`"}]}], "}"}], "]"}]},
       {
        TemplateBox[{"1.8599`*^10", 
          RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
          "US dollars per year", 
          FractionBox["\"USDollars\"", "\"Years\""]},
         "QuantityPrefixUnit"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {
     TemplateBox[{"\"Cisco Systems\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Company\"", ",", "\"CiscoSystems::87m39\""}], "]"}], 
       "\"Entity[\\\"Company\\\", \\\"CiscoSystems::87m39\\\"]\"", 
       "\"company\""},
      "Entity"], GridBox[{
       {
        RowBox[{"GeoPosition", "[", 
         RowBox[{"{", 
          RowBox[{"37.4095`", ",", 
           RowBox[{"-", "121.953`"}]}], "}"}], "]"}]},
       {
        TemplateBox[{"1.0218`*^10", 
          RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
          "US dollars per year", 
          FractionBox["\"USDollars\"", "\"Years\""]},
         "QuantityPrefixUnit"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {
     TemplateBox[{"\"Adobe\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Company\"", ",", "\"AdobeSystems::hp28c\""}], "]"}], 
       "\"Entity[\\\"Company\\\", \\\"AdobeSystems::hp28c\\\"]\"", 
       "\"company\""},
      "Entity"], GridBox[{
       {
        RowBox[{"GeoPosition", "[", 
         RowBox[{"{", 
          RowBox[{"37.3301`", ",", 
           RowBox[{"-", "121.894`"}]}], "}"}], "]"}]},
       {
        TemplateBox[{"5.566`*^9", 
          RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
          "US dollars per year", 
          FractionBox["\"USDollars\"", "\"Years\""]},
         "QuantityPrefixUnit"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {
     TemplateBox[{"\"NVIDIA\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Company\"", ",", "\"NVIDIACorporation::7ymsk\""}], "]"}], 
       "\"Entity[\\\"Company\\\", \\\"NVIDIACorporation::7ymsk\\\"]\"", 
       "\"company\""},
      "Entity"], GridBox[{
       {
        RowBox[{"GeoPosition", "[", 
         RowBox[{"{", 
          RowBox[{"37.364613`", ",", 
           RowBox[{"-", "121.9679336`"}]}], "}"}], "]"}]},
       {
        TemplateBox[{"5.327`*^9", 
          RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
          "US dollars per year", 
          FractionBox["\"USDollars\"", "\"Years\""]},
         "QuantityPrefixUnit"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {
     TemplateBox[{"\"PayPal Holdings\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Company\"", ",", "\"PayPal::3dh69\""}], "]"}], 
       "\"Entity[\\\"Company\\\", \\\"PayPal::3dh69\\\"]\"", "\"company\""},
      "Entity"], GridBox[{
       {
        RowBox[{"GeoPosition", "[", 
         RowBox[{"{", 
          RowBox[{"37.2968672`", ",", 
           RowBox[{"-", "121.8193058`"}]}], "}"}], "]"}]},
       {
        TemplateBox[{"5.215`*^9", 
          RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
          "US dollars per year", 
          FractionBox["\"USDollars\"", "\"Years\""]},
         "QuantityPrefixUnit"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {
     TemplateBox[{"\"Applied Materials\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Company\"", ",", "\"AppliedMaterials::592b3\""}], "]"}], 
       "\"Entity[\\\"Company\\\", \\\"AppliedMaterials::592b3\\\"]\"", 
       "\"company\""},
      "Entity"], GridBox[{
       {
        RowBox[{"GeoPosition", "[", 
         RowBox[{"{", 
          RowBox[{"37.364613`", ",", 
           RowBox[{"-", "121.9679336`"}]}], "}"}], "]"}]},
       {
        TemplateBox[{"4.432`*^9", 
          RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
          "US dollars per year", 
          FractionBox["\"USDollars\"", "\"Years\""]},
         "QuantityPrefixUnit"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {
     TemplateBox[{"\"Broadcom\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Company\"", ",", "\"AvagoTechnologies::35w42\""}], "]"}], 
       "\"Entity[\\\"Company\\\", \\\"AvagoTechnologies::35w42\\\"]\"", 
       "\"company\""},
      "Entity"], GridBox[{
       {
        RowBox[{"GeoPosition", "[", 
         RowBox[{"{", 
          RowBox[{"37.2968672`", ",", 
           RowBox[{"-", "121.8193058`"}]}], "}"}], "]"}]},
       {
        TemplateBox[{"3.953`*^9", 
          RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
          "US dollars per year", 
          FractionBox["\"USDollars\"", "\"Years\""]},
         "QuantityPrefixUnit"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {
     TemplateBox[{"\"Netflix\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Company\"", ",", "\"Netflix::x7767\""}], "]"}], 
       "\"Entity[\\\"Company\\\", \\\"Netflix::x7767\\\"]\"", "\"company\""},
      "Entity"], GridBox[{
       {
        RowBox[{"GeoPosition", "[", 
         RowBox[{"{", 
          RowBox[{"37.2329763`", ",", 
           RowBox[{"-", "121.9510656`"}]}], "}"}], "]"}]},
       {
        TemplateBox[{"3.759043`*^9", 
          RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
          "US dollars per year", 
          FractionBox["\"USDollars\"", "\"Years\""]},
         "QuantityPrefixUnit"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{
     Entity["Company", "Apple::5zkjq"], {
      GeoPosition[{37.3317, -122.031}], 
      Quantity[7.6311*^10, "USDollars"/"Years"]}}, {
     Entity["Company", "Alphabet::3t4vn"], {
      GeoPosition[{37.423, -122.084}], 
      Quantity[5.1363*^10, "USDollars"/"Years"]}}, {
     Entity["Company", "IntelCorporation::vj6f2"], {
      GeoPosition[{37.3886, -121.963}], 
      Quantity[1.8599*^10, "USDollars"/"Years"]}}, {
     Entity["Company", "CiscoSystems::87m39"], {
      GeoPosition[{37.4095, -121.953}], 
      Quantity[1.0218*^10, "USDollars"/"Years"]}}, {
     Entity["Company", "AdobeSystems::hp28c"], {
      GeoPosition[{37.3301, -121.894}], 
      Quantity[5.566*^9, "USDollars"/"Years"]}}, {
     Entity["Company", "NVIDIACorporation::7ymsk"], {
      GeoPosition[{37.364613, -121.9679336}], 
      Quantity[5.327*^9, "USDollars"/"Years"]}}, {
     Entity["Company", "PayPal::3dh69"], {
      GeoPosition[{37.2968672, -121.8193058}], 
      Quantity[5.215*^9, "USDollars"/"Years"]}}, {
     Entity["Company", "AppliedMaterials::592b3"], {
      GeoPosition[{37.364613, -121.9679336}], 
      Quantity[4.432*^9, "USDollars"/"Years"]}}, {
     Entity["Company", "AvagoTechnologies::35w42"], {
      GeoPosition[{37.2968672, -121.8193058}], 
      Quantity[3.953*^9, "USDollars"/"Years"]}}, {
     Entity["Company", "Netflix::x7767"], {
      GeoPosition[{37.2329763, -121.9510656}], 
      Quantity[3.759043*^9, "USDollars"/"Years"]}}}]]], "Output",
 CellChangeTimes->{3.83959084497011*^9},
 CellLabel->
  "Out[44]//TableForm=",ExpressionUUID->"ea762d08-1216-4663-8706-\
bfc740380c71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"geoNetList", "=", 
   RowBox[{"Rule", "@@@", 
    RowBox[{"Values", "[", "netIncomeList", "]"}]}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"GeoGraphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "Red", ",", 
      RowBox[{"GeoDisk", "[", 
       RowBox[{"pos", ",", 
        RowBox[{"Quantity", "[", 
         RowBox[{"10", ",", "\"\<Miles\>\""}], "]"}]}], "]"}]}], "}"}], "]"}],
    ",", 
   RowBox[{"GeoBubbleChart", "[", 
    RowBox[{"geoNetList", ",", 
     RowBox[{"GeoRangePadding", "\[Rule]", 
      RowBox[{"Quantity", "[", 
       RowBox[{"2", ",", "\"\<Miles\>\""}], "]"}]}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.8394924310500593`*^9, {3.8395908525592203`*^9, 3.839590856229611*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"d4658ffd-6c95-4b47-9bf4-c02f5305920a"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1: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
FE0rBBYAkS/G4asXe+COPsXiY2WpWckKSGKsqqivPqN/7HZmepyjhJidEDBm
SDerfJh1EWhjDCc0lGFXyQEeABbDVTUVTaBdMDJ+G4tEgjPNe4GzVhr7n2v4
4pHS0233rhxGKkr/9UcxH8hUBfFIFFNw3UnOBwiz1oeK2LfHEQWyEISZhDZ7
/9NxzurWnYoL2c01hPVgk3JtHu1sLQ78DzVl9it7j1z6W6DqUXOaKk86k9W5
/ExxNi10sDDFXN/fJqDYdlDunh82I83ygbi2mwcHvfVT2Ze0Z5XpsMGjzF9/
OPFey9qJKKIPRJOGB3wlolQJCj+EYkDY6alG+RQWPr1d0j6TpU275XGF3QJh
iwvOimg2TyA1ma6eJKWl6+U7YqWwPuYCisZGENdLZWcZ2HJ+sc0KCwIy/hVB
k6XR9ZcPkssYRYY7Kl8vhxffRvu5aNYEmQIXVN8D6ITj8C9oBfyBDosL84ga
r8Si1XbgTZubSYOJIYSKttqsjfyv0eu9rZKvXTJ1pVCqx2SCGxfj/jy8N3/g
GmNva/nR9Ihi5CSlWv1l4OPwq/+93GuAWiwdY7N/aXQsZHftliiMikcAkJ0c
gE5umTwzHZ867QvIa5UTklHMEqjPnCy5W8WvlHytNkMdPEEf8uBfsiIahAnF
0JD73rz09fMdCNGz4s8fz/zoi+q1V7+6589UX73cq1YXUQu6CfZM60uT1v05
WpPHn4UqA3qnVgiiPg5qC/uB96XpvtvTNxS0z6fUNZ8qn2g0jTXsKpedVAcW
SwoTe4qVhGSxkFMMIBOE2SCJzdjyRe1guvuycJNBZ1eu/8ldK0iYAMdgMQDH
ltwEBuFxuw6d7nZl+wThWTx9vNvX84tMboRBuBJkvpsVUR4xPXHXOCy4t9tK
+FotZicGwTJBEiimzl9AkkIsABohCAusUTQI2ysrDeI20HPKLISMSfgUIIi0
04xMUY6qGgreQdwmxtJIKdNzqBh+z79xaDsbY1pUVZDplfh2om6KsuMKW92e
TgFeAuWgIvc8I8Gf0Po1z7WsNmToCoV5xBZF/xcYdd9+jan2ReAV5BE7o+Jx
i9hH8eWEKNYmm2NsPN1tWhRbtMiUFGsN6DnhiemgKsYYLe7RPpBdjPC1AxSb
cPF7gicuTVD1bOHjhnVlI2v49eTxLpCBoigXMpCpUB0PXjoVVOQzWsFjvVbi
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
ZhhNZTJd2qJ93TEu99Wbk0a4TeDFcEHg6Y1BDmZkdJjBxO59VDxgIKzxFJmv
7scTdDTTqOYEDnzfc8cYZNbwV06+uHj8eaxfpdoPGyjAuG840Z81flf2uVw0
1M2I7lhZR6gdi1v8OjVBM4ciR7GWx/wgKCZfrIhiaUiryhu7iPWxXevX/vEL
1CeF0+9cuRaVMeSozi2OOB6N9x/xv9rKLVn4mzd22L/VNefawsYGyePDvF85
8xNLKVahmDEo5n4ugX02Y253J19Zn3lXT9aZk0ei++ZJMY2MCKH+JptXnKC4
NtsnRalGLu+m5bQbinZDHcDlRrG9aQ+m6KI6ozmo8YmEWPFq8bzURVH1aMCl
fki2mjUMiOwoNnHmTXXu7u8/fe6sdevmca7PT/BDHGTtvZ+a+SrXpBx6hs/5
K6ZM8UYmYWzguFDs2vuvKs7WEhj8yDixwFMKb54E1IAPUINx6thbvEqlTcrM
u8M/LgtigLBZx5bzb2FIK+9SS+Ql8luGYim5WQjucSTc8LJgArL+3hO6uKam
m/SE+S3TJ0z3rQn1by00FSfyQBnHYPqWOWDpjXqvaPBDku+IYVJFFEVTxPCy
KtCUqlkz+9HnzKf/XCbApac+aSHq4vJbIUm6JqXKpnBW/tA1R9qVcS/dhmzU
uRZqZq3FZNZGM/3VcnAz2YPJ0sWvPp6jVcYlcRUPHnK0gl25YByGi0MWhmAd
4OBKxaoKHY/3ruWo8I79832TyGV3TI3LGWX5+moFqk0bF6fHr6+1CAPeb6zr
ZnM5lIcPP2Ls65Hhu+m73ftu7PaTB6tFLNscnFjMxsziUGWjsco5Wb1wxLhP
SbWv/KQYf3vkyLWj328i2qFn5479E7/epW9rXVBTDw7esBLet26ocsSOLRbd
akWxzvViS4t1J8o+DYpV+2L5MMmO/iMcmz9QCjACcFhXNciu/GK8sZkfmXru
eaHYwvoFRzHsMBuopSYQo7P7+uEdDmzsbI9VpS0NitC4m5dKuW1kAi1rdr1F
EQKbUxAiznyBuZ/j31m9Od+az2yjJ8WaU5f0OlamenA8xdvEQEkws6WeN0X8
rFZ6ZFidbRulWK6mV6E2VQ2AsHiCeIicGm80Zob/Q4PPNUaS1C3X1wfYoSIL
UIy9PZh5iXP87NI/3b93U8Iywkr1F8aYswwGy8Smw+monXy5GGnMB5/PHf3R
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
Rfp+s60xtGCIFcvYj84uDnpvTZFs02LMGm7yu02mR+oE6g9adi45e8SLLArh
a+/M3mgsKXmKPwuK8TRZ2fhBTDG3tEL9kgvTAfMJ88Ptfa29X1aGng76/JbC
G7Vlw77coX1H3C0+VwHC6nsV/TEbbRpOPeXAmkXufVmY6I8zYjDni49N3FJF
ExqWGxrrlzwO11fpMDn1hdHIdQB87Nsls5F0bFRpgqOH7RXtHAssRUFR1rEA
HIDJ/uTxN93GPGjuiHlokTc8EZmFSUEPXJ6LVy3ybJ6aLxXSg1/AMin0YkwU
ZlRLJj9Ub14zUtIKEBneaSGu8sHnJt+dkyTxa8A7Y9Qn0RKRMy0In85FKKbI
rcAI5BLH/nGqFKtUppIvxuypHJs3fBc4cxkfXTgNPmeG+ZOGoqP6nP9aYFZE
x5mX+ER11v5Q+z/l9cqfu2Po/+7fu7kxc4TxsP6LbxDFnnjLzy79bz50YRAG
90B/7wkwFxRj8AYD20yj31mbHe1RKi32GYmDz61uOvEuUmH+hCRzeV2Y6nM2
/qOvrQ8dOxzpMS1E3S2CpEiW4OtKjfEmW0El59d5fc5jbEWxmpwmuSHxzjSj
2lgSpoBikXI/NXO+cmXu0iWK0nOQ3lG6qQPZhWFRp7bjvX0u6qtkRBRFdDdz
N6+i5YBZaXg8tkX3PnVkaPH9E53SG0nzqoeF69hNOFHjw4uDIlDxaLAG0wot
Pj7z022xzI42lHeVWYhx4KkpTvg0+MVO8LOiTGKBozi2PjZf1eVZZiousL8x
BFmbd5O7e+jZ1e5uj29qqK75znbdQzdWNnvlTQym6OUaPN0yqpg1e9JLevix
05m/5yGVhyI0VGMOH95x2NuaFP7pbiz/U6vK6IjF7JhGM49w+p9jpLrsLQIr
OB2FGKM04YGzxQlTUfNvZcHPR9bYqMOsityoJsvMgFWKpd3yRnQRKVW6gKRS
yfHYcPSAJAUMRSbRieOaMVwoWENhEJ41ob96UnMFI7PR/4nSH0HHU2y8Pniw
oXvgs6Xf6ti4Ci57q36gX37BHm4wbn28oy/6kAq6/qQhp/Jxolbe3a5/du0Y
w2OJ/qohumM7SNJfjeE/8yKvMd9XHmxZdtnuz70iGmSMcOIW4YJdmDsjd0z/
xQZK2elRkuwAUL56uGMSEF5bXeWX8SCzgbldoz2KUGV0vmSNb63ZTtaPW8TS
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
bzOYpDmPjF4VrgPjllK/rFHGBWH9Mip3SQ2yVhD048VBb4XMH/I6lAwJWwrD
LrWSp4N4I4BSj2jZjBt5kZHkWeC4uJKcQKQjhg7jMrJiJqyiraWldHpA/3ut
KrvBTF4rsYsN6YuxmiSGKLi/dFii6EBvOnAAy1mbCq0NblTX1Yu2EOMWR1/m
3BynvSyXg6FOO1XHW+O9v2TC9JGWog4wuq0P//3Sr5iZiE8AGctZXstPwzmy
THuvhVVmxEncWpmC0xTrggG/fNNEPqQDMpaEZtASty97ZbJWStvNPRRDyy/P
1at//b5YbAtqfd6rf2GIhicK1lvhQ8SE4/Tw7fr9afOwCba2Jh7C3Xo8d5eN
cljzkyKg56GY+nFRFHMq2XsBJSC2Gw7F3NTAbJ+jtx3N0qIYXismKdvGzGVC
G72nPi3thv1AMVeoXdyuXt6rsjuoFakFbrC+FYg+BMVClhfH8wGXYy+g5MGy
6btGOGMlArqxQDHiV7mVxSeODiOfHTtJ7Sm0xw/v0QjDYEr6rWM/kuNh+0AL
ybkDrIOd0FwrfimhAtZAaX5olDyaTp4ndoiasRtEXVtMkiBBv887ZZwmjjI9
meAcGZN5LUUBcFa/+MPKO78M8rxY4tkxsa3ekX3L1q9mNGOLEv0U/dDQopLG
dVnxRTQYjX4Fc9lo0nFJuU9mQ9DDCpLinRgXj27lodBy02fhy8AfbJXH0Qd8
ZkZfYb0trKlpX8HKDgFxOi5HoycuUB+Ms5msWRl9tS2xMxbC4Jflkr8js8V6
XtYJjaIJnS/7jZ0g6/Viki2Dm8in8aOln7S3KxyGwbGF8xVNFtMGaLtaWUrP
ioBGUElzTuKKD9/fiPXCHn5wM9qBW42V+bkrukM8PJpDjZFAbn5cAfHRh9sA
sg6Ebaay+SvVq37I9JnjyxffYNu325XPTzdYG3BzKT8EIyDZZCHn9vrZb1N3
8XjNKxLdB8hIBSykLwkqhShGOQudF2bWs33dDo0ossIvazP176qHYk9+PQeZ
F2MDcqnNwQkSc2VeuLTclUcWoti7mV/02RsjihiTS9mvsJgmgezhgxZnTzQA
yLkhMu1hHJZXk0w3ZqnKh2uv03TcL/8epyNBP2P06DvYQ7MU40FIp9e4GfVD
mBSgYUNPaBcNrlm+OMfsY/ISqd3EnVjowQliBRaHIo+d2oyW9F4692OuL5XC
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
UOOjB1tA3nxjCr/CHcOXcMeAaDhTfGIZTr1TCZa2l/oBLpRFMVix67s7jCXa
dn65Iau5iKIjWAb0DNWnAnLhp5XZU1srM16O5NVIXom22ctB/ggW2I367YWN
tVKl7Puqf0OxL6zZwjF4I2BgP/ywiWVAmOhePtyBwbdBP5h9vI+xgy48pTIx
lHwNXhWFrYIWplRXLv1zlDDspV33AkqgGMsiA3FWpl6Vbpz73vrZvwM+2rb7
9rfRWue/ht2y2QwCngIPRG5kPE3LrIw94EDoeb0wDqfMC0MB1PCN8val88Yg
4IIAwjwU29xY/VSEoTZgBkkFFGRUFNsq2YLaFJmPbdQwZ9qFw8Fg1G1vTVQ5
CiaL8BHrjoneoIqKx4lfkZcI805Ro2gQqSsjLHmeOq7R5Ah0g0ghVbTKPpiK
PvCF77PMCm8EbnfbUUo0o+ogJNUrtKlyPk+QOyeEtcMhh9Z3JmN8dz1HTUX8
+ueHO1ggywinSS4HTD3lglmMhnIcMKowrSRdwDMVjj0eKnguw9/BVX388N7G
8rg6Ymh4PKS0dG2Fk270QCXKOpkANASjDhfQ08geP3FSdP0IfKS7RGkeBCwP
xdbvLHIZj0cnJBtOhJXO/Vg1PURC33mCpHQKl2PuZKcyZth4C2JezOtFXGSO
GShHFg9h7h4pBYg5fTjoQ2dncPHReeZf4NpqU9cMRyeKSVyx8L/Wm9nAgm0l
85vF/ffri43dqFM2vbask2LqeeEBiEWurudzrdyrZHylkGpu1IjCakVLq11l
WWCp1lrZakik/Fv7ApqdIFMvTD+lBM/Mv1mPCcvAKRh2ABa8D3g3pcSvYepj
8MJuFX65OvRDa1q76P3hCvCJGC0MBM8vv4YvrV5Wr/bJu2Ib26nn+6/WSv/L
eres6yANKIkztaabACS+mJtz8VAMjhgGCeIwGhTDUKEjHWBQLPDLWlXL8Ozl
izGCQeqaTlpFV4sNOarmhi2DwlpX2JWi2J3Mi3gwGK26s3+1TQWhMJYIm+xJ
BLdd4SqFMCzDJenliymKYT9RwmQtPyay6mgwpG9JiSsBawNVrOGloUj4U6ri
DqzhTBn2bCGss3OthzV3kjK2BC9KXTEdD7savXCS4lFkgdLHZ5iLDB9edpGM
ToZP0dA3pPaZU0GUGbFpaZx/Qed1/o7FWVjdQEzldk2KC8TFnyU46a5S19yf
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
retvqWBcZV9OeT6akEpermR6hvBLU2CBRHBw8ZV1I6lG/XuYde8x3J1SPzjF
1cZ786paaf/6Ax8WBvTpGJfR1Y7lp8sdPxp/7zVx0kcPf48/39vdUmF7I+Ng
pJ3CMmii0nhJuHDLXIeUqKzAEnJsMpR3gDldw7ACLpKFdECZ1jnUv6RqPeYX
jlW92jG7SjYvBtDMr09cyq92z80BZL2dFyY7/9YGRZ+v9xqQzRez2dGe5r7l
4OZi6UZmMarxgXu2Lmv/7EEBFOuZuGz/dl89pzP9GnYc81HA3PtxBZ1EZCBf
KoVuEt9LSvKewCBlQR/tRgL7jY7hyGfGFTJHZdpWO8y/gZoi/yYri4EGvMf0
5JjSBfndGYptrx3Dq2tf/vZ96SqAzDqR+aLBQJgK2UQbLSmRhY3ZYdCKAwNb
MYGXTJwRUnB0pn3LprSQE3zRJZyP1pEaJ1XkhY+WPnjFxva+Wa9nUEwQ5lQ7
8M/n/9yfC4sjTvU7BUoU3JOMJCso41HzYmqbojkj4YIEfjlHeIQgiS3I8/NR
ssSADQI0pVwP7ndv6Tr7AhMZORjwiUAlr4Z2qjCmJoP4V4461kiMhsd4ZouR
8hU1Gta0mr6rXsl2MDbhWO57CcQBwvhdqNZMKBNggaXQxyr3EaNZvPQDRgjz
oxfvzPym+RSt/Vmg24rC7E+jCAuxaopQQw5J6MscsysOBBDG6Uif37Xwnj5C
5UZtbrYr634kNoli3BGbiN/6dPL8VOVfs1u8AmcYjL42jPxT7qPlP4B9/HsC
yfqvJ4qNzHVqeXCiTRL3uIjnKKvYoh23/NlalWFnPtPXKIHTSqHtnSYoltST
bAXFfBOUCNR4FcYl+Rp3mQMDJvws9yg57bUYxVaPoSKVRDGZkbK1+YwPZEsX
/zNAJm7It/h6kNFhSYl+aqKZWnjgQ5roKB4XxSBNuuDJOawmJi8q32tJj5uF
br8xVqUQ5rTjhSzTHmgQirm2MrWMDrwNLlfxQNeaaqckkQdlgON5JFMgFHO1
A11x62GIhuaVLBXTeBM7UniKgb3rvFbLFQxig5oFi/WWI21JnJ6hnpkvvhG8
L2KltE9/6sok69UxRzBnsdxDbYoENbYWLRJU1KzQylZWG1cBRXAY3A6dr9R0
3STs0vXty9/hwlb7/0ow5MKqwN/+Lg+SWp/IJLNsHdC41Ma81PSN6yP5Fyit
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
o+W9Y+SMBaZgLJdOc7tW9pV69XiTw9jfmfeZLGcNn1odPQyiTvS4J0eFk+lc
zFeU2l766PJP44Dq5TCgulbK+yiGlQ+mo9Di6tSHXRZadBL3/R0+kD17Vw/0
nEF2h92XiTZLvFd73+fFyKbKPeqWVRp+IzvwDyAadtyNwLAw6YtKzOpxrTHZ
kYpYfHrn/qoo2+NaL5hjifb7rTPVErrqoViQR+HmsCKVfstRT83ua27+vJiP
RA6zKusKHM0Vs8P9HS1q5rfCxaoN2lUHFqAYNDA/PXHvjksy7Gp/G8bUCnIl
zfXeSsgwlt79HhCjvAU1vsfh8MqvFTqDz7GyLByaC+yoYTHsSQld0UyQpUo6
Ja7q7Pr+9EJ5zXa0cvEvA76wMNGuzARohfWW8lHMX8cPoDkCNX5eUUGLRtqC
JYrri6x2GImKppCUN2LV60rCb37RLKjo58nrQjXJMPTnE5NBRVFgeXWQVODl
1O1gT1G81IqnHj38veXbc6EAtYBrx0641peHezGxMACJ09dZWF9dkPHAWPEv
971JYqqAbCw/6FdhODJ+TJfy+3ubZkIxxmCHI4fGKGbmz0vqqi7OTqxE91Rw
5qKL5Tw860gU414sjB2KSVYW6+77+kohOx02XizdcMNyvjg72S9qrz8eG0tZ
fPbeHpS5lms/ww0Oz3R0Xz1nxbBdnacKLTZHCqCq0UdQMEkCYgsD/zh77TUs
2/cb2FkjOGvUo7O0mwGMJGOl9A/gKblagFDiX/A11mf5BFJa7A7wgpRpMo5/
5yqjhmIcSWr+nqHYabgYAwB7kvFvwi+8HI7FhfJa3mCTeTH/gI97nC7cerAu
4s9RtVis1MRwX5a+eFhZxjA1yvSI87K87iT2hx+TChP4gttULkcMTxGEqTc9
NAc6VqyNeyPZnx4fxZRiJ1Ryac+1NmR4YK0WazdtzgNDqZVczTLD/XX81a6/
JQjDKS1/NKrAIE71yOupIjjLk3dMxwsqNvliaqm4GTfUeo2pCE5cW5daqaRO
Y+S91wzF9pau37tZ5grz2min7MvlvUfJ/Jyd+vXYp1bygOkONgIRyT77nx4c
NMsEi93C9vjKVtZikkkU87M7fKBvZKmthRwjK4S5i6nZHezCrFrfM3S+79f+
mnwUoBiO6P79dUu/n58ZutZ9WbcsHv9EbPoM0aR1O/PEeIUWNbRz8+/vnz/Z
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
Dhc=
          "], {{0, 591.}, {578., 0}}, {0, 255}, ColorFunction -> 
          RGBColor], 
         BoxForm`ImageTag[
         "Byte", ColorSpace -> "RGB", Interleaving -> False, MetaInformation -> 
          Association[
           "Exif" -> Association[
             "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com"], 
            "GeoMetaInformation" -> {
             "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com", 
              "TileSources" -> 
              "Wolfram Knowledgebase with data from \[Copyright] \
OpenStreetMap contributors: http://www.openstreetmap.org/copyright", 
              "Projection" -> "Mercator", 
              "PlotRange" -> {{-122.17964172363281`, -121.78276062011719`}, {
               40.13236999511719, 40.538177490234375`}}, 
              "LonLatBox" -> {{-122.17917426275338`, -121.78290723724663`}, {
               37.20397434022708, 37.52600195977293}}, "GeoModel" -> 
              "ITRF00"}]], Selectable -> False], DefaultBaseStyle -> 
        "ImageGraphics", ImageSizeRaw -> {578., 591.}, 
        PlotRange -> {{0, 578.}, {0, 591.}}]], 
      PolygonBox[{{-122.17917426275338`, 
       40.13292202999613}, {-122.17917426275338`, 
       40.5380968156333}, {-121.78290723724666`, 
       40.5380968156333}, {-121.78290723724666`, 
       40.13292202999613}, {-122.17917426275338`, 40.13292202999613}},
       VertexTextureCoordinates->{{0.0011778360704965962`, 
        0.001360336823694297}, {0.0011778360704965962`, 0.9998011998249297}, {
        0.9996305766936757, 0.9998011998249297}, {0.9996305766936757, 
        0.001360336823694297}, {0.0011778360704965962`, 
        0.001360336823694297}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{-121.86216064234799`, 
         40.2139573503481}, {-121.78290723724663`, 
         40.2139573503481}, {-121.78290723724663`, 
         40.13292202999613}, {-121.86216064234799`, 
         40.13292202999613}, {-121.86216064234799`, 40.2139573503481}}]},
       "\"Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright", "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {{
      {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[GrayLevel[0]], 
       PolygonBox[CompressedData["
1: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
yCvdBbfiSP9lFBqVz+Xvv/34//vz/wBTRy7c
        "]]}, {
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.031, 40.29341907203052}, {0.032346990000007736`,
                     0.032489218653239504`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-122.031, 40.29341907203052}, {
                    0.03759674444015096, 0.037762056091332034`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{119.06754406123657`, 188.1242781473148}, {
               7.102056063304516, 76.1587901493764}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 7.6311*^10]& ,
            TagBoxNote->"7.6311*^10"],
           StyleBox["7.6311`*^10", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[7.6311*^10, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.084, 40.408311773241635`}, {
                    0.027114033866013187`, 0.027233253382888734`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-122.084, 40.408311773241635`}, {
                    0.03236378830615641, 0.032506090820981264`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{69.55271950923323, 
               127.76059698237384`}, {-106.57010361948704`, \
-48.36222614636864}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5.1363*^10]& ,
            TagBoxNote->"5.1363*^10"],
           StyleBox["5.1363`*^10", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5.1363*^10, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.96300000000002`, 40.36500609504926}, {
                    0.017593745062967514`, 0.017671104182497288`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.96300000000002`, 40.36500609504926}, {
                    0.022843499503110737`, 0.022943941620589818`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{204.848703466044, 
               243.3193147566843}, {-51.81125157695806, \
-13.340640286306538`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.8599*^10]& ,
            TagBoxNote->"1.8599*^10"],
           StyleBox["1.8599`*^10", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.8599*^10, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.953, 40.39131444181327}, {0.013870893973603415`,
                     0.013931883839084946`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.953, 40.39131444181327}, {
                    0.019120648413746638`, 0.019204721277177476`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{219.0736692384734, 
               249.82614251579173`}, {-75.22314323361408, \
-44.47066995630827}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.0218*^10]& ,
            TagBoxNote->"1.0218*^10"],
           StyleBox["1.0218`*^10", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.0218*^10, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.89400000000003`, 40.29140686434759}, {
                    0.011077914651096421`, 0.01112662387818375}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.89400000000003`, 40.29140686434759}, {
                    0.016327669091239644`, 0.01639946131627628}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{283.1276336889642, 308.08975990108587`}, {
               31.23519371152284, 56.19731992364618}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5.566*^9]& ,
            TagBoxNote->"5.566*^9"],
           StyleBox["5.566`*^9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5.566*^9, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.96793360000001`, 40.334820954675266`}, {
                    0.010907106049742765`, 0.010955064237016643`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.96793360000001`, 40.334820954675266`}, {
                    0.016156860489885988`, 0.016227901675109173`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{206.66588560980037`, 
               231.27389495625522`}, {-13.590345707205929`, 
               11.017663639250317`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5.327*^9]& ,
            TagBoxNote->"5.327*^9"],
           StyleBox["5.327`*^9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5.327*^9, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.010825743960154455`, 0.01087334440099852}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.016075498400297678`, 0.01614618183909105}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{360.8162678440188, 385.25559898621003`}, {
               74.81036244450402, 99.24969358671189}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5.215*^9]& ,
            TagBoxNote->"5.215*^9"],
           StyleBox["5.215`*^9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5.215*^9, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.96793360000001`, 40.334820954675266`}, {
                    0.010230652677648777`, 0.010275636521654974`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.96793360000001`, 40.334820954675266`}, {
                    0.015480407117792002`, 0.015548473959747504`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{207.36709019199736`, 
               230.5726903740582}, {-12.8891411250138, 10.31645905705819}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4.432*^9]& ,
            TagBoxNote->"4.432*^9"],
           StyleBox["4.432`*^9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4.432*^9, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.009840332678791697, 0.009883600298579154}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.015090087118934921`, 0.015156437736671684`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{361.83773500546005`, 384.23413182476884`}, {
               75.83182960594395, 98.22822642527197}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3.953*^9]& ,
            TagBoxNote->"3.953*^9"],
           StyleBox["3.953`*^9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3.953*^9, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.95106559999999`, 40.16934133008316}, {
                    0.009675586810473646, 0.009718130048071316}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.95106559999999`, 40.16934133008316}, {
                    0.014925341250616871`, 0.014990967486163846`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              ImageSizeCache->{{225.42766040422245`, 247.48250949081745`}, {
               159.22070495842118`, 181.2755540450053}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3.759043*^9]& ,
            TagBoxNote->"3.759043*^9"],
           StyleBox["3.759043`*^9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3.759043*^9, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.95744900000001`, 40.49081377079391}, {
                    0.009413440953906616, 0.009454831544786657}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.95744900000001`, 40.49081377079391}, {
                    0.01466319539404984, 0.014727668982879187`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{219.08243155141858`, 
               240.59380526066496`}, {-173.74257069706397`, \
-152.23119698781048`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3.460474*^9]& ,
            TagBoxNote->"3.460474*^9"],
           StyleBox["3.460474`*^9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3.460474*^9, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.008884844030987438, 0.00892391039855056}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.014134598471130662`, 0.01419674783664309}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{362.8281846738586, 383.24368215637026`}, {
               76.82227927434663, 97.23777675686928}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2.896*^9]& ,
            TagBoxNote->"2.896*^9"],
           StyleBox["2.896`*^9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2.896*^9, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.96793360000001`, 40.334820954675266`}, {
                    0.008872089140652406, 0.008911099425368718}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.96793360000001`, 40.334820954675266`}, {
                    0.01412184358079563, 0.014183936863461248`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{208.77536312941908`, 
               229.16441743663646`}, {-11.480868187578888`, 
               8.908186119623277}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2.883*^9]& ,
            TagBoxNote->"2.883*^9"],
           StyleBox["2.883`*^9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2.883*^9, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.07951650000001`, 40.378554858485415`}, {
                    0.008073158278932624, 0.008108655690875821}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-122.07951650000001`, 40.378554858485415`}, {
                    0.013322912719075848`, 0.013381493128968351`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{93.93784439067375, 
               112.67057173077927`}, {-55.98681790994513, \
-37.254090569853105`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2.127*^9]& ,
            TagBoxNote->"2.127*^9"],
           StyleBox["2.127`*^9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2.127*^9, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.1427757, 40.37908065145233}, {
                    0.007993601797437577, 0.008028749402150481}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-122.1427757, 40.37908065145233}, {
                    0.013243356237580802`, 0.013301586840243011`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{28.446478149709954`, 
               47.01427063497068}, {-56.449382044061124`, \
-37.88158955879866}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2.058*^9]& ,
            TagBoxNote->"2.058*^9"],
           StyleBox["2.058`*^9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2.058*^9, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.89132170000002`, 40.425452215098744`}, {
                    0.007753391239887719, 0.007787482646662625}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.89132170000002`, 40.425452215098744`}, {
                    0.013003145680030944`, 0.013060320084755155`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{289.35009846734476`, 
               307.4198913842844}, {-104.26866642240851`, \
-86.19887350546998}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.856567*^9]& ,
            TagBoxNote->"1.856567*^9"],
           StyleBox["1.856567`*^9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.856567*^9, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.96793360000001`, 40.334820954675266`}, {
                    0.007440262671067899, 0.007472977261798519}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.96793360000001`, 40.334820954675266`}, {
                    0.012690017111211123`, 0.012745814699891049`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{210.25957966643728`, 
               227.68020089961828`}, {-9.996651650561867, 7.423969582606256}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.60956*^9]& ,
            TagBoxNote->"1.60956*^9"],
           StyleBox["1.60956`*^9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.60956*^9, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.02632300000002`, 40.36146170052495}, {
                    0.00682168008518147, 0.006851674788585171}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-122.02632300000002`, 40.36146170052495}, {
                    0.012071434525324694`, 0.012124512226677701`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{150.37494672765322`, 
               166.5131353155563}, {-36.97095745196885, -20.83276886408248}}],
             
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.1734*^9]& ,
            TagBoxNote->"1.1734*^9"],
           StyleBox["1.1734`*^9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.1734*^9, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.96793360000001`, 40.334820954675266`}, {
                    0.006210477761968036, 0.006237785028822884}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.96793360000001`, 40.334820954675266`}, {
                    0.01146023220211126, 0.011510622466915414`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{211.53436200761797`, 
               226.40541855843756`}, {-8.721869309382871, 6.14918724142726}}],
             
             "DelayedMouseEffectStyle"],
            StatusArea[#, 8.1*^8]& ,
            TagBoxNote->"8.1*^8"],
           StyleBox["8.1`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[8.1*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.05039500000001`, 40.37245099047931}, {
                    0.006206377728943835, 0.006233666968100238}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    Circle[{-122.05039500000001`, 40.37245099047931}, {
                    0.01145613216908706, 0.011506504406192768`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{126.0599761036024, 
               140.92253255060896`}, {-47.7245259011152, -32.86196945409295}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 8.07789*^8]& ,
            TagBoxNote->"8.07789*^8"],
           StyleBox["8.07789`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[8.07789*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.0061559079467485844`, 0.006182975271926239}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.011405662386891809`, 0.011455812710018769`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{365.6569716468137, 380.4148951834151}, {
               79.65106624730264, 94.40898978391328}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 7.8082*^8]& ,
            TagBoxNote->"7.8082*^8"],
           StyleBox["7.8082`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[7.8082*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.97800000000001`, 40.39534316186588}, {
                    0.005951939579858845, 0.005978110062820008}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.97800000000001`, 40.39534316186588}, {
                    0.01120169402000207, 0.011250947500912538`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{201.36763369791296`, 
               215.70269422758284`}, {-71.19056647614393, \
-56.85550594647013}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 6.76492*^8]& ,
            TagBoxNote->"6.76492*^8"],
           StyleBox["6.76492`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6.76492*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.005943458612478025, 0.0059695918049058605`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.01119321305262125, 0.01124242924299839}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{365.8771944335138, 380.194672396715}, {
               79.87128903400347, 94.18876699721244}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 6.72316*^8]& ,
            TagBoxNote->"6.72316*^8"],
           StyleBox["6.72316`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6.72316*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.918, 40.3744460453572}, {0.005905585102823352, 
                    0.0059315517666718165`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.918, 40.3744460453572}, {
                    0.011155339542966576`, 0.011204389204764346`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{263.61106486477956`, 
               277.8500242497334}, {-49.48078066070322, -35.24182127574293}}],
             
             "DelayedMouseEffectStyle"],
            StatusArea[#, 6.53825*^8]& ,
            TagBoxNote->"6.53825*^8"],
           StyleBox["6.53825`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6.53825*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.005890448568550255, 0.005916348677551753}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.01114020300869348, 0.011189186115644283`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{365.9321440978041, 380.1397227324247}, {
               79.92623869829715, 94.13381733291878}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 6.46507*^8]& ,
            TagBoxNote->"6.46507*^8"],
           StyleBox["6.46507`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6.46507*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.026323, 40.36146170052495}, {
                    0.005774899161593794, 0.00580029120364145}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-122.026323, 40.36146170052495}, {
                    0.011024653601737018`, 0.01107312864173398}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{151.46002902669446`, 
               165.42805301654417`}, {-35.88587515294652, \
-21.917851163104807`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5.92*^8]& ,
            TagBoxNote->"5.92*^8"],
           StyleBox["5.92`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5.92*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.97900000000003`, 40.50153682847244}, {
                    0.005553812174667883, 0.005578232104490155}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.97900000000003`, 40.50153682847244}, {
                    0.010803566614811107`, 0.010851069542582685`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{200.74373877950848`, 
               214.25340979281322`}, {-180.85713023996578`, \
-167.34745922667128`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4.94398*^8]& ,
            TagBoxNote->"4.94398*^8"],
           StyleBox["4.94398`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4.94398*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.918, 40.3867823374489}, {0.005553688829849079, 
                    0.005578108217349609}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.918, 40.3867823374489}, {
                    0.010803443269992304`, 0.010850945655442139`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{263.97583690856993`, 
               277.485252205943}, {-61.90368164639308, -48.394266348986115`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4.94346*^8]& ,
            TagBoxNote->"4.94346*^8"],
           StyleBox["4.94346`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4.94346*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.026323, 40.36146170052495}, {
                    0.005541927039246275, 0.00556629471051906}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-122.026323, 40.36146170052495}, {
                    0.0107916814793895, 0.01083913214861159}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{151.70152552364968`, 
               165.18655651958895`}, {-35.644378655991034`, \
-22.159347660060284`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4.894*^8]& ,
            TagBoxNote->"4.894*^8"],
           StyleBox["4.894`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4.894*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.026323, 40.36146170052494}, {
                    0.005427300477307995, 0.005451164139351761}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-122.026323, 40.36146170052494}, {
                    0.01067705491745122, 0.01072400157744429}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{151.82034623441618`, 
               165.06773580882242`}, {-35.525557945218466`, \
-22.278168370818292`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4.425*^8]& ,
            TagBoxNote->"4.425*^8"],
           StyleBox["4.425`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4.425*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.94700000000003`, 40.384768138742125`}, {
                    0.005390882997261315, 0.0054145865328507625`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.94700000000003`, 40.384768138742125`}, {
                    0.01064063743740454, 0.010687423970943292`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{234.083499133213, 
               247.2553887398927}, {-59.64702121502627, -46.47513160833191}}],
             
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4.28094*^8]& ,
            TagBoxNote->"4.28094*^8"],
           StyleBox["4.28094`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4.28094*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.005240690507420709, 0.0052637336515459765`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.010490444947563933`, 0.010536571089638506`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{366.6056765962424, 379.46619023398637`}, {
               80.59977119674562, 93.4602848344703}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3.712*^8]& ,
            TagBoxNote->"3.712*^8"],
           StyleBox["3.712`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3.712*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.004968318668574057, 0.004990164202666847}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.010218073108717281`, 0.010263001640759377`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{366.88801443258063`, 379.1838523976482}, {
               80.88210903308146, 93.17794699813444}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2.78368*^8]& ,
            TagBoxNote->"2.78368*^8"],
           StyleBox["2.78368`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2.78368*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.02632300000002`, 40.36146170052494}, {
                    0.004723474297406938, 0.0047442432588482575`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-122.02632300000002`, 40.36146170052494}, {
                    0.009973228737550162, 0.010017080696940787`}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              ImageSizeCache->{{152.54992518659031`, 
               164.33815685661918`}, {-34.79597899303739, \
-23.00774732299938}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2.063*^8]& ,
            TagBoxNote->"2.063*^8"],
           StyleBox["2.063`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2.063*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.988, 40.35229512067535}, {0.004719043137157541, 
                    0.004739792614920191}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.988, 40.35229512067535}, {
                    0.009968797577300766, 0.01001263005301272}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{192.27974465696394`, 
               204.05878973705327`}, {-25.289403656463747`, \
-13.510358576391095`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2.05095*^8]& ,
            TagBoxNote->"2.05095*^8"],
           StyleBox["2.05095`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2.05095*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.93, 40.36639056199277}, {0.004668286074689831, 
                    0.004688812375313489}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.93, 40.36639056199277}, {
                    0.009918040514833056, 0.009961649813406019}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{252.4545601452803, 
               264.128376731435}, {-39.84797836590762, -28.174161779772533`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.91544*^8]& ,
            TagBoxNote->"1.91544*^8"],
           StyleBox["1.91544`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.91544*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.96793360000001`, 40.33482095467527}, {
                    0.004510055209522079, 0.004529885774225306}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    Circle[{-121.96793360000001`, 40.33482095467527}, {
                    0.009759809649665304, 0.009802723212317836}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{213.29700247129884`, 
               224.6427780947567}, {-6.95922884570395, 4.386546777733787}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.52272*^8]& ,
            TagBoxNote->"1.52272*^8"],
           StyleBox["1.52272`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.52272*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.89000000000001`, 40.36840436835651}, {
                    0.004502889357837603, 0.004522688414539289}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.89000000000001`, 40.36840436835651}, {
                    0.009752643797980827, 0.009795525852631819}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{294.08959573750957`, 
               305.4205152652074}, {-41.76402072395719, \
-30.433101196252416`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.506*^8]& ,
            TagBoxNote->"1.506*^8"],
           StyleBox["1.506`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.506*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.9411173, 40.498226262855816`}, {
                    0.004494797359001268, 0.004514560835445991}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.9411173, 40.498226262855816`}, {
                    0.009744551799144493, 0.009787398273538521}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{241.1103183455805, 
               252.4244617083652}, {-176.32766827289447`, \
-165.01352491011056`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.48723*^8]& ,
            TagBoxNote->"1.48723*^8"],
           StyleBox["1.48723`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.48723*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.004458906945970398, 0.004478512613438568}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.009708661386113622, 0.009751350051531098}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{367.4160653653579, 378.65580146487093`}, {
               81.41015996586064, 92.64989606535526}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.4053982461974025`*^8]& ,
            TagBoxNote->"1.4053982461974025*^8"],
           StyleBox["1.4053982461974025`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.4053982461974025`*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.0044235880374259295`, 0.004443038408822986}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.009673342477569154, 0.009715875846915516}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              ImageSizeCache->{{367.452676581343, 378.61919024888584`}, {
               81.446771181835, 92.61328484938092}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.32713*^8]& ,
            TagBoxNote->"1.32713*^8"],
           StyleBox["1.32713`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.32713*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.004335187338853075, 0.004354249015271705}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.0095849417789963, 0.009627086453364235}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{367.5443118328856, 378.5275549973432}, {
               81.53840643338648, 92.52164959782944}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.14106*^8]& ,
            TagBoxNote->"1.14106*^8"],
           StyleBox["1.14106`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.14106*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.004331701143598821, 0.004350747491344009}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.009581455583742045, 0.00962358492943654}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{367.5479255868967, 378.5239412433321}, {
               81.54202018738451, 92.51803584383141}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.13401*^8]& ,
            TagBoxNote->"1.13401*^8"],
           StyleBox["1.13401`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.13401*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.89132170000002`, 40.42545221509875}, {
                    0.004306912086676107, 0.004325849437741169}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.89132170000002`, 40.42545221509875}, {
                    0.009556666526819331, 0.0095986868758337}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{292.92268317809504`, 
               303.8473066735342}, {-100.696081711661, -89.77145821623209}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.08451*^8]& ,
            TagBoxNote->"1.08451*^8"],
           StyleBox["1.08451`*^8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.08451*^8, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.9411173, 40.49822626285582}, {
                    0.004246000220987867, 0.004264669744586058}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.9411173, 40.49822626285582}, {
                    0.009495754661131091, 0.009537507182678588}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{241.3682188904066, 
               252.16656116353906`}, {-176.0697677280783, \
-165.27142545494138`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 9.6757*^7]& ,
            TagBoxNote->"9.6757*^7"],
           StyleBox["9.6757`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[9.6757*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.905, 40.36928542215645}, {0.004215505060145119, 
                    0.004234040497514968}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.905, 40.36928542215645}, {
                    0.009465259500288344, 0.009506877935607498}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{278.8386501850911, 
               289.5737705203934}, {-42.37941240128028, \
-31.644292065988267`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 9.1153*^7]& ,
            TagBoxNote->"9.1153*^7"],
           StyleBox["9.1153`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[9.1153*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.92700000000004`, 40.37293558983537}, {
                    0.0041833555594053, 0.004201749636479235}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.92700000000004`, 40.37293558983537}, {
                    0.009433109999548524, 0.009474587074571765}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{256.06700314098333`, 
               266.7354717951377}, {-46.129812694443544`, \
-35.46134404029214}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 8.5426*^7]& ,
            TagBoxNote->"8.5426*^7"],
           StyleBox["8.5426`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[8.5426*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.004120098309385867, 0.0041382142464101435`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.009369852749529091, 0.009411051684502673}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{367.7672709003759, 378.30459592985295`}, {
               81.7613655008686, 92.29869053034732}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 7.47*^7]& ,
            TagBoxNote->"7.47*^7"],
           StyleBox["7.47`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[7.47*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.004037075196393403, 0.004054826083518037}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.009286829636536627, 0.009327663521610567}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{367.853331802221, 378.21853502800786`}, {
               81.8474264027107, 92.21262962850524}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 6.1714*^7]& ,
            TagBoxNote->"6.1714*^7"],
           StyleBox["6.1714`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6.1714*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.004032558088567839, 0.004050289114104544}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.009282312528711064, 0.009323126552197074}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{367.85801418956095`, 378.2138526406679}, {
               81.85210879006415, 92.20794724115177}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 6.1043*^7]& ,
            TagBoxNote->"6.1043*^7"],
           StyleBox["6.1043`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6.1043*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.037, 40.38501991122828}, {0.00396928848617506, 
                    0.0039867413173553246`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-122.037, 40.38501991122828}, {
                    0.009219042926318284, 0.009259578755447855}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{142.2640384359542, 
               152.4887076536984}, {-58.434395780539035`, \
-48.209726562796725`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5.203*^7]& ,
            TagBoxNote->"5.203*^7"],
           StyleBox["5.203`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5.203*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.922, 40.39647627039009}, {0.003964859336093696, 
                    0.003982292692441547}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.922, 40.39647627039009}, {
                    0.00921461377623692, 0.009255130130534077}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{261.4764424533448, 
               271.69192924858834`}, {-70.30534820755439, \
-60.08986141232286}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5.1426*^7]& ,
            TagBoxNote->"5.1426*^7"],
           StyleBox["5.1426`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5.1426*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.923, 40.370166484183834`}, {
                    0.003925340952150691, 0.003942600547475195}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.923, 40.370166484183834`}, {
                    0.009175095392293916, 0.009215437985567725}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{260.4808171256026, 
               270.6143752231856}, {-42.991931084447955`, \
-32.85837298684874}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4.6193*^7]& ,
            TagBoxNote->"4.6193*^7"],
           StyleBox["4.6193`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4.6193*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.003913202579525432, 0.003930408802808927}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.009162957019668657, 0.009203246240901457}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{367.9817368780767, 378.09012995215215`}, {
               81.97583147857762, 92.0842245526383}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4.4642*^7]& ,
            TagBoxNote->"4.4642*^7"],
           StyleBox["4.4642`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4.4642*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.9411173, 40.49822626285582}, {
                    0.0039122230980837, 0.003929425014625565}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.9411173, 40.49822626285582}, {
                    0.009161977538226925, 0.009202262452718095}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{241.71420881028598`, 
               251.82057124365966`}, {-175.7237778081956, \
-165.61741537482408`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4.4518*^7]& ,
            TagBoxNote->"4.4518*^7"],
           StyleBox["4.4518`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4.4518*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.96793360000001`, 40.334820954675266`}, {
                    0.003885471602160351, 0.00390255589324795}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.96793360000001`, 40.334820954675266`}, {
                    0.009135226042303575, 0.00917539333134048}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{213.94443939084803`, 
               223.99534117520756`}, {-6.311791926151511, 3.7391098581959}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4.1198*^7]& ,
            TagBoxNote->"4.1198*^7"],
           StyleBox["4.1198`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4.1198*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.952, 40.392573398342684`}, {
                    0.003879114769944181, 0.0038961711102629693`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.952, 40.392573398342684`}, {
                    0.009128869210087405, 0.0091690085483555}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{230.46763408819078`, 
               240.5053570192483}, {-66.17078940214809, \
-56.133066471074244`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4.0428*^7]& ,
            TagBoxNote->"4.0428*^7"],
           StyleBox["4.0428`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4.0428*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.026323, 40.36146170052495}, {
                    0.003862689097061889, 0.0038796732142216683`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-122.026323, 40.36146170052495}, {
                    0.009112443537205113, 0.009152510652314198}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{153.44220623903115`, 
               163.4458758042075}, {-33.90369794060702, -23.9000283754443}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3.8472*^7]& ,
            TagBoxNote->"3.8472*^7"],
           StyleBox["3.8472`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3.8472*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.07951650000001`, 40.378554858485415`}, {
                    0.003832557883129084, 0.0038494095143306595`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-122.07951650000001`, 40.378554858485415`}, {
                    0.009082312323272309, 0.00912224695242319}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{98.33360698344376, 
               108.27480913800927`}, {-51.59105531717546, \
-41.649853162622776`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3.501*^7]& ,
            TagBoxNote->"3.501*^7"],
           StyleBox["3.501`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3.501*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.04495620000003`, 40.27794893770152}, {
                    0.003822136708066637, 0.0038389425177172143`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-122.04495620000003`, 40.27794893770152}, {
                    0.009071891148209861, 0.009111779955809744}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{134.1692596652388, 144.0888568548293}, {
               52.706806052202495`, 62.62640324180838}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3.3850616*^7]& ,
            TagBoxNote->"3.3850616*^7"],
           StyleBox["3.3850616`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3.3850616*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.0038105843141522655`, 0.0038273393283034807`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.00906033875429549, 0.00910017676639601}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{368.08810991259054`, 377.9837569176383}, {
               82.08220451307898, 91.97785151813693}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3.2588196*^7]& ,
            TagBoxNote->"3.2588196*^7"],
           StyleBox["3.2588196`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3.2588196*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.95237700000001`, 40.40268342865612}, {
                    0.003790351504477485, 0.0038070175556157437`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.95237700000001`, 40.40268342865612}, {
                    0.00904010594462071, 0.009079854993708274}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{230.16885086474778`, 
               240.02255162652156`}, {-76.55873137024959, \
-66.70503060849236}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3.0435*^7]& ,
            TagBoxNote->"3.0435*^7"],
           StyleBox["3.0435`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3.0435*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.0037845386732300312`, 0.003801179165549229}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.009034293113373256, 0.009074016603641759}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{368.11510855509033`, 377.95675827513855`}, {
               82.1092031555827, 91.9508528756332}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2.983*^7]& ,
            TagBoxNote->"2.983*^7"],
           StyleBox["2.983`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2.983*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.91400000000002`, 40.3876635629087}, {
                    0.0037181491658770938`, 0.003734497745703891}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.91400000000002`, 40.3876635629087}, {
                    0.008967903606020318, 0.00900733518379642}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{270.0248970814772, 
               279.7289094456155}, {-60.91444939411525, \
-51.210437029990814`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2.3351*^7]& ,
            TagBoxNote->"2.3351*^7"],
           StyleBox["2.3351`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2.3351*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.0036891549885353925`, 0.0037053760819176773`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.008938909428678617, 0.008978213520010207}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{368.21398229795847`, 377.85788453227036`}, {
               82.20807689845735, 91.85197913275856}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2.077*^7]& ,
            TagBoxNote->"2.077*^7"],
           StyleBox["2.077`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2.077*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.96793360000001`, 40.334820954675266`}, {
                    0.003633131583569593, 0.003649106343885933}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.96793360000001`, 40.334820954675266`}, {
                    0.008882886023712818, 0.008921943781978463}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{214.20601244910594`, 
               223.7337681169496}, {-6.050218867901196, 3.477536799945585}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.6211*^7]& ,
            TagBoxNote->"1.6211*^7"],
           StyleBox["1.6211`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.6211*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.957765, 40.21303201123925}, {
                    0.0036200809032891357`, 0.003635998280202557}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.957765, 40.21303201123925}, {
                    0.00886983534343236, 0.008908835718295087}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{224.760206434786, 234.26090570172764`}, {
               120.2084708192928, 129.70917008625798`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.523*^7]& ,
            TagBoxNote->"1.523*^7"],
           StyleBox["1.523`*^7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.523*^7, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.01499999999999`, 40.39131444181327}, {
                    0.003523891556255876, 0.003539385991764732}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    Circle[{-122.01499999999999`, 40.39131444181327}, {
                    0.0087736459963991, 0.008812223429857262}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{165.5307051801539, 
               174.8319866788332}, {-64.4975473443094, -55.19626584561295}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 8.944*^6]& ,
            TagBoxNote->"8.944*^6"],
           StyleBox["8.944`*^6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[8.944*^6, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.0034895369774972096`, 0.0035048803570489895`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.008739291417640434, 0.00877771779514152}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{368.4209042674591, 377.65096256276973`}, {
               82.4149988679461, 91.64505716326984}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 7.102*^6]& ,
            TagBoxNote->"7.102*^6"],
           StyleBox["7.102`*^6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[7.102*^6, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.019, 40.39068496985061}, {0.00348874424454948, 
                    0.003504084138462815}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-122.019, 40.39068496985061}, {
                    0.008738498684692704, 0.008776921576555345}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{161.4207798143091, 
               170.64919463203998`}, {-63.80860986563205, \
-54.58019504792461}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 7.062*^6]& ,
            TagBoxNote->"7.062*^6"],
           StyleBox["7.062`*^6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[7.062*^6, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.9411173, 40.498226262855816`}, {
                    0.003484323339563389, 0.0034996437949175174`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.9411173, 40.498226262855816`}, {
                    0.008734077779706613, 0.008772481233010047}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{242.1577652825771, 
               251.37701477136855`}, {-175.28022133590193`, \
-166.06097184710313`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 6.841*^6]& ,
            TagBoxNote->"6.841*^6"],
           StyleBox["6.841`*^6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6.841*^6, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.96793360000001`, 40.334820954675266`}, {
                    0.003474426604554992, 0.0034897035442895685`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.96793360000001`, 40.334820954675266`}, {
                    0.008724181044698217, 0.008762540982382098}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{214.37052439197356`, 
               223.56925617408203`}, {-5.885706925035094, 
               3.3130248570794842`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 6.359*^6]& ,
            TagBoxNote->"6.359*^6"],
           StyleBox["6.359`*^6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6.359*^6, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.89400000000003`, 40.29543132256944}, {
                    0.003459846915816911, 0.0034750597491424173`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.89400000000003`, 40.29543132256944}, {
                    0.008709601355960135, 0.008747897187234947}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{291.02444405880436`, 300.1929495312457}, {
               34.960292234774755`, 44.128797707229886`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5.681*^6]& ,
            TagBoxNote->"5.681*^6"],
           StyleBox["5.681`*^6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5.681*^6, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.003449545746789795, 0.0034647132862062335`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.00869930018693302, 0.008737550724298764}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{368.4623587643639, 377.6095080658649}, {
               82.45645336485778, 91.60360266635814}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5.225*^6]& ,
            TagBoxNote->"5.225*^6"],
           StyleBox["5.225`*^6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5.225*^6, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.00200000000001`, 40.39194391797726}, {
                    0.003435378081263707, 0.0034504833259347834`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-122.00200000000001`, 40.39194391797726}, {
                    0.008685132521406931, 0.008723320764027313}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{179.0981231300253, 
               188.21590031987526`}, {-65.05830368313761, \
-55.94052649325751}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4.629*^6]& ,
            TagBoxNote->"4.629*^6"],
           StyleBox["4.629`*^6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4.629*^6, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.95500000000001`, 40.406674859856075`}, {
                    0.0033330628694443476`, 0.0033477182374710424`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.95500000000001`, 40.406674859856075`}, {
                    0.008582817309587572, 0.008620555675563572}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{227.9238968213766, 
               236.82955622656948`}, {-80.22218706860163, -71.3165276634127}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.396*^6]& ,
            TagBoxNote->"1.396*^6"],
           StyleBox["1.396`*^6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.396*^6, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.89132170000002`, 40.42545221509875}, {
                    0.0033139154808878857`, 0.0033284866584750716`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.89132170000002`, 40.42545221509875}, {
                    0.00856366992103111, 0.008601324096567602}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{293.9520132085292, 
               302.8179766431001}, {-99.66675168122944, -90.80078824666364}}],
             
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.*^6]& ,
            TagBoxNote->"1.*^6"],
           StyleBox["1.`*^6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.*^6, {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-122.1427757, 40.37908065145233}, {
                    0.00329128910729537, 0.0033057607974669168`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-122.1427757, 40.37908065145233}, {
                    0.008541043547438594, 0.008578598235559447}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{33.320846940339194`, 
               42.13990184434142}, {-51.575013253435, -42.75595834942479}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 617000.]& ,
            TagBoxNote->"617000."],
           StyleBox["617000.`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[617000., {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.0032912244903684496`, 0.0033056958964152727`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.008540978930511674, 0.008578533334507803}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{368.62647294435266`, 377.4453938858761}, {
               82.62056754484865, 91.43948848636727}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 616038.]& ,
            TagBoxNote->"616038."],
           StyleBox["616038.`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[616038., {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.89132170000002`, 40.425452215098744`}, {
                    0.0032518946711945773`, 0.003266193145329055}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.89132170000002`, 40.425452215098744`}, {
                    0.008501649111337802, 0.008539030583421585}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{294.0163033395901, 
               302.75368651203917`}, {-99.60246155017329, \
-90.86507837770522}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 169760.]& ,
            TagBoxNote->"169760."],
           StyleBox["169760.`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[169760., {}], "Tooltip"]& ]}, 
        {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
         0.3]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                DynamicBox[
                 Typeset`ToBoxes[{
                   
                   Disk[{-121.81930579999998`, 40.24962198825165}, {
                    0.0032346990000036158`, 0.0032489218653211083`}], 
                   If[
                    CurrentValue["MouseOver"], {
                    Thickness[0.010224791858950713`], 
                    
                    Circle[{-121.81930579999998`, 40.24962198825165}, {
                    0.00848445344014684, 0.008521759303413638}]}, {}]}, 
                  StandardForm, Graphics]], {{{1, 0.}, {
                  0, 0.9956222815096648}}, Center}]},
              
              ImageSizeCache->{{368.68506668412823`, 377.38680014610065`}, {
               82.67916128462794, 91.38089474658797}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 62000.]& ,
            TagBoxNote->"62000."],
           StyleBox["62000.`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[62000., {}], 
           "Tooltip"]& ]}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}, {}}}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, "Mercator", "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, "Mercator", "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{
        Annotation[
         Style[
          Point[
           GeoPosition[CompressedData["
1:eJxTTMoPSmViYGAIBGIQvXzBxH3/lzo5iEjPaMwviTuAzp/SuGKB+34nh1M+
fC7WNXEHRNa5P6za4uTweOnsIwoNcQfyTBq2O6xycviw/Ji3eWXcAdXI9sWr
1zk5HNU5Ov9TLSZf+fbPuiygfs2Y/kNfgfrPaQrFJm50cqjlWOW2vjHuwAIp
/bsq25wcfMw7HRNa4w7M6zB58Gg7UP9b7SxuoPnLuNxUS4H2uXTnPP/diGn+
lPbWqMtA863v+/dOr8P0D7p5hixLeXU2OzmUd22wUe6MO3BkfcRh10VODhYC
k1h9gOZ1G0mnTNrq5DBbduW+z0D/c/5ckL55k5PDjDyh5gNVmOaj82H+XeS6
7fPfGszwZGuc6twNlN9QlDHxbQ2mfkOONTJRW6Dhi82/aOah69809/3yY0D/
vauxN41rwpRHD/9JMf+cfwH92/o6cIdcLWH/3XFjruAGuu+iEtCjVZjueTBH
cOleoPnA0Dq1EGieyAWXGx+A6uN2efIwVccd2C2xM1YO6L7m/fFnxFox3XPi
cwnnoxVODhoGP/ofEOF+9Pg9rvvseds+J4cFS7VvuAHtV9n5p/3LZuLjb84R
hQ1FG5wcgLGQYl2PGf7o9svOv6V1aa6TQ6GYg9M9oP/jZ/iI9gDTi/jNc9+D
qzHNvzgRGOBA+YDe6XlCWMKDkPtI5aO7X31B54aHQPe/AUZ3azXh/Isevq8f
mUkdALr3RzCwRAD6V5IljE8X6J8goHGvgfIJZf5yYpug+b0i7gBIdi4wfeiC
EiYwf7KlrC+vB8oXWnxebdlM2L2E4v/+A+7JK5HKI/T8TSh8APbuelI=
            "]]], 
          Opacity[0]], "GeoBubbleChartPlaceholder"]}, GeoBackground -> None, {
       GeoBackground -> GeoStyling["GeoPlotMap"], GeoRangePadding -> 
        Quantity[2, "Miles"]}]], 
    "BasicGeoRange" -> {{37.2329763, 
     37.497}, {-122.14277570000002`, -121.81930579999998`}}, "OriginalInput" -> 
    HoldForm[
      GeoGraphics[{
        Annotation[
         Style[
          Point[
           GeoPosition[CompressedData["
1:eJxTTMoPSmViYGAIBGIQvXzBxH3/lzo5iEjPaMwviTuAzp/SuGKB+34nh1M+
fC7WNXEHRNa5P6za4uTweOnsIwoNcQfyTBq2O6xycviw/Ji3eWXcAdXI9sWr
1zk5HNU5Ov9TLSZf+fbPuiygfs2Y/kNfgfrPaQrFJm50cqjlWOW2vjHuwAIp
/bsq25wcfMw7HRNa4w7M6zB58Gg7UP9b7SxuoPnLuNxUS4H2uXTnPP/diGn+
lPbWqMtA863v+/dOr8P0D7p5hixLeXU2OzmUd22wUe6MO3BkfcRh10VODhYC
k1h9gOZ1G0mnTNrq5DBbduW+z0D/c/5ckL55k5PDjDyh5gNVmOaj82H+XeS6
7fPfGszwZGuc6twNlN9QlDHxbQ2mfkOONTJRW6Dhi82/aOah69809/3yY0D/
vauxN41rwpRHD/9JMf+cfwH92/o6cIdcLWH/3XFjruAGuu+iEtCjVZjueTBH
cOleoPnA0Dq1EGieyAWXGx+A6uN2efIwVccd2C2xM1YO6L7m/fFnxFox3XPi
cwnnoxVODhoGP/ofEOF+9Pg9rvvseds+J4cFS7VvuAHtV9n5p/3LZuLjb84R
hQ1FG5wcgLGQYl2PGf7o9svOv6V1aa6TQ6GYg9M9oP/jZ/iI9gDTi/jNc9+D
qzHNvzgRGOBA+YDe6XlCWMKDkPtI5aO7X31B54aHQPe/AUZ3azXh/Isevq8f
mUkdALr3RzCwRAD6V5IljE8X6J8goHGvgfIJZf5yYpug+b0i7gBIdi4wfeiC
EiYwf7KlrC+vB8oXWnxebdlM2L2E4v/+A+7JK5HKI/T8TSh8APbuelI=
            "]]], 
          Opacity[0]], "GeoBubbleChartPlaceholder"]}, GeoBackground -> None, {
       GeoBackground -> GeoStyling["GeoPlotMap"], GeoRangePadding -> 
        Quantity[2, "Miles"]}]], 
    "BasicGeoRange" -> {{37.20397434022708, 
     37.52600195977293}, {-122.17917426275338`, -121.78290723724663`}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> GeoStyling["StreetMapNoLabels"], GeoCenter -> 
      GeoPosition[{37.36498815, -121.98104075}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-122.17917426275338`, -121.78290723724666`}, {
       40.13292202999613, 40.5380968156333}}, GeoGridRangePadding -> None, 
      GeoModel -> "ITRF00", GeoProjection -> "Mercator", 
      GeoRange -> {{37.20397434022708, 
       37.52600195977293}, {-122.17917426275338`, -121.78290723724663`}}, 
      GeoRangePadding -> Full, GeoResolution -> Automatic, 
      GeoServer -> {Automatic}, GeoZoomLevel -> 11, 
      MetaInformation -> {
       "Software" -> "Wolfram Language", "GeoModel" -> "ITRF00", 
        "LonLatBox" -> {{-122.17917426275338`, -121.78290723724663`}, {
         37.20397434022708, 37.52600195977293}}, 
        "PlotRange" -> {{-122.17964172363281`, -121.78276062011719`}, {
         40.13236999511719, 40.538177490234375`}}, "Projection" -> "Mercator",
         "Software" -> "Created with the Wolfram Language: www.wolfram.com", 
        "TileSources" -> 
        "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright"}}},
  PlotRange->{{-122.17917426275338`, -121.78290723724666`}, {
   40.13292202999613, 40.5380968156333}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.839590860998402*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"ebefc78e-d4c5-46bd-a759-686c4dba43f2"]
}, Open  ]],

Cell["\<\
Kot vidimo ima najve\[CHacek]ji \[CHacek]isti dobi\[CHacek]ek Apple. AMD je \
na enaki lokaciji kot Nvidija, le da ima tako nizek \[CHacek]isti dobi\
\[CHacek]ek, da ga ni na na\[SHacek]i mapi.\
\>", "Text",
 CellChangeTimes->{{3.839492442517148*^9, 
  3.839492482130834*^9}},ExpressionUUID->"9934fae6-4f2c-4af1-80e8-\
d36941176dc6"],

Cell[CellGroupData[{

Cell["Proizvodnja v Taiwanu", "Subsection",
 CellChangeTimes->{{3.839492608132927*^9, 3.8394926438320932`*^9}, {
  3.8394927136677017`*^9, 
  3.839492714852853*^9}},ExpressionUUID->"5bd40c32-9510-4452-b44e-\
ca37bf412fe6"],

Cell["\<\
Nvidia ima tovarne za proizvodnjo \[CHacek]ipov v Taiwanu. Poglejmo si kateri \
podatki so na voljo.\
\>", "Text",
 CellChangeTimes->{{3.8394926810638037`*^9, 3.839492686379222*^9}, {
  3.839492719024288*^9, 
  3.839492741969*^9}},ExpressionUUID->"0fb69e07-a1ce-4e9f-a5ac-4eded0017df9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountryData", "[", 
  RowBox[{
   TemplateBox[{"\"Taiwan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Taiwan\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Taiwan\\\"]\"", "\"country\""},
    "Entity"], ",", " ", "\"\<Dataset\>\""}], "]"}]], "Input",
 CellChangeTimes->{
  3.839492752678154*^9, {3.839590868047387*^9, 3.839590868055727*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"d8ca3e20-9fa2-4a84-9c6b-09ca2bf17483"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      EntityProperty["Country", "AdjustedNetNationalIncome"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AdjustmentSeasonalBorrowings"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AdministrativeDivisions"] -> {
         Entity["AdministrativeDivision", {"Fukien", "Taiwan"}], 
         Entity["AdministrativeDivision", {"Kaohsiung", "Taiwan"}], 
         Entity["AdministrativeDivision", {"NewTaipei", "Taiwan"}], 
         Entity["AdministrativeDivision", {"Taichung", "Taiwan"}], 
         Entity["AdministrativeDivision", {"Tainan", "Taiwan"}], 
         Entity["AdministrativeDivision", {"Taipei", "Taiwan"}], 
         Entity["AdministrativeDivision", {"Taiwan", "Taiwan"}]}, 
       EntityProperty["Country", "AdultPopulation"] -> 
       Quantity[1.726306*^7, "People"], 
       EntityProperty["Country", "AdultsObese"] -> Missing["NotApplicable"], 
       EntityProperty["Country", "AggravatedAssault"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AggravatedAssaultRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AggregateHomeValue"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AggregateHomeValue15To24"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AggregateHomeValue25To34"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AggregateHomeValue35To64"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AggregateHomeValue65"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AggregateHouseholdIncome"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AggregateWeeklyHoursIndex"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AgriculturalIrrigatedLandFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AgriculturalLandFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AgriculturalProductionIndex"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AgriculturalProductionPerCapitaIndex"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AgriculturalProducts"] -> {
        "Beef", "Corn", "Fish", "Fruit", "Milk", "Pigs", "Poultry", "Rice", 
         "Tea", "Vegetables"}, 
       EntityProperty["Country", "AgricultureConsumption"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AgricultureConsumptionPerCapita"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AgricultureHarvestArea"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AgricultureHarvestAreaPerCapita"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AgricultureProduction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AgricultureProductionPerCapita"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "AgricultureYield"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AgricultureYieldPerCapita"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "AirArrivals"] -> 
       Quantity[3.624*^6, "People"/"Years"], 
       EntityProperty["Country", "AircraftCarriers"] -> 0, 
       EntityProperty["Country", "AirForce"] -> Quantity[50000, "People"], 
       EntityProperty["Country", "Airports"] -> 37, 
       EntityProperty["Country", "AirTransport"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "Alcohol"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "AllPrimaryFuels"] -> 
       Quantity[5.260191964407534*^17, "Joules"/"Years"], 
       EntityProperty["Country", "AlternateNames"] -> {
        "Formosa", "Republic of China"}, 
       EntityProperty["Country", "AMRadioStations"] -> 21, 
       EntityProperty["Country", "AnnualAnnulments"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "AnnualBirths"] -> 
       Quantity[210788.`3., "People"/"Years"], 
       EntityProperty["Country", "AnnualDeaths"] -> 
       Quantity[173663.`3., "People"/"Years"], 
       EntityProperty["Country", "AnnualDivorces"] -> Missing["NotAvailable"],
        EntityProperty["Country", "AnnualHIVAIDSDeaths"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "AnnualMarriages"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AntenatalCareCoverage"] -> 
       Missing["NotApplicable"], EntityProperty["Country", "ArableLandArea"] -> 
       Quantity[5980., "Kilometers"^2], 
       EntityProperty["Country", "ArableLandFraction"] -> 
       Quantity[18.536887786732795`, "Percent"], 
       EntityProperty["Country", "Area"] -> Quantity[35980., "Kilometers"^2], 
       EntityProperty["Country", "ArmoredInfantryFightingVehicles"] -> 225, 
       EntityProperty["Country", "ArmoredPersonnelCarriers"] -> 950, 
       EntityProperty["Country", "Army"] -> Quantity[190000, "People"], 
       EntityProperty["Country", "Artillery"] -> 1815, 
       EntityProperty["Country", "AttackHelicopters"] -> 154, 
       EntityProperty["Country", "AutomobileProduction"] -> 
       Quantity[183000, "Years"^(-1)], 
       EntityProperty["Country", "AverageHourlyEarnings"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AverageLengthOfStay"] -> 
       Quantity[6.52, "Days"], 
       EntityProperty[
        "Country", 
         "AverageNumberOfTimesFirmsSpentInMeetingsWithTaxOfficials"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AverageTimeToClearExportsThroughCustoms"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AverageWeeklyHours"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "AverageWeeklyOvertimeHours"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "AviationGasoline"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "BankersAcceptance"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "BankPrimeLoanRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "BankPrimeLoanRateChanges"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "BenefitsCostIndex"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "BirthRateFraction"] -> 
       Quantity[0.008922000000000001, 
         Divide["People", "People" "Years"]], 
       EntityProperty["Country", "BirthsAttendedBySkilledHealthPersonnel"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "BirthsByCaesareanSection"] -> 
       Missing["NotApplicable"], EntityProperty["Country", "BookTitles"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "BorderingCountries"] -> {}, 
       EntityProperty["Country", "BordersLengths"] -> {}, 
       EntityProperty["Country", "BoundaryLength"] -> 
       Quantity[1566.3, "Kilometers"], 
       EntityProperty["Country", "BurdenOfCustomsProcedure"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Burglary"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "BurglaryRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "BusinessActivityIndex"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "BusinessArrivals"] -> 
       Quantity[1.031*^6, "People"/"Years"], 
       EntityProperty["Country", "BusinessEntryRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "BusinessExtentOfDisclosureIndex"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "CallingCode"] -> 
       "886", EntityProperty["Country", "CapacityUtilization"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "CapitalCity"] -> 
       Entity["City", {"TaipeiCity", "TaipeiCity", "Taiwan"}], 
       EntityProperty["Country", "CapitalLocation"] -> 
       GeoPosition[{25.02, 121.45}], 
       EntityProperty["Country", "CaseShillerIndex"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CentralBankIntervention"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CertificateOfDeposit"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ChangesInInventories"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CheckableDeposits"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ChemicalsFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ChildEmploymentFraction"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "ChildPopulation"] -> 
       Quantity[3.3327*^6, "People"], 
       EntityProperty["Country", "ChildrenAged6To59MonthsReceivedVitaminA"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "ChildrenOutOfSchool"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ChildrenUnderFiveOverweight"] -> 
       Missing["NotApplicable"], 
       EntityProperty[
        "Country", "ChildrenUnderFiveReceivedAntimalarialTreatment"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "ChildrenUnderFiveStunted"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "ChildrenUnderFiveUnderweight"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "ChildrenUnderFiveWithARISymptoms"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "ChildrenUnderFiveWithDiarrheaReceivingORT"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "ChildrenUnderFiveWithInsecticideNets"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "CinemaAttendance"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Cinemas"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "CinemaSeats"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CivilianEmploymentPopulationRatio"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CivilianLaborForce"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CivilianParticipationRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CivilianUnemploymentRate"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Classes"] -> {
         EntityClass["Country", "Asia"], 
         EntityClass["Country", "AsianDevelopmentBank"], 
         EntityClass["Country", "AsiaPacific"], 
         EntityClass["Country", "AsiaPacificEconomicCooperation"], 
         EntityClass["Country", "AsiaWithoutMiddleEast"], 
         EntityClass["Country", "CentralAmericanBankForEconomicIntegration"], 
         
         EntityClass["Country", "ChinaExtended"], 
         EntityClass["Country", "Countries"], 
         EntityClass["Country", "DevelopingCountries"], 
         EntityClass["Country", "EastAsia"], 
         EntityClass["Country", "EasternHemisphere"], 
         EntityClass["Country", "Eurasia"], 
         EntityClass["Country", "InternationalChamberOfCommerce"], 
         EntityClass[
         "Country", "InternationalConfederationOfFreeTradeUnions"], 
         EntityClass[
         "Country", 
          "InternationalFederationOfRedCrossAndRedCrescentSocieties"], 
         EntityClass["Country", "InternationalOlympicCommittee"], 
         EntityClass["Country", "InternationalTradeUnionConfederation"], 
         EntityClass["Country", "LandMasses"], 
         EntityClass["Country", "NorthernHemisphere"], 
         EntityClass["Country", "PacificRim"], 
         EntityClass["Country", "Palaearctic"], 
         EntityClass["Country", "SovereignCountries"], 
         EntityClass["Country", "WorldTradeOrganization"]}, 
       EntityProperty["Country", "ClimateTypes"] -> {
         Entity["ClimateType", "TropicalMonsoon"], 
         Entity["ClimateType", "DryWinterTropicalSavanna"], 
         Entity["ClimateType", "HumidSubtropical"], 
         Entity["ClimateType", "TemperateOceanic"], 
         Entity["ClimateType", "MonsoonInfluencedHumidSubtropical"], 
         Entity["ClimateType", "SubtropicalHighland"]}, 
       EntityProperty["Country", "CoalLigniteBrown"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "CoalTotal"] -> 
       Quantity[0., "Joules"/"Years"], 
       EntityProperty["Country", "CoalTotalShortTons"] -> 
       Quantity[0., "MetricTons"/"Years"], 
       EntityProperty["Country", "CoastGuard"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "CoastlineLength"] -> 
       Quantity[1566.3, "Kilometers"], 
       EntityProperty["Country", "CommercialBanksAssets"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CommercialBanksCredit"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "CommercialPaper"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CommercialPaperNonFinancial"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CommunityAndTraditionalHealthWorkers"] -> 
       Missing["NotApplicable"], 
       EntityProperty[
        "Country", "CommunityAndTraditionalHealthWorkersPopulationRatio"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CompensationPerHourIndex"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "CompletionRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CondomUseByYoungPeople"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "ConstructionValueAdded"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "ConsumerCredit"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ConsumerPriceIndex"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ConsumerSentiment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ContainerPortTraffic"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Continent"] -> 
       EntityClass["Country", "Asia"], 
       EntityProperty["Country", "ContraceptivePrevalence"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "ContributingFamilyWorkers"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ContributingFamilyWorkersFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ConventionalMortgageRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CorporateBondYield"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CorporateCapitalConsumptionAdjustment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CorporateCashFlow"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CorporateDividends"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CorporateInventoryValuationAdjustment"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "CorporateProfits"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CorporateProprietorsIncome"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "CostOfBusinessStartUpProcedures"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "CostToExport"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "CostToImport"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "CountryCode"] -> 
       "TW", EntityProperty["Country", "CPI"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "Cpia"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "CreditDepthOfInformationIndex"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "CrimeRate"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "CrimeTotal"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "CropsLandArea"] -> 
       Quantity[322.6, "Kilometers"^2], 
       EntityProperty["Country", "CropsLandFraction"] -> 
       Quantity[1., "Percent"], EntityProperty["Country", "CurrencyCode"] -> 
       "TWD", EntityProperty["Country", "CurrencyInCirculation"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "CurrencyName"] -> 
       "New Taiwan Dollar", EntityProperty["Country", "CurrencyShortName"] -> 
       "Dollar", EntityProperty["Country", "CurrencyUnit"] -> 
       Quantity[1, "TaiwanDollars"], 
       EntityProperty["Country", "CurrentAccount"] -> Missing["NotAvailable"],
        EntityProperty["Country", "CurrentAccountBalance"] -> 
       Quantity[8.288*^10, "USDollars"/"Years"], 
       EntityProperty["Country", "CurrentExpenditureOnHealth"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "DailyAverageHotels"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "DailyNewspapers"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "DeathRateFraction"] -> 
       Quantity[0.007352000000000001, 
         Divide["People", "People" "Years"]], 
       EntityProperty["Country", "DebtMeasure"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "DecAlternativeConversionFactor"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "DemandDeposits"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "DentistryPersonnel"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "DentistryPersonnelPopulationRatio"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "Dependencies"] -> {}, 
       EntityProperty["Country", "DependencyParent"] -> Missing["None"], 
       EntityProperty["Country", "DepositInterestRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "DepositsWithFederalReserveBanks"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Destroyers"] -> 4, 
       EntityProperty["Country", "DiscountRateChanges"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "DiscountWindowBorrowing"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "DiscrepancyInExpenditureEstimateOfGDP"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "DisposablePersonalIncome"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "DocumentsToExport"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "DocumentsToImport"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "DrinkingWater"] -> 
       Missing["NotApplicable"], EntityProperty["Country", "DryNaturalGas"] -> 
       Quantity[1.40638945154246*^16, "Joules"/"Years"], 
       EntityProperty["Country", "DryNaturalGasCubicFeet"] -> 
       Quantity[1.332606*^10, "Feet"^3/"Years"], 
       EntityProperty["Country", "EaseOfDoingBusinessIndex"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "EconomicAid"] -> 
       Quantity[-4.24*^8, "USDollars"/"Years"], 
       EntityProperty["Country", "EconomicallyActiveChildrenFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "EducationDuration"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "EffectiveFederalFundsRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ElderlyPopulation"] -> 
       Quantity[2.703956*^6, "People"], 
       EntityProperty["Country", "ElectricalGridFrequency"] -> {
         Quantity[60, "Hertz"]}, 
       EntityProperty["Country", "ElectricalGridPlugImages"] -> {
         Graphics[
          
          Raster[{{1, 1, 1, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
            8, 3, 1, 1, 1}, {1, 1, 8, 8, 8, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 
           4, 4, 4, 3, 8, 8, 8, 1, 1}, {1, 8, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
            1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 8, 1}, {5, 8, 1, 1, 1, 1, 6, 8, 8, 
           1, 1, 1, 1, 1, 1, 1, 8, 8, 5, 1, 1, 1, 1, 8, 3}, {8, 8, 1, 1, 1, 1,
            6, 8, 8, 1, 1, 1, 1, 1, 1, 1, 8, 8, 5, 1, 1, 1, 1, 8, 8}, {8, 3, 
           1, 1, 1, 1, 6, 8, 8, 1, 1, 1, 1, 1, 1, 1, 8, 8, 5, 1, 1, 1, 1, 4, 
           8}, {8, 3, 1, 1, 1, 1, 6, 8, 8, 1, 1, 1, 1, 1, 1, 1, 8, 8, 5, 1, 1,
            1, 1, 4, 8}, {8, 8, 1, 1, 1, 1, 6, 8, 8, 1, 1, 1, 1, 1, 1, 1, 8, 
           8, 5, 1, 1, 1, 1, 8, 8}, {5, 8, 1, 1, 1, 1, 6, 8, 8, 1, 1, 1, 1, 1,
            1, 1, 8, 8, 5, 1, 1, 1, 1, 8, 4}, {1, 8, 8, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 8, 1}, {1, 1, 8, 8, 8, 3, 3,
            3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 1, 1}, {1, 1, 1, 
           4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 1, 1, 
           1}}, {{0, 0}, {25, 12}}, ColorFunctionScaling -> False, 
           ColorFunction -> (Apply[RGBColor, 
             
             Part[{{1., 1., 1., 1.}, {0.06274509803921569, 
              0.06274509803921569, 0.06274509803921569, 1.}, {
              0.4196078431372549, 0.4196078431372549, 0.4196078431372549, 
              1.}, {0.5176470588235295, 0.5176470588235295, 
              0.5176470588235295, 1.}, {0.6470588235294118, 
              0.6470588235294118, 0.6470588235294118, 1.}, {0.807843137254902,
               0.807843137254902, 0.807843137254902, 1.}, {0.9372549019607843,
               0.9372549019607843, 0.9372549019607843, 1.}, {0., 0., 0., 
              1.}}, #]]& )], ImageSize -> {25, 12}, 
          PlotRange -> {{0, 25}, {0, 12}}, Background -> None]}, 
       EntityProperty["Country", "ElectricalGridPlugs"] -> {"A"}, 
       EntityProperty["Country", "ElectricalGridSocketImages"] -> {
         Graphics[
          Raster[CompressedData["
1:eJx9kdsNgCAMRaGF1gX035UcgQXc/88iKc9qCSG5uTk5oWe6rwTOuV3uITey
MZECLBOIcVsGmTTNJU2ppl4maFcJkFPUbuVylzYueh9XrkCaw68Z9HUhvDah
SGFBa3dOeUyp97UJ+gflGXw7M9P3oyu7wOnILuy9PXTRDRU=
           "], {{0, 0}, {22, 
           21}}, ColorFunctionScaling -> False, 
           ColorFunction -> (Apply[RGBColor, 
             
             Part[{{1., 1., 1., 1.}, {0.1607843137254902, 0.1607843137254902, 
              0.1607843137254902, 1.}, {0.2901960784313726, 
              0.2901960784313726, 0.2901960784313726, 1.}, {
              0.5490196078431373, 0.5490196078431373, 0.5490196078431373, 
              1.}, {0.7098039215686275, 0.7098039215686275, 
              0.7098039215686275, 1.}, {0.807843137254902, 0.807843137254902, 
              0.807843137254902, 1.}, {0.8705882352941177, 0.8705882352941177,
               0.8705882352941177, 1.}, {0., 0., 0., 1.}}, #]]& )], 
          ImageSize -> {22, 21}, PlotRange -> {{0, 22}, {0, 21}}, Background -> 
          None]}, EntityProperty["Country", "ElectricalGridSockets"] -> {1}, 
       EntityProperty["Country", "ElectricalGridVoltages"] -> {
         Quantity[110, "Volts"]}, 
       EntityProperty["Country", "ElectricityBiomass"] -> 
       Quantity[3.4*^9, "Hours" ("Kilowatts"/"Years")], 
       EntityProperty["Country", "ElectricityConventionalThermal"] -> 
       Quantity[1.84515*^11, "Hours" ("Kilowatts"/"Years")], 
       EntityProperty["Country", "ElectricityGeothermal"] -> 
       Quantity[0., "Hours" ("Kilowatts"/"Years")], 
       EntityProperty["Country", "ElectricityHydroelectric"] -> 
       Quantity[5.612*^9, "Hours" ("Kilowatts"/"Years")], 
       EntityProperty["Country", "ElectricityHydroPumpedStorage"] -> 
       Quantity[-2.94*^8, "Hours" ("Kilowatts"/"Years")], 
       EntityProperty["Country", "ElectricityNuclear"] -> 
       Quantity[4.007864*^10, "Hours" ("Kilowatts"/"Years")], 
       EntityProperty["Country", "ElectricitySolarTideWave"] -> 
       Quantity[3.*^7, "Hours" ("Kilowatts"/"Years")], 
       EntityProperty["Country", "ElectricityTotal"] -> 
       Quantity[2.3369601*^11, "Hours" ("Kilowatts"/"Years")], 
       EntityProperty["Country", "ElectricityTotalRenewables"] -> 
       Quantity[1.0742*^10, "Hours" ("Kilowatts"/"Years")], 
       EntityProperty["Country", "ElectricityWind"] -> 
       Quantity[1.7*^9, "Hours" ("Kilowatts"/"Years")], 
       EntityProperty["Country", "ElectricPowerFallingWaterResources"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "EmigrationRateOfTertiaryEducated"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "EmployeesCompensation"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Employers"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "EmployersFraction"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Employment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "EmploymentCostIndex"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "EmploymentFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "EmploymentToPopulationRatio"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "EndingAge"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "EntityClasses"] -> {
         EntityClass["Country", "Asia"], 
         EntityClass["Country", "AsianDevelopmentBank"], 
         EntityClass["Country", "AsiaPacific"], 
         EntityClass["Country", "AsiaPacificEconomicCooperation"], 
         EntityClass["Country", "AsiaWithoutMiddleEast"], 
         EntityClass["Country", "CentralAmericanBankForEconomicIntegration"], 
         
         EntityClass["Country", "ChinaExtended"], 
         EntityClass["Country", "Countries"], 
         EntityClass["Country", "DevelopingCountries"], 
         EntityClass["Country", "EastAsia"], 
         EntityClass["Country", "EasternHemisphere"], 
         EntityClass["Country", "Eurasia"], 
         EntityClass["Country", "InternationalChamberOfCommerce"], 
         EntityClass[
         "Country", "InternationalConfederationOfFreeTradeUnions"], 
         EntityClass[
         "Country", 
          "InternationalFederationOfRedCrossAndRedCrescentSocieties"], 
         EntityClass["Country", "InternationalOlympicCommittee"], 
         EntityClass["Country", "InternationalTradeUnionConfederation"], 
         EntityClass["Country", "LandMasses"], 
         EntityClass["Country", "NorthernHemisphere"], 
         EntityClass["Country", "PacificRim"], 
         EntityClass["Country", "Palaearctic"], 
         EntityClass["Country", "SovereignCountries"], 
         EntityClass["Country", "WorldTradeOrganization"]}, 
       EntityProperty["Country", "EnvironmentalAgreements"] -> {}, 
       EntityProperty["Country", "EnvironmentalIssues"] -> {
        "AirPollution", "EndangeredSpecies", "WasteDisposal", 
         "WaterPollution"}, EntityProperty["Country", "EthnicGroups"] -> {
         Entity["EthnicGroup", "Taiwanese"], 
         Entity["EthnicGroup", "MainlandChinese"], 
         Entity["EthnicGroup", "IndigenousPeople"]}, 
       EntityProperty["Country", "EthnicGroupsFractions"] -> {
        Entity["EthnicGroup", "Taiwanese"] -> 0.84, 
         Entity["EthnicGroup", "MainlandChinese"] -> 0.14, 
         Entity["EthnicGroup", "IndigenousPeople"] -> 0.02}, 
       EntityProperty["Country", "ExchangeRate"] -> 
       Quantity[31.864, "USDollars"^(-1)], 
       EntityProperty["Country", "ExpenditureFractions"] -> {
        "ExportValue" -> Missing["NotAvailable"], "ImportValue" -> 
         Missing["NotAvailable"]}, 
       EntityProperty["Country", "ExpenditureOnAncillaryServices"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ExpenditureOnDayCare"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ExpenditureOnHealth"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ExpenditureOnHomeHealthCare"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ExpenditureOnInpatientCare"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ExpenditureOnMedicalServices"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ExpenditureOnOutpatientCare"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ExpenditureOnOverthecounterMedicines"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ExpenditureOnPrescriptionMedicines"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ExpenditurePerStudent"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ExpenditurePerStudentFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ExportCommodities"] -> {
        "Automobiles", "Chemicals", "Electronics", "Metals", "Plastics", 
         "Textiles"}, EntityProperty["Country", "ExportPartners"] -> {
         Entity["Country", "China"], 
         Entity["Country", "UnitedStates"], 
         Entity["Country", "HongKong"], 
         Entity["Country", "Japan"], 
         Entity["Country", "Singapore"]}, 
       EntityProperty["Country", "ExportPartnersFractions"] -> {
        Entity["Country", "China"] -> 0.292, 
         Entity["Country", "UnitedStates"] -> 0.12, 
         Entity["Country", "HongKong"] -> 0.098, Entity["Country", "Japan"] -> 
         0.069, Entity["Country", "Singapore"] -> 0.046}, 
       EntityProperty["Country", "ExportsAsACapacityToImport"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "ExportsValue"] -> 
       Quantity[2.549*^11, "USDollars"/"Years"], 
       EntityProperty["Country", "ExtendedCreditBorrowings"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "ExternalBalance"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "ExternalDebt"] -> 
       Quantity[1.819*^11, "USDollars"], 
       EntityProperty[
        "Country", "FactorsAffectingReserveBalancesOfDepositoryInstitutions"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "FederalDebt"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "FederalDeficit"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FederalDemandDeposits"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FederalDemandDepositsNoteBalances"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FederalInvestment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FederalNoteBalances"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FederalReserveBankDiscountRate"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "FederalSurplus"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FemaleAdultPopulation"] -> 
       Quantity[8.612092*^6, "People"], 
       EntityProperty["Country", "FemaleChildPopulation"] -> 
       Quantity[1.609813*^6, "People"], 
       EntityProperty["Country", "FemaleElderlyPopulation"] -> 
       Quantity[1.441017*^6, "People"], 
       EntityProperty["Country", "FemaleInfantMortalityFraction"] -> 
       Quantity[0.00555, 
         Divide["People", "People"]], 
       EntityProperty["Country", "FemaleLifeExpectancy"] -> 
       Quantity[81.05, "Years"], EntityProperty["Country", "FemaleMedianAge"] -> 
       Quantity[41.5, "Years"], EntityProperty["Country", "FemalePopulation"] -> 
       Quantity[1.1662922*^7, "People"], 
       EntityProperty["Country", "FertilizerConsumption"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FertilizerProduction"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "FHAMortgageRate"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Fighters"] -> 291, 
       EntityProperty["Country", "FightersGroundAttack"] -> 150, 
       EntityProperty["Country", "FinalConsumptionExpenditure"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FinalSalesOfDomesticProduct"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FinalSalesToDomesticPurchasers"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "Country", "FirmsFormallyRegisteredWhenOperationsStarted"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FirmsOfferingFormalTraining"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FirmsUsingBanksToFinanceInvestment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FirmsWithFemaleParticipationInOwnership"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "FiscalYearDate"] -> 
       DateObject[{2021, 1, 1, 1, 0, 0.}, "Instant", "Gregorian", 1.], 
       EntityProperty["Country", "FishProduction"] -> Missing["NotAvailable"],
        EntityProperty["Country", "FixedBroadbandInternetSubscribers"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FixedCapitalConsumption"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Flag"] -> Graphics[{
          Thickness[0.001388888888888889], {
           FaceForm[{
             RGBColor[0.996078, 0., 0.], 
             Opacity[1.]}], 
           
           FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 0.}, {0., 
            480.}, {720., 480.}, {720., 0.}}}]}, {
           FaceForm[{
             RGBColor[0., 0., 0.5843139999999999], 
             Opacity[1.]}], 
           
           FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 480.}, {
            360., 480.}, {360., 240.}, {0., 240.}}}]}, {
           FaceForm[{
             RGBColor[1., 1., 1.], 
             Opacity[1.]}], 
           
           FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
            0}, {0, 1, 0}}}, {{{204., 360.}, {180., 270.}, {156., 360.}, {
            180., 450.}}, {{180., 336.}, {270., 360.}, {180., 384.}, {90., 
            360.}}}], 
           
           FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
            0}, {0, 1, 0}}}, {{{200.785, 348.}, {135., 282.059}, {
            159.21499999999997`, 372.}, {225., 437.941}}, {{168., 339.215}, {
            257.941, 315.}, {192., 380.78499999999997`}, {102.059, 405.}}}], 
           
           FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
            0}, {0, 1, 0}}}, {{{192., 339.215}, {102.059, 315.}, {168., 
            380.78499999999997`}, {257.941, 405.}}, {{159.21499999999997`, 
            348.}, {225., 282.059}, {200.785, 372.}, {135., 437.941}}}]}, {
           FaceForm[{
             RGBColor[0., 0., 0.5843139999999999], 
             Opacity[1.]}], 
           
           FilledCurve[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            231., 360.}, {231., 331.832}, {208.168, 309.}, {180., 309.}, {
            151.83200000000002`, 309.}, {129., 331.832}, {129., 360.}, {129., 
            388.168}, {151.83200000000002`, 411.}, {180., 411.}, {208.168, 
            411.}, {231., 388.168}, {231., 360.}}}]}, {
           FaceForm[{
             RGBColor[1., 1., 1.], 
             Opacity[1.]}], 
           
           FilledCurve[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            225., 360.}, {225., 335.148}, {204.85200000000003`, 315.}, {180., 
            315.}, {155.148, 315.}, {135., 335.148}, {135., 360.}, {135., 
            384.85200000000003`}, {155.148, 405.}, {180., 405.}, {
            204.85200000000003`, 405.}, {225., 384.85200000000003`}, {225., 
            360.}}}]}}, {
         ImageSize -> {{128}, {85}}, AspectRatio -> Automatic, 
          ImageSize -> {485., 323.}, PlotRange -> {{0., 720.}, {0., 480.}}}], 
       EntityProperty["Country", "FlagDescription"] -> 
       "red with a dark blue rectangle in the upper hoist-side corner bearing \
a white sun with 12 triangular rays", EntityProperty["Country", "FlagImage"] -> 
       Image[CompressedData["
1:eJztnGtIVGkYxwe1kG6aQUVBpGlFUkFBLSKBEMES9GFM+hASimaijaSibARd
PmX0ocz1lq6tly3brXVFMdHdndFx8lIu2cXFFRVrvPRh81qb2cz+6+yePcuM
kzONc84M/5ffHM48c847w/ubc87zzvueCYxNUR/3UqlUab5YqGMyI1JTY76K
9MeTKE1aYoImPu5LTXp8QnzqF7HeCMbhkYvHh3WV6mvPxqRSeTaytzAN0iAN
ejaytzAN0iANejYubs8tWypo0K0NVlb+QYPKN7h4cZ7V+Lp1N8xmM5Z27UWD
rjd4+nTrypVFlvHo6EYYxNLyJWyPvWhQIQZPnNA+ePDSUmJp6e8wiKWlvocP
XyYkaGlQIQY3bSqHKUj09/+fRKNxCnEsLfUhHhhYRoMKMQj6+sYhpaNj1M/v
uhAJDb1p/rdgXdQH0Yj09o4t0CeRvYXd1GBBwVNBlihRo2kWDWIdERyhgj6U
vLwnNKgog1FR90Rf7e2jK1Zcz8rqzM7uSk5uwvLSpU4/v//0oajVdTQoi8Gg
oDLYsYwHBBS9f2+CGq3WuHNnpZdXro9P3o4dt2Bq+/ZbWEdk167bev0Qtpmd
NVnNXXHwon4aXFCDaPm2ttGWluFz59rDw+9CjfhSc/NQSkozIklJutbWkTdv
ZsUj7vXrd/fvjyD59PbOTU9v0emM4l6LFuXt2/fjhQsdBsMw/IqXURpcIIMq
STaCMjExU13df/JkU3Bw+apVxUhKcQya5y6Njc83bixdvfqbzZvLobumZmBy
ckZ4CYo/Xx8NzhNpToJiMpkPHKiOiKiampqxoU+UHhZ259ChWmnQWfpo0C6J
SDuF9s/Pf7J8eWF//8Qn9Qmlp2dsyZKCkpJu4SnOn87SR4N2gWZH2jkwMLFs
WSEkzlOfUK5ceYTvwIsXU7ikOlEfDTog8dQp/bZt35lMdgk0I3HFRTMtrcW5
+mjQXj5mL2Wxsb/Y5+9jiY5uFPIfGnSxQV/f/P37f7p4sRPJDA6l0NCbOTmP
HTCIEyk6jKgB9aA21ImaaXCBDKI/vnv37cxMQ0PDc2lHb3r6Hbp4yCQdMIgE
Bp1H1CBGUDPqx7vgvfCONKhwg8hhaNBlBm2fRbOzuxwwyLOoXAalCJlMTMzP
Dhg8erQhJISZjMwG0adLTW3ZutXu3sTsrCkoqCwjw8DehIwGhR9IBwcnYeHq
1Ud2GczK6gwIKBoenm5tddrvaTTogD5BR3Hxs6VLC3t7x+apr7v7T1zyKip6
hKfOlSh7C7uFQak+oRw8WBMefnd8/O0n9b169dfevT9ERtZJg06UKHsLK9+g
OFUJZWzsbVVVX1KSLjCwdM2akg0bvq2vH7Shr7Z2YP36G2vXlgQHlycnN2Ff
UbqzJMrewgo3iItXW9uoXj909mx7WNgd6QivwTCCrpyPT25c3K86nVEc+EPB
ulZrPHasEdufOdOm1w+LeyGCg/f8eY7wusjgXLMs0CkQZllAxJ4936ObD9BV
VKvrsMQ6TMG4MCCFRBTfBMtKoO/zpyDK3sIKNzgXR47Ui0ecMGB0+fJv1651
aTTNOTmPsY4IzpPiNocP31ugTyJ7C7upwcLCf2YbisO1lrMNpRLz8znbUFkG
hQF66Wi71Rm/osS+vnEaVI7BkJAPs+4t57pYnXUvSkQ6SoMKMZiYqLM6VWmu
O18EidiLBhViEJ0Iq70AG3efYfuMDAMNKsSgtFcoxfYdoHPtRYOuN2gD3oXt
7gb5TwjubtD1yN7CNEiDNOjZyN7CNEiDNOjZyN7ChBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIUSZ/A/Jv
0nQ=
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
       EntityProperty["Country", "FlexibleSeasonalCreditRate"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "FMRadioStations"] -> 
       143, EntityProperty["Country", "FoodBeveragesTobaccoFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FoodProductionIndex"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FoodProductionPerCapitaIndex"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "ForcibleRape"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "ForcibleRapeRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ForeignExchangeReserves"] -> 
       Quantity[4.567*^11, "USDollars"], 
       EntityProperty["Country", "ForeignOwnedAssets"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ForeignOwnedShips"] -> {
        "Total" -> 3, Entity["Country", "Canada"] -> 2, 
         Entity["Country", "France"] -> 1}, 
       EntityProperty["Country", "ForeignRegisteredShips"] -> {
        "Total" -> 536, Entity["Country", "Panama"] -> 320, 
         Entity["Country", "Liberia"] -> 91, Entity["Country", "Singapore"] -> 
         72, Entity["Country", "Italy"] -> 13, Entity["Country", "HongKong"] -> 
         11, Entity["Country", "UnitedKingdom"] -> 11, 
         Entity["Country", "Kiribati"] -> 5, "Unknown" -> 3, 
         Entity["Country", "Honduras"] -> 2, Entity["Country", "Indonesia"] -> 
         2, Entity["Country", "Bolivia"] -> 1, Entity["Country", "Cambodia"] -> 
         1, Entity["Country", "MarshallIslands"] -> 1, 
         Entity["Country", "Philippines"] -> 1, 
         Entity["Country", "SierraLeone"] -> 1, Entity["Country", "Thailand"] -> 
         1}, EntityProperty["Country", "ForestWoodlandArea"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FreshwaterWithdrawals"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "FreshwaterWithdrawalsFraction"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Frigates"] -> 22, 
       EntityProperty["Country", "FullCoordinates"] -> {CompressedData["
1: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
         "], CompressedData["
1:eJwV1Xs4lFkcB3BFSJt0ISu3iVVoa3em5lWo07gkzeaS1GJkR1KRsSvZcdnc
71JDKwqRbGrakdu434enIrsJuzzSulRUeiKXWO1+54955vk83995z++c98wZ
Gpfn6LVcRkbmFD7Sb4XoZGZYJEWCZbcwg8c4JNE3mUXBUZ3vJ5JGOcTR4V5O
ZDRFaiQldhVwneJKhW9jKXJLvvubULjfKu6CHDy4/y07b4RDqmmhzy3iKeJr
bmFyCnY2MWnnwbnKGsUa8BcHNU9/TKAIS6W3fBvcGHi2Owz+7G8d9WiYQyoO
8CpTEyny5iIvQQDvm46S602hyOx6w626qJ8M3bfLHTlD9Hf4Xrg1iNubhPGW
t0zjs6XziYMPB8dRxLAnszdCmldeWBpEf7REP+47mIwdzu1GP57iLiMG+jf7
s8FvM/zMZGzTdTht1wRNI4YiP9r9W1cFm6+ZfNIPjytzvZWwPxGfkzUZqO8b
NOuhwdmBfXracEH1I/0yeD5FZF6K+ZpjzCI3veSQdYKaegn6aXy3cp0r/M5J
tDYI/QZuYexWgZ/WNHfEYz0bTla3ZcP2Rx73LsD7klW0z8Euh5ad+S+JIqvS
q3JS4IKNLqyRZIqEOXQkceDzJfwmNqwf222iBK/VzQmPwH49yfzM7EE/OUKu
qSH8XjWyqR/Ot8uqFaPeXVX2Yjfs2tcyxUIupHXYXIMve3w0+APzKRSfmxVi
/db2b95qIBcrcW/6SH3mK08fjPd2L122hP1MLVNyOI98ns/yoiM3dC5RPAsP
dKnfmEOuXVQ/nXSJIkcGzFpn4KYXWaYLyBf7LYP6UZ/syyrXTKVIbN/oUDZc
n3XHVgY29Zsf/AgbBZtq6V3GeZSYxebDqpXGd3fCVoo7wzah3yX+yTruFYrc
seC4tCD3rP8p4AXG7/DtdHaHrx731MiAuRlTPuWYP0dLtaAe9f0bAx3lkMf+
bnlzAU4zoz94hrxWba8vI40iExnx4sPI72/lXZFcxfkeddsxhfyxSnt1JTzs
uGdJgryqp+6E2jWKNAXqWntKzwPZLPZPp4gto6OBLd3/5yF+x+C5hQL9cljm
k9hfIqBIdMV+wS8w9/aghRbm2zY0Hi2P99eeY55RhH7U6av5e2D68G9qFch5
tvz70bAmc8DAAPOX5ymMsOHtkqNeQ/Bqp7aGLrhQ9WrLYCZFhg5c5Avg8TWd
ZlVZ2B+xvcUYvHu02EoTjl/U8659xSEfZkPqnK9T5J/QieO3Yf0BJ5NBeI+D
W67saw4RWqY+EaHeyMuTFwBbNtKcivB878Y1dYuoD2e3JR/C+vvlAuzoyPPO
2ulPo39768KUMuQuRrwDJuivdkl2los8RSuHdxTjayxnehth7kB+hzxsncAW
yY5jPk2Xk6YZ+D3wBec7kctEqNNP/0oRg0OOew2RkyZJosYNioiKzJlpsOLL
1x9C0C/eSor8BIcMx6UXh+N5Pl7NO2aQX5EzvsbC83pKyuttkHvd9XByhPM5
Mem5MLP4aKQE9VonenVq4fFo48WVWK/alz8fnJNadv3DPPRv05puk/+GQ7Li
lvvO4vxl0Q1Ki+H2JNP0Yzhf25urjD3ecsgr9ct1z3G+W2rcWoPg6lG/Nh04
pEuw9gfUayoX1j5AfTmDfa4Iz0+NEgu94S36I1xn9LssVVbJHr8XHca9px+w
/ji+VSEd40WMLld55JPR3x2pxv2wSvSwoQb7qxuT15qN+6ROmLCiHl4l/Dq2
FtbxcKRZwNkvt3cT3D83BFymGO9/5ns8CfeZ4IxeSqP0fpockm+DN6xYsNRG
/fi0g7Ub7vvMS+/31yP3U6bNG+L/4JZIt/MvuOzTQ64QLnX1v2cF27LlmdlR
FAmwJWwWPDfeHVOKfC5AaYoB/w9XtvrY
         "], CompressedData["
1:eJwV031QjFscB/DUuF6mYUpU2013M4lRYYmzqP2Z3SWTaVKTt/WE3ZZe1NpB
tbq6UW7dm7cttlZZNGgn1mA12BG9IVpD66U2Wdfg3jSIskON7d7v/eOZZz5z
zvk955zf9+HLVQlKdzc3NyGe/9/8+aFPc9MZPWr3TS8s46ggekHW8wxG4f/e
FRfBTUkG6kpjJNq5dE87rPNmbd0Yb5oUJFlTzlHLk1lK/22MXgn71wfCvXWz
R12Eh8fbDkjhvNHmxAaY97fl1Rqs5y/pZvJMRhkxPYr3GG9zVMsE2Yy+ie+l
KeC3MZ616lxGEbJl0hzMb54w1j9zNyNJ8LTV9bB1hk62fg+jhLBrV3lHOfpE
JwZ6sV7aVxycpeOofPaViwGw3nCp1aOSo5RJde/8UM/UeOSZCa4wOnhdqOc+
Vf6wDH5pS4/pyWPUIaj+VQI3z2woMMKPH4ua7sCFmvwxTnxv9Kpvo2L0HJnT
ZIWmfYxSv29SzIBFkcmWFUWMLm8KC4w6ztGhgsYbu4oZjS/44smDXSGD9tjf
GfHPXP+qgbc+qLQ2w0u/KKxcFUdZpYKAFNS7UdLfegH2iw4+J4HPDWQXPanm
aCC5XvD6N0bxMxubjLCdJ/M35DNSWvidvic4+jDflqDBfs8KU5VzYfOwPb8X
56vdVvPXIPzpZ1VFjYZRX4RoegkctPbkTTvux2U/7KOFBfWyvZ07GGWLU2ps
8Mtkm58JZoPnhWTg6NmIX5GHmpGHV2WUCPbOVYcJtzPaf964JQ/zV6qT7Dno
pz1H+vk2PPTo7QU9+l0e2cfnwZXDmkQt8rXvH0dLCBxZEeC5K5VRq0+V1IHz
Wvlx1iB4DNd8eiFsTPpavAW+HDtUz4MlqpV1XshftL7b1AiHnH6zjsEjXq8t
UbC2ZYr6M6xfLPnYBndsFLdPxn4E/aH+Krjl5JLig/C4UHPpPNy/eJVUp85i
5PQ56oqDF20ODL6P8VrXLz0RcI/jvvteFf6H7kzf4+hv6i2h91TYuLtXHYc8
/Hm2LDYc+e/QbhgRI28llomUrmB0Z47aGX6Mo3FDp7aa5Yx+cobvsCCfudrE
/fFKRrof+tI/kG+XJqVBDi/vSO5yIs+GjDifTuzfGpL04qGWo/8AzeCXNw==

         "], CompressedData["
1:eJxTTMoPSmViYGCQA2IQPcO3IfHnanOH5Z73o2KexDoI2rb49K41d1hlcUTP
4Wmsg+59FzuQ/CRuzVmPgPyVmywlfq8xd5DJTbMzfBbrYPXqxQ4poPyNbRqb
DwL5k7qvfZNeZe5QqbDJYzKQ/+O6TYQAkD8vZ+dL1uexDhddjFelrzB3uG87
e8MNoDzPDOl0veXmDlHT9z/XAcpb6l7uOrXU3KHfnt1HDMiXeXxFYh+Qv/F7
+6VmoPp1CuLP/JaYO5hYOwb2A/l6ilVr7y82d9CbVrvJFsjP9PozO3GRuUPu
uq8LqoF8htK4fQFA+d6zxrPfAPnKh1unWwPliy+cSmIHmn9IU8JKeqG5w7NQ
J5kJQHlZ41nLJBeYO5yQbZDbAuTvKnTMmT/P3EEt+ZhqBJDPv1My78B8c4dQ
X4FSeSD/+i+lhbpA/t5zNvkzgeGjtmo72zag+YJuf+0lgPJh/a5PWIH+vfVw
/UkpoPxl3ySBiJXmDivvSd3QAvJzat90cgL5Fv9T14YDw1/nEPPOqmXA+GDV
/8UF5MvMdP+XANSv+ZZ3n8HjWAfJ/3aPDwHVGwjdKtID8rUDug8eBsbHy/tP
cm8D+QUO3uEbgPHBtGSi1lMgHwBjWd1K
         "], CompressedData["
1:eJxTTMoPSmViYGCQBWIQ/ey9Jfe1fnOHbAbVLy/vxjp8W3gwxnGyuQP/9IN7
r9+LdVjy3ejbqYnmDqtFt0v33Y912C9QdO8/UD50ao62zoNYh99v3arWTDN3
UNeZdtweyN85q+2T/wxzhxdbdgiUAtWfevPoTc9McweLC72/tgL5AWLJrClA
+aiCr0HPgfzppmHsT4H8+BK5Xa5A/cHvWcIyZ5k7NHwV1tQA8tvVWdXfzDF3
2JQU29gL5JeKGJrtm2fu0Ge9tPkrUH9pH+PN10vNHar3/n68Fyh/M+dbYPgy
c4ckq2Q/toexDi/OtG+ctsTcwXRR1qpYIL+94taF5sXmDt1c3Q7aj2Id1Cv3
S8sA5SNfXxW8CORXGEdO+rTQ3KFV4PWLyUD+NwZ1Vb9F5g4TLy7rTwXy7Y0O
NZwCygedDXzTC+TvuP9666sF5g55W2e81ACabzux8NpHoH9/hO4MqATyWVLm
easD/Zf0Qum8PZCfxCmwqnK6uUPE/seqJ4Hu9Xv4XfXiVHOHu/szXLmA8ot4
D7C5TDF3COPcffYAUP67/Ey+uRPMHdYwejnzAuUfvltztwwYHywTbh05CfS/
91m5DFagvNjSloRQIB8AeJbfcA==
         "], CompressedData["
1:eJxTTMoPSmViYGAQB2IQbS2rbHKXxcyhScNvSVZanIPxyoW8BxjMHHYdO5T9
KTXOIX2b9peDQP6UbUwhTSlxDhOKnvE+YzVzuFW+YOWm5DiHBS8KkjPZzBzk
PzM2+iXFObivObqcgcfMYXLIshnMiXEOQu/usx3jNnNYefXP3EkJcQ4CsQH3
jXjNHGJu7Xq6Bchfnf591hU+Mwe56NbmYiB/gd2Oj3cFgPIfD38HyUu/1jli
ImrmwDNFJIIByP9wf4/FRyC/eyunYwSQL3tG7cAGETOHSzmHz54D8hljX11T
BMoHKWaIbQLaP40j5L8CUF6z11bhK5C/1dbALBkoL/1TfM4coPvv7DS41A2U
T3HNiL8C5IvVPFEwEjNz4DRbVx8O9K9eUt8VQ0EzB9Xk7JxUID/jse6fVn4z
h9WR6TX3gXxDtb97RYDuX/NB9rUEkJ/M7yFbwWXmsHTJoygPIF96x4rd4cDw
CdXeccQMGL4A6v+WEw==
         "], {{24.4262303, 118.220285}, {24.4277901, 
         118.2263069}, {24.4492986, 118.232815}, {24.4532172, 118.2486417}, {
         24.443248, 118.2677052}, {24.4226005, 118.2630478}, {24.4242148, 
         118.2514902}, {24.4142995, 118.2462851}, {24.4112611, 118.2414276}, {
         24.4145288, 118.2409491}, {24.4136886, 118.234029}, {24.4050472, 
         118.2259261}, {24.4120742, 118.2115816}, {24.4170957, 118.2196792}, {
         24.4255556, 118.2169997}, {24.4299223, 118.2205332}}, {{22.6439099, 
         121.4848788}, {22.6464766, 121.4730689}, {22.6596202, 121.4719329}, {
         22.6590877, 121.4762458}, {22.671594, 121.464082}, {22.677952, 
         121.4644548}, {22.6756291, 121.479776}, {22.6797909, 121.4917492}, {
         22.6752682, 121.4936086}, {22.6787499, 121.5093}, {22.6670121, 
         121.513723}, {22.6571, 121.50634}, {22.65457, 121.51053}, {
         22.6461766, 121.4998184}, {22.6347566, 121.5088392}, {22.6330177, 
         121.4961122}}, {{23.3847299, 119.5059899}, {23.375205, 
         119.5108907}, {23.3711748, 119.5085659}, {23.373194, 119.516138}, {
         23.3678289, 119.5162168}, {23.3645458, 119.5077967}, {23.3535949, 
         119.5127951}, {23.3526599, 119.4907215}, {23.3569341, 119.4874444}, {
         23.3654041, 119.4948785}, {23.3793601, 119.4917194}, {23.3846846, 
         119.495542}, {23.3962, 119.4900999}, {23.38923, 119.50059}, {
         23.39369, 119.5046499}}, {{22.5760735, 120.2995505}, {22.553546, 
         120.3161243}, {22.55985, 120.3048901}, {22.6103471, 120.2632308}, {
         22.6161331, 120.2644242}, {22.6082274, 120.2784465}, {22.59675, 
         120.2814599}, {22.5940996, 120.2839752}, {22.5994085, 120.2822947}, {
         22.5997835, 120.2824639}, {22.6002174, 120.2832943}}, {{23.19377, 
         119.42935}, {23.1867988, 119.4300045}, {23.1933427, 119.4179774}, {
         23.1961373, 119.4217903}, {23.1937427, 119.41573}, {23.2043409, 
         119.4199191}, {23.2155526, 119.410399}, {23.2204013, 119.4476637}, {
         23.2006628, 119.4430627}, {23.2019085, 119.4361505}}, {{
         20.7047178295164, 116.710929482486}, {20.6997317581518, 
         116.72338399508}, {20.7021476737308, 116.721599491768}, {
         20.7046177500486, 116.726799479621}, {20.7067314210931, 
         116.711072134953}, {20.7094978706262, 116.718299530571}, {
         20.7032680572704, 116.732736894492}, {20.6972221903369, 
         116.73459407151}, {20.6998378071495, 116.72105951445}}, {{23.72664, 
         119.60222}, {23.7386999, 119.5952}, {23.756, 119.61012}, {23.74341, 
         119.62231}, {23.7413501, 119.6158001}, {23.73709, 119.61563}, {
         23.74062, 119.6119101}, {23.73733, 119.61479}, {23.7371401, 
         119.60642}}, {{23.3879629, 120.1526898}, {23.3764265, 120.1548901}, {
         23.3785184, 120.1400097}, {23.376625, 120.1400269}, {23.3743861, 
         120.1377037}, {23.3743816, 120.1317677}, {23.3774407, 120.139853}, {
         23.3844777, 120.1311425}, {23.3845543, 120.150636}}, {{22.355886, 
         120.3788359}, {22.3503617, 120.3887411}, {22.3424552, 120.3875197}, {
         22.3229221, 120.3632332}, {22.3232294, 120.3546296}, {22.3288774, 
         120.3536698}, {22.3399276, 120.3632168}, {22.3464106, 
         120.3609479}}, {{23.3585624, 119.5246438}, {23.3670378, 
         119.5187786}, {23.3665286, 119.5252967}, {23.3734179, 119.5315113}, {
         23.372603, 119.5407358}, {23.3650359, 119.5438809}, {23.3668382, 
         119.53255}}, {{24.8356032, 121.9621096}, {24.8375915, 121.9426995}, {
         24.8457804, 121.9348357}, {24.8431805, 121.943435}, {24.8503505, 
         121.9483179}, {24.8496286, 121.955513}, {24.8398382, 
         121.9643965}}, {{23.4830896, 119.512042}, {23.4912826, 
         119.5102018}, {23.48648, 119.5147501}, {23.49564, 119.5278899}, {
         23.4979099, 119.5373101}, {23.4943705, 119.5436119}}, {{22.9728023, 
         120.1555656}, {22.9798206, 120.155079}, {22.9840348, 120.1492817}, {
         22.9884404, 120.1519068}, {22.9741816, 120.1658852}, {22.9705845, 
         120.1628973}}, {{25.1541317, 121.7680889}, {25.1513075, 
         121.7625557}, {25.1593735, 121.7607637}, {25.1595588, 121.7562386}, {
         25.1637961, 121.7635227}, {25.1589819, 121.7797203}}, {{23.3980069, 
         119.3161897}, {23.4034895, 119.3146257}, {23.4118195, 119.3188557}, {
         23.4074294, 119.3295558}, {23.4009693, 119.3275059}}, {{23.6088602, 
         119.6050645}, {23.6168708, 119.5965751}, {23.6233586, 119.6072459}, {
         23.6200707, 119.6132353}, {23.6140606, 119.614095}}, {{23.2444299, 
         119.6715201}, {23.25038, 119.66534}, {23.2604199, 119.6656499}, {
         23.2629799, 119.6772801}}}, EntityProperty["Country", "FullName"] -> 
       "Taiwan", EntityProperty["Country", "FullNativeNames"] -> {"T'ai-wan"},
        EntityProperty["Country", "GasDieselOils"] -> Missing["NotAvailable"],
        EntityProperty["Country", "GDP"] -> 
       Quantity[6.12109*^11, "USDollars"/"Years"], 
       EntityProperty["Country", "GDPDeflator"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "GDPPerPersonEmployed"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "Country", "GeneralGovernmentFinalConsumptionExpenditure"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "GiniIndex"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "GNI"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "Country", "GovernmentConsumptionExpendituresGrossInvestment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GovernmentCurrentExpenditures"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GovernmentCurrentReceipts"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "GovernmentDebt"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GovernmentEducationSpendingFractionGNI"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GovernmentInvestment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GovernmentReceipts"] -> 
       Quantity[4.167*^10, "USDollars"/"Years"], 
       EntityProperty["Country", "GovernmentSaving"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GovernmentSurplus"] -> 
       Quantity[-8.59*^9, "USDollars"/"Years"], 
       EntityProperty["Country", "GrantsInAid"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "GreenhouseGasEmissions"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GrossCapitalFormation"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GrossDomesticIncome"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GrossDomesticProduct"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GrossDomesticPurchases"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GrossDomesticSavings"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GrossFixedCapitalFormation"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GrossNationalExpenditure"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GrossNationalExpenditureDeflator"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GrossNationalProduct"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "GrossSavings"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GrossStateProduct"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "GrossValueAddedAtFactorCost"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Groups"] -> {
         EntityClass["Country", "Asia"], 
         EntityClass["Country", "AsianDevelopmentBank"], 
         EntityClass["Country", "AsiaPacific"], 
         EntityClass["Country", "AsiaPacificEconomicCooperation"], 
         EntityClass["Country", "AsiaWithoutMiddleEast"], 
         EntityClass["Country", "CentralAmericanBankForEconomicIntegration"], 
         
         EntityClass["Country", "ChinaExtended"], 
         EntityClass["Country", "Countries"], 
         EntityClass["Country", "DevelopingCountries"], 
         EntityClass["Country", "EastAsia"], 
         EntityClass["Country", "EasternHemisphere"], 
         EntityClass["Country", "Eurasia"], 
         EntityClass["Country", "InternationalChamberOfCommerce"], 
         EntityClass[
         "Country", "InternationalConfederationOfFreeTradeUnions"], 
         EntityClass[
         "Country", 
          "InternationalFederationOfRedCrossAndRedCrescentSocieties"], 
         EntityClass["Country", "InternationalOlympicCommittee"], 
         EntityClass["Country", "InternationalTradeUnionConfederation"], 
         EntityClass["Country", "LandMasses"], 
         EntityClass["Country", "NorthernHemisphere"], 
         EntityClass["Country", "PacificRim"], 
         EntityClass["Country", "Palaearctic"], 
         EntityClass["Country", "SovereignCountries"], 
         EntityClass["Country", "WorldTradeOrganization"]}, 
       EntityProperty["Country", "GuestsInHotels"] -> 
       Missing["NotApplicable"], EntityProperty["Country", "HasPolygon"] -> 
       True, EntityProperty["Country", "HDI"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "HighestElevation"] -> 
       Quantity[3997., "Meters"], 
       EntityProperty["Country", "HighestPoint"] -> {"Yushan", 3997.}, 
       EntityProperty["Country", "HIVAIDSDeathRateFraction"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "HIVAIDSFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "HIVAIDSPopulation"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "HomeOwnershipRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "HospitalBedsPer10000Population"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "HoursWorkedIndex"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "HouseholdCreditMarketOutstandingDebt"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "HouseholdDebtService"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "HouseholdFinalConsumptionExpenditure"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "HouseholdFinancialObligation"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "HousePriceIndex"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "HousePriceIndexAnnualAverage"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "HousesSold"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "HousingAffordability"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "HousingPermit"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "HousingStarts"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "HousingUnits"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "IlliteracyFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ImplicitPriceDeflator"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ImportCommodities"] -> {
        "Chemicals", "Electronics", "Instruments", "Machinery", "Metals", 
         "Oil"}, EntityProperty["Country", "ImportPartners"] -> {
         Entity["Country", "Japan"], 
         Entity["Country", "UnitedStates"], 
         Entity["Country", "China"], 
         Entity["Country", "SouthKorea"], 
         Entity["Country", "SaudiArabia"], 
         Entity["Country", "Singapore"]}, 
       EntityProperty["Country", "ImportPartnersFractions"] -> {
        Entity["Country", "Japan"] -> 0.193, Entity["Country", "China"] -> 
         0.13, Entity["Country", "UnitedStates"] -> 0.109, 
         Entity["Country", "SaudiArabia"] -> 0.063, 
         Entity["Country", "SouthKorea"] -> 0.055}, 
       EntityProperty["Country", "ImportsValue"] -> 
       Quantity[2.367*^11, "USDollars"/"Years"], 
       EntityProperty["Country", "ImprovedSanitation"] -> 
       Missing["NotApplicable"], EntityProperty["Country", "IncomePayments"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "IncomeReceipts"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "IncomeShare"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "IndependenceDate"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "IndependenceYear"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "IndustrialProduction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "IndustrialProductionGrowth"] -> 
       Quantity[3.9, "Percent"/"Years"], 
       EntityProperty["Country", "InfantMortalityFraction"] -> 
       Quantity[0.0043, 
         Divide["People", "People"]], 
       EntityProperty["Country", "InfectiousDiseases"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Inflation"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "InflationExpectation"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "InflationRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "InformalPaymentsToPublicOfficials"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "InstitutionalMoneyFunds"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "IntakeRateInGrade1"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "InterestRateSpread"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "InternationalMigrantStock"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "InternationalOrganizations"] -> {
         EntityClass["Country", "AsianDevelopmentBank"], 
         EntityClass["Country", "AsiaPacificEconomicCooperation"], 
         EntityClass["Country", "CentralAmericanBankForEconomicIntegration"], 
         
         EntityClass["Country", "InternationalChamberOfCommerce"], 
         EntityClass[
         "Country", "InternationalConfederationOfFreeTradeUnions"], 
         EntityClass[
         "Country", 
          "InternationalFederationOfRedCrossAndRedCrescentSocieties"], 
         EntityClass["Country", "InternationalOlympicCommittee"], 
         EntityClass["Country", "InternationalTradeUnionConfederation"], 
         EntityClass["Country", "WorldTradeOrganization"]}, 
       EntityProperty["Country", "InternationalOrganizationsObserver"] -> {
         EntityClass["Country", "CentralAmericanParliament"], 
         EntityClass["Country", "WorldHealthOrganization"]}, 
       EntityProperty["Country", "InternetCode"] -> ".tw", 
       EntityProperty["Country", "InternetHosts"] -> 5.704*^6, 
       EntityProperty["Country", "InternetSpeedDownloadRate"] -> 
       Quantity[17.52, "Megabits"/"Seconds"], 
       EntityProperty["Country", "InternetSpeedUploadRate"] -> 
       Quantity[2.72, "Megabits"/"Seconds"], 
       EntityProperty["Country", "InternetUsers"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "InventoryToSalesRatio"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "InvestmentOnMedicalFacilities"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "IPCount"] -> 
       35938023, EntityProperty["Country", "IRAKeoghAccounts"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "IrrigatedLandArea"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "IrrigatedLandFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "IslamicRevolutionaryGuardCorps"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ISOCertificationOwnership"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "ISOName"] -> 
       "TAIWAN, PROVINCE OF CHINA", EntityProperty["Country", "ITURegion"] -> 
       3, EntityProperty["Country", "LaboratoryHealthWorkers"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "LaboratoryHealthWorkersPopulationRatio"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "LaborForce"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "LaborForceFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "LaborParticipationRate"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "LandArea"] -> 
       Quantity[32260., "Kilometers"^2], 
       EntityProperty["Country", "LandAreaCrops"] -> 
       Quantity[5980., "Kilometers"^2], 
       EntityProperty["Country", "Languages"] -> {
         Entity["Language", "ChineseMinNan::9s3vk"], 
         Entity["Language", "ChineseMandarin::279r4"], 
         Entity["Language", "ChineseHakka::875d9"]}, 
       EntityProperty["Country", "LanguagesDialects"] -> {
         Entity["Language", "Amis::w822g"], 
         Entity["Language", "Atayal::69sy3"], 
         Entity["Language", "Babuza::yf8kc"], 
         Entity["Language", "Basay::np854"], 
         Entity["Language", "Bunun::gc428"], "Hakka Chinese", 
         Entity["Language", "Japanese::y9r37"], 
         Entity["Language", "Kanakanabu::p5y48"], 
         Entity["Language", "Kavalan::2qv2c"], 
         Entity["Language", "Ketangalan::r854x"], 
         Entity["Language", "KulonPazeh::2334c"], "Mandarin Chinese", 
         "Min Nan Chinese", "Nataoran Amis", 
         Entity["Language", "Paiwan::8w278"], 
         Entity["Language", "Papora::q4xbc"], 
         Entity["Language", "Puyuma::zd7bf"], 
         Entity["Language", "Rukai::4gh57"], 
         Entity["Language", "Saaroa::p6285"], 
         Entity["Language", "Saisiyat::5442z"], 
         Entity["Language", "Siraya::3yhd5"], 
         Entity["Language", "TaiwanSignLanguage::x8c2w"], 
         Entity["Language", "Taroko::w659j"], 
         Entity["Language", "Thao::496tf"], 
         Entity["Language", "Tsou::ntn9b"], 
         Entity["Language", "Yami::v2xnw"]}, 
       EntityProperty["Country", "LanguagesFractions"] -> {
        Entity["Language", "ChineseMinNan::9s3vk"] -> 0.652902126010371453`2.,
          Entity["Language", "ChineseMandarin::279r4"] -> 
         0.1881663927161890681`2., Entity["Language", "ChineseHakka::875d9"] -> 
         0.1029844286760359244`2., Entity["Language", "Amis::w822g"] -> 
         0.0059915087031635763`2., Entity["Language", "Atayal::69sy3"] -> 
         0.0036706157524303085`2., 
         Entity["Language", "TaiwanSignLanguage::x8c2w"] -> 
         0.0035934862479442831`2., Entity["Language", "Paiwan::8w278"] -> 
         0.0028764256063512927`2., Entity["Language", "Bunun::gc428"] -> 
         0.001653539924333867`2., Entity["Language", "Rukai::4gh57"] -> 
         0.0004589031409684895`2., Entity["Language", "Japanese::y9r37"] -> 
         0.0004352680840069144`2., Entity["Language", "Puyuma::zd7bf"] -> 
         0.0003694120228966682`2., Entity["Language", "Saisiyat::5442z"] -> 
         0.0002067523399032842`2., Entity["Language", "Taroko::w659j"] -> 
         0.0002067523399032842`2., Entity["Language", "Yami::v2xnw"] -> 
         0.0001472947196279398`2., Entity["Language", "Basay::np854"] -> 
         Missing["NotAvailable"], Entity["Language", "Kanakanabu::p5y48"] -> 
         Missing["NotAvailable"], Entity["Language", "Kavalan::2qv2c"] -> 
         Missing["NotAvailable"], Entity["Language", "Siraya::3yhd5"] -> 
         Missing["NotAvailable"], Entity["Language", "Thao::496tf"] -> 
         Missing["NotAvailable"], Entity["Language", "Tsou::ntn9b"] -> 
         Missing["NotAvailable"]}, EntityProperty["Country", "LarcenyTheft"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "LarcenyTheftRate"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "LargestCities"] -> {
         Entity["City", {"Kaohsiung", "KaohsiungShih", "Taiwan"}], 
         Entity["City", {"TaipeiCity", "TaipeiCity", "Taiwan"}], 
         Entity["City", {"Taichung", "TaichungShih", "Taiwan"}], 
         Entity["City", {"Tainan", "TainanShih", "Taiwan"}], 
         Entity["City", {"Panchiao", "TaipeiHsien", "Taiwan"}], 
         Entity["City", {"Hsinchu", "HsinchuShih", "Taiwan"}], 
         Entity["City", {"Taoyuan", "Taoyuan", "Taiwan"}], 
         Entity["City", {"Chungho", "TaipeiHsien", "Taiwan"}], 
         Entity["City", {"Hsinchuang", "TaipeiHsien", "Taiwan"}], 
         Entity["City", {"Chungli", "Taoyuan", "Taiwan"}], 
         Entity["City", {"Sanchung", "TaipeiHsien", "Taiwan"}], 
         Entity["City", {"Keelung", "KeelungShih", "Taiwan"}], 
         Entity["City", {"Fengshan", "KaohsiungHsien", "Taiwan"}], 
         Entity["City", {"Hsintien", "TaipeiHsien", "Taiwan"}], 
         Entity["City", {"Chiayi", "ChiayiShih", "Taiwan"}], 
         Entity["City", {"Tucheng", "TaipeiHsien", "Taiwan"}], 
         Entity["City", {"Changhwa", "Changhwa", "Taiwan"}], 
         Entity["City", {"Yungkang", "TainanHsien", "Taiwan"}], 
         Entity["City", {"Yungho", "TaipeiHsien", "Taiwan"}], 
         Entity["City", {"Pingchen", "Taoyuan", "Taiwan"}], 
         Entity["City", {"Tali", "TaichungHsien", "Taiwan"}], 
         Entity["City", {"Pingtung", "Pingtung", "Taiwan"}], 
         Entity["City", {"Luchou", "TaipeiHsien", "Taiwan"}], 
         Entity["City", {"Hsichih", "TaipeiHsien", "Taiwan"}], 
         Entity["City", {"Shulin", "TaipeiHsien", "Taiwan"}], 
         Entity["City", {"Pate", "Taoyuan", "Taiwan"}], 
         Entity["City", {"Fengyuan", "TaichungHsien", "Taiwan"}], 
         Entity["City", {"Chupei", "HsinchuHsien", "Taiwan"}], 
         Entity["City", {"Tanshui", "TaipeiHsien", "Taiwan"}], 
         Entity["City", {"Yangmei", "Taoyuan", "Taiwan"}], 
         Entity["City", {"Yuanlin", "Changhwa", "Taiwan"}], 
         Entity["City", {"Sanhsia", "TaipeiHsien", "Taiwan"}], 
         Entity["City", {"Touliu", "Yunlin", "Taiwan"}], 
         Entity["City", {"Taitung", "Taitung", "Taiwan"}], 
         Entity["City", {"Hualian", "Hualien", "Taiwan"}], 
         Entity["City", {"Nantou", "Nantou", "Taiwan"}], 
         Entity["City", {"Tsaotun", "Nantou", "Taiwan"}], 
         Entity["City", {"Kangshan", "KaohsiungHsien", "Taiwan"}], 
         Entity["City", {"Chutung", "HsinchuHsien", "Taiwan"}], 
         Entity["City", {"Ilan", "Ilan", "Taiwan"}], 
         Entity["City", {"Toufen", "Miaoli", "Taiwan"}], 
         Entity["City", {"Tachi", "Taoyuan", "Taiwan"}], 
         Entity["City", {"Miaoli", "Miaoli", "Taiwan"}], 
         Entity["City", {"Homei", "Changhwa", "Taiwan"}], 
         Entity["City", {"Yingko", "TaipeiHsien", "Taiwan"}], 
         Entity["City", {"Lukang", "Changhwa", "Taiwan"}], 
         Entity["City", {"Chingshui", "TaichungHsien", "Taiwan"}], 
         Entity["City", {"Puli", "Nantou", "Taiwan"}], 
         Entity["City", {"Tachia", "TaichungHsien", "Taiwan"}], 
         Entity["City", {"Shalu", "TaichungHsien", "Taiwan"}], 
         Entity["City", {"Hsinying", "TainanHsien", "Taiwan"}], 
         Entity["City", {"Lotung", "Ilan", "Taiwan"}], 
         Entity["City", {"Chunan", "Miaoli", "Taiwan"}], 
         Entity["City", {"Huwei", "Yunlin", "Taiwan"}], 
         Entity["City", {"Linkou", "TaipeiHsien", "Taiwan"}], 
         Entity["City", {"Makung", "Penghu", "Taiwan"}], 
         Entity["City", {"Chushan", "Nantou", "Taiwan"}], 
         Entity["City", {"Chiali", "TainanHsien", "Taiwan"}], 
         Entity["City", {"Chaochou", "Pingtung", "Taiwan"}], 
         Entity["City", {"Tungshih", "Taoyuan", "Taiwan"}], 
         Entity["City", {"Chihu", "Changhwa", "Taiwan"}], 
         Entity["City", {"Erhlin", "Changhwa", "Taiwan"}], 
         Entity["City", {"Wuchi", "TaichungHsien", "Taiwan"}], 
         Entity["City", {"Tungkang", "Pingtung", "Taiwan"}], 
         Entity["City", {"Hsilo", "Yunlin", "Taiwan"}], 
         Entity["City", {"Yuanli", "Miaoli", "Taiwan"}], 
         Entity["City", {"Hsinhua", "TainanHsien", "Taiwan"}], 
         Entity["City", {"Shanhwa", "TainanHsien", "Taiwan"}], 
         Entity["City", {"Matou", "TainanHsien", "Taiwan"}], 
         Entity["City", {"Tienchung", "Changhwa", "Taiwan"}], 
         Entity["City", {"Tounan", "Yunlin", "Taiwan"}], 
         Entity["City", {"Peikang", "Yunlin", "Taiwan"}], 
         Entity["City", {"Meinung", "KaohsiungHsien", "Taiwan"}], 
         Entity["City", {"Juifang", "TaipeiHsien", "Taiwan"}], 
         Entity["City", {"Potzu", "ChiayiHsien", "Taiwan"}], 
         Entity["City", {"Chishan", "KaohsiungHsien", "Taiwan"}], 
         Entity["City", {"Suao", "Ilan", "Taiwan"}], 
         Entity["City", {"Kincheng", "Kinmen", "Taiwan"}], 
         Entity["City", {"Houlung", "Miaoli", "Taiwan"}], 
         Entity["City", {"Tunghsiao", "Miaoli", "Taiwan"}], 
         Entity["City", {"Taipao", "ChiayiHsien", "Taiwan"}], 
         Entity["City", {"Hsinpu", "HsinchuHsien", "Taiwan"}], 
         Entity["City", {"Kuanhsi", "HsinchuHsien", "Taiwan"}], 
         Entity["City", {"Talin", "ChiayiHsien", "Taiwan"}], 
         Entity["City", {"Paiho", "TainanHsien", "Taiwan"}], 
         Entity["City", {"Toucheng", "Ilan", "Taiwan"}], 
         Entity["City", {"Tuku", "Yunlin", "Taiwan"}], 
         Entity["City", {"Peitou", "Changhwa", "Taiwan"}], 
         Entity["City", {"Hengchun", "Pingtung", "Taiwan"}], 
         Entity["City", {"Hsuechia", "TainanHsien", "Taiwan"}], 
         Entity["City", {"Putai", "ChiayiHsien", "Taiwan"}], 
         Entity["City", {"Yenshui", "TainanHsien", "Taiwan"}], 
         Entity["City", {"Yuli", "Hualien", "Taiwan"}], 
         Entity["City", {"Cholan", "Miaoli", "Taiwan"}], 
         Entity["City", {"Chengkung", "Taoyuan", "Taiwan"}], 
         Entity["City", {"Kinhu", "Kinmen", "Taiwan"}], 
         Entity["City", {"Kinhsia", "Kinmen", "Taiwan"}], 
         Entity["City", {"Chichi", "Nantou", "Taiwan"}], 
         Entity["City", {"Fenglin", "Hualien", "Taiwan"}], 
         Entity["City", {"Kuanshan", "Taitung", "Taiwan"}]}, 
       EntityProperty["Country", "Latitude"] -> 
       Quantity[23.5, "AngularDegrees"], 
       EntityProperty["Country", "LeadTimeToExport"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "LeadTimeToImport"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "LegalAbortions"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "LeisureArrivals"] -> 
       Quantity[1.648*^6, "People"/"Years"], 
       EntityProperty["Country", "LendingInterestRate"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "LicensePlateCode"] -> 
       "RC", EntityProperty["Country", "LifeExpectancy"] -> 
       Quantity[80.4, "Years"], 
       EntityProperty["Country", "LinerShippingConnectivityIndex"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "LiquidAssets"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "LiteracyRate"] -> 
       Quantity[96.1, "Percent"], 
       EntityProperty["Country", "LivestockPopulation"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "LogisticsPerformanceIndex"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Longitude"] -> 
       Quantity[121., "AngularDegrees"], 
       EntityProperty["Country", "LongTermUnemploymentRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "LossesDueToTheftRobberyVandalismAndArson"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "LowestElevation"] -> 
       Quantity[0., "Meters"], 
       EntityProperty["Country", "LowestPoint"] -> {"SouthChinaSea", 0.}, 
       EntityProperty["Country", "M2InterestRate"] -> Missing["NotAvailable"],
        EntityProperty["Country", "M2MinusInterestRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "MachineryAndTransportEquipmentFraction"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "MainBattleTanks"] -> 
       566, EntityProperty["Country", "MajorIndustries"] -> {
        "Armaments", "Automobiles", "BuildingMaterials", "Chemicals", 
         "ConsumerGoods", "Electronics", "Food", "Iron", "Machinery", 
         "Metals", "Oil", "Pharmaceuticals", "Textiles"}, 
       EntityProperty["Country", "MajorPorts"] -> {
        "Chilung", "Kaohsiung", "Taichung"}, 
       EntityProperty["Country", "MaleAdultPopulation"] -> 
       Quantity[8.650968*^6, "People"], 
       EntityProperty["Country", "MaleChildPopulation"] -> 
       Quantity[1.722887*^6, "People"], 
       EntityProperty["Country", "MaleElderlyPopulation"] -> 
       Quantity[1.262939*^6, "People"], 
       EntityProperty["Country", "MaleInfantMortalityFraction"] -> 
       Quantity[0.00697, 
         Divide["People", "People"]], 
       EntityProperty["Country", "MaleLifeExpectancy"] -> 
       Quantity[75.12, "Years"], EntityProperty["Country", "MaleMedianAge"] -> 
       Quantity[40.`3., "Years"], EntityProperty["Country", "MalePopulation"] -> 
       Quantity[1.1636794*^7, "People"], 
       EntityProperty["Country", "ManagementTimeDealingWithOfficials"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ManufacturersNewOrders"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "MarineCorps"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "MarineProtectedAreasFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "MaritimeClaims"] -> {
        "TerritorialSea" -> 12, "ExclusiveEconomicZone" -> 200}, 
       EntityProperty["Country", "MeatProduction"] -> Missing["NotAvailable"],
        EntityProperty["Country", "MedianAge"] -> Quantity[39.597, "Years"], 
       EntityProperty["Country", "MedianHomeSalePrice"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "MedianHomeValue"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "MedianHouseholdIncome"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Memberships"] -> {
         EntityClass["Country", "Asia"], 
         EntityClass["Country", "AsianDevelopmentBank"], 
         EntityClass["Country", "AsiaPacific"], 
         EntityClass["Country", "AsiaPacificEconomicCooperation"], 
         EntityClass["Country", "AsiaWithoutMiddleEast"], 
         EntityClass["Country", "CentralAmericanBankForEconomicIntegration"], 
         
         EntityClass["Country", "ChinaExtended"], 
         EntityClass["Country", "Countries"], 
         EntityClass["Country", "DevelopingCountries"], 
         EntityClass["Country", "EastAsia"], 
         EntityClass["Country", "EasternHemisphere"], 
         EntityClass["Country", "Eurasia"], 
         EntityClass["Country", "InternationalChamberOfCommerce"], 
         EntityClass[
         "Country", "InternationalConfederationOfFreeTradeUnions"], 
         EntityClass[
         "Country", 
          "InternationalFederationOfRedCrossAndRedCrescentSocieties"], 
         EntityClass["Country", "InternationalOlympicCommittee"], 
         EntityClass["Country", "InternationalTradeUnionConfederation"], 
         EntityClass["Country", "LandMasses"], 
         EntityClass["Country", "NorthernHemisphere"], 
         EntityClass["Country", "PacificRim"], 
         EntityClass["Country", "Palaearctic"], 
         EntityClass["Country", "SovereignCountries"], 
         EntityClass["Country", "WorldTradeOrganization"]}, 
       EntityProperty["Country", "MerchantShips"] -> 350, 
       EntityProperty["Country", "MerchantShipsDeadWeight"] -> 
       Quantity[4.188292*^6, "MetricTons"], 
       EntityProperty["Country", "MerchantShipsGross"] -> 
       Quantity[2.542206*^6, "RegisterTons"], 
       EntityProperty["Country", "MerchantShipTypes"] -> {
        "BulkCarrier" -> 32, "Cargo" -> 19, "ChemicalTanker" -> 1, 
         "Container" -> 24, "PassengerCargo" -> 3, "PetroleumTanker" -> 14, 
         "RefrigeratedCargo" -> 7, "RollOnRollOff" -> 2}, 
       EntityProperty["Country", "MilitaryAgeFemales"] -> 
       Quantity[6.098599*^6, "People"], 
       EntityProperty["Country", "MilitaryAgeMales"] -> 
       Quantity[6.283134*^6, "People"], 
       EntityProperty["Country", "MilitaryAgePopulation"] -> 
       Quantity[1.2381733*^7, "People"], 
       EntityProperty["Country", "MilitaryAgeRate"] -> 
       Quantity[319861., "People"/"Years"], 
       EntityProperty["Country", "MilitaryExpenditureFraction"] -> 
       Quantity[2.2, "Percent"], 
       EntityProperty["Country", "MilitaryExpenditures"] -> 
       Quantity[1.01*^10, "USDollars"/"Years"], 
       EntityProperty["Country", "MilitaryFitFemales"] -> 
       Quantity[5.036346*^6, "People"], 
       EntityProperty["Country", "MilitaryFitMales"] -> 
       Quantity[5.112737*^6, "People"], 
       EntityProperty["Country", "MilitaryFitPopulation"] -> 
       Quantity[1.0149083*^7, "People"], 
       EntityProperty["Country", "MinimumWage"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "MiscellaneousValueAdded"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "MobileCellularSubscriptions"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "MonetaryBase"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "MonetaryServicesIndex"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "MoneyMultiplier"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "MoneySupply"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "MotorGasoline"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "MotorVehicleTheft"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "MotorVehicleTheftRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "MultifactorProductivity"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "MurderNonnegligentManslaughter"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "MurderNonnegligentManslaughterRate"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "MZMInterestRate"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Name"] -> "Taiwan",
        EntityProperty["Country", "NationalGendarmerie"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "NationalGuard"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "NationalIncome"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "NationalityName"] -> 
       "Taiwan", EntityProperty["Country", "NativeNames"] -> {"T'ai-wan"}, 
       EntityProperty["Country", "NaturalGasExports"] -> 
       Quantity[0., "Meters"^3/"Years"], 
       EntityProperty["Country", "NaturalGasImports"] -> 
       Quantity[2.214*^10, "Meters"^3/"Years"], 
       EntityProperty["Country", "NaturalGasReserves"] -> 
       Quantity[6.229*^9, "Meters"^3], 
       EntityProperty["Country", "NaturalGasSpotPrice"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "NaturalHazards"] -> {
         Entity["NaturalHazard", "Earthquake"], 
         Entity["NaturalHazard", "TropicalCyclone"]}, 
       EntityProperty["Country", "NaturalResources"] -> {
         Entity["NaturalResource", "Asbestos"], 
         Entity["NaturalResource", "Coal"], 
         Entity["NaturalResource", "NaturalGas"], 
         Entity["NaturalResource", "Stone"]}, 
       EntityProperty["Country", "NaturalResourcesRents"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Navy"] -> 
       Quantity[46500, "People"], 
       EntityProperty["Country", "NeonatesProtectedAgainstNeonatalTetanus"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "NetCurrentTransfersFromAbroad"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "NetIncomeFromAbroad"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "NetMigration"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "NewbornsWithLowBirthWeight"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "NewBusinessesRegistered"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "NewspaperCirculation"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "NewspaperTitles"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "NuclearWarheads"] -> 
       0, EntityProperty["Country", "NumberOfHomes"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "NumberOfMarineProtectedAreas"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "NumberOfTeachers"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "NumberOfTerrestrialProtectedAreas"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "NursingAndMidwiferyPersonnel"] -> 
       Missing["NotApplicable"], 
       EntityProperty[
        "Country", "NursingAndMidwiferyPersonnelPopulationRatio"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "OfficialLanguages"] -> {
         Entity["Language", "ChineseMandarin::279r4"]}, 
       EntityProperty["Country", "OilExports"] -> 
       Quantity[337181.85, "Barrels"/"Days"], 
       EntityProperty["Country", "OilImports"] -> 
       Quantity[315740.83, "Barrels"/"Days"], 
       EntityProperty["Country", "OilReserves"] -> 
       Quantity[2.38*^6, "Barrels"], 
       EntityProperty["Country", "OneYearOldsImmunizedWithDTP3"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "OneYearOldsImmunizedWithHepB3"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "OneYearOldsImmunizedWithHib3"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "OneYearOldsImmunizedWithMCV"] -> 
       Missing["NotApplicable"], EntityProperty["Country", "OtherArrivals"] -> 
       Quantity[1.037*^6, "People"/"Years"], 
       EntityProperty["Country", "OtherCheckableDeposits"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "OtherHealthServiceProviders"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "OtherManufacturingFraction"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Output"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "OutputPerHour"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "OvernightHotels"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "OvernightTermEurodollars"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "OvernightTermRPs"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PaperPaperboardProduction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PartTimeEmployment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PartTimeEmploymentFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PavedAirportLengths"] -> {
        "Total" -> 38, Interval[{10000, 
            DirectedInfinity[1]}] -> 8, Interval[{8000, 10000}] -> 8, 
         Interval[{5000, 8000}] -> 11, Interval[{3000, 5000}] -> 7, 
         Interval[{0, 3000}] -> 4}, 
       EntityProperty["Country", "PavedAirports"] -> 38, 
       EntityProperty["Country", "PavedRoadsFraction"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "PerCapitaIncome"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PersistenceToGrade5"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PersistenceToLastGradeOfPrimary"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PersonalConsumptionExpenditures"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "PersonalIncome"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "PersonalSaving"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PersonalSavingRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PetroleumCrudeOil"] -> 
       Quantity[4.452012074985902*^14, "Joules"/"Years"], 
       EntityProperty["Country", "PetroleumCrudeOilBarrels"] -> 
       Quantity[196., "BarrelsOfOil"/"Days"], 
       EntityProperty["Country", "PetroleumNGPL"] -> 
       Quantity[4.93461743062527*^13, "Joules"/"Years"], 
       EntityProperty["Country", "PetroleumNGPLBarrels"] -> 
       Quantity[30., "BarrelsOfOil"/"Days"], 
       EntityProperty["Country", "PetroleumTotal"] -> Missing["NotAvailable"],
        EntityProperty["Country", "PetroleumTotalBarrels"] -> 
       Quantity[21682.57, "BarrelsOfOil"/"Days"], 
       EntityProperty["Country", "PharmaceuticalPersonnel"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "PharmaceuticalPersonnelPopulationRatio"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Physicians"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "PhysiciansPopulationRatio"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "Pipelines"] -> {
        "natural gas" -> Quantity[406., "Kilometers"]}, 
       EntityProperty["Country", "PMICompositeIndex"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Polygon"] -> 
       Polygon[
         GeoPosition[CompressedData["
1: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
          "]]], 
       EntityProperty["Country", "Population"] -> 
       Quantity[23816775, "People"], 
       EntityProperty["Country", "PopulationByEducationalAttainment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PopulationByGeographicalMobility"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PopulationByLanguageSpokenAtHome"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PopulationByMaritalStatus"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PopulationByPovertyStatus"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PopulationBySchoolEnrollment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PopulationDensity"] -> 
       Quantity[671.388901440271, "Kilometers"^(-2) "People"], 
       EntityProperty["Country", "PopulationGrowth"] -> 
       Quantity[0.35772, "Percent"/"Years"], 
       EntityProperty["Country", "Position"] -> GeoPosition[{23.5, 121.}], 
       EntityProperty["Country", "PotentialGrossDomesticProduct"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "PovertyGap"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "PovertyHeadcount"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PPPConversionFactorGDP"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PPPConversionFactorPrivateConsumption"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PresidentialGuard"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "PriceIndex"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "PrimaryCredit"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PrivateCreditBureauCoverage"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PrivateDomesticInvestment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PrivateFixedInvestment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PrivateInventoriesChange"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "PrivateSaving"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ProducerPriceIndex"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ProgressionToSecondarySchool"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PropertyCrimeRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PropertyCrimeTotal"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "Country", "ProportionOfSeatsHeldByWomenInNationalParliaments"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PublicCreditRegistryCoverage"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PublicSpendingOnEducation"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PublicSpendingOnEducationFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PumpPriceForDieselFuel"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PumpPriceForGasoline"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Pupils"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "PupilsFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "PupilTeacherRatio"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "QualityOfPortInfrastructure"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "RadioReceivers"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "RadioStations"] -> 
       165, EntityProperty["Country", "RailArrivals"] -> 
       Missing["NotApplicable"], EntityProperty["Country", "RailLines"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RailwayGaugeLengths"] -> {
        "TotalKilometers" -> 1588., "StandardGaugeKilometers" -> 345., 
         "NarrowGaugeKilometers" -> 1093.}, 
       EntityProperty["Country", "RailwayGaugeRules"] -> {
        "StandardGauge" -> Quantity[1.435, "Meters"], "NarrowGauge" -> 
         Quantity[1.067, "Meters"]}, EntityProperty["Country", "Railways"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RatioOfFemaleToMale"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RatioOfYoungLiterateFemaleToMale"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RealEffectiveExchangeRateIndex"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "RealInterestRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RefineryProcessingGain"] -> 
       Quantity[19956.57, "BarrelsOfOil"/"Days"], 
       EntityProperty["Country", "RefineryTotal"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "RefugeePopulationAsylum"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RefugeePopulationOrigin"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RegionNames"] -> {
        "Fukien", "Kaohsiung", "New Taipei", "Taichung", "Tainan", "Taipei", 
         "Taiwan"}, 
       EntityProperty["Country", "ReligionsFractions"] -> {
        Entity["Religion", "ChineseUniversist"] -> 0.5069956961480525, 
         Entity["Religion", "Buddhist"] -> 0.20759031633311814`, 
         Entity["Religion", "Taoist"] -> 0.10108577576931353`, 
         Entity["Religion", "Christian"] -> 0.06594245749946202, 
         Entity["Religion", "Muslim"] -> 0.003874413600172154, 
         Entity["Religion", "Ethnoreligionist"] -> 0.0028320636970088227`, 
         Entity["Religion", "Bahai"] -> 0.0005571766731224445, 
         Entity["Religion", "Jewish"] -> 8.091241661286852*^-6}, 
       EntityProperty["Country", "RenewableInternalFreshwaterResources"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RentalIncomeOfPersons"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Repeaters"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "RequiredReserves"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ResearchDevelopmentScientists"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ReserveAdjustmentMagnitude"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "ReserveAirForce"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "ReserveArmy"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "ReserveBalances"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ReserveBankCredit"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ReserveMarineCorps"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "ReserveNavy"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Reserves"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "RetailMoneyFunds"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "RetailSales"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RiskPremiumOnLending"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RoadAccidentsInjuryAccidents"] -> 
       Quantity[160897., "Years"^(-1) IndependentUnit["accidents"]], 
       EntityProperty[
        "Country", 
         "RoadAccidentsInjuryAccidentsPerHundredMillionVehicleKilometers"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "Country", "RoadAccidentsInjuryAccidentsPerHundredThousandPeople"] -> 
       Quantity[
        0.007022606811523438, ("People"^(-1)/"Years") 
         IndependentUnit["accidents"]], 
       EntityProperty["Country", "RoadAccidentsPeopleInjured"] -> 
       Quantity[211176., "Years"^(-1) IndependentUnit["injuries"]], 
       EntityProperty[
        "Country", 
         "RoadAccidentsPeopleInjuredPerHundredMillionVehicleKilometers"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "Country", "RoadAccidentsPeopleInjuredPerHundredThousandPeople"] -> 
       Quantity[
        0.00927415230565072, ("People"^(-1)/"Years") 
         IndependentUnit["injuries"]], 
       EntityProperty["Country", "RoadAccidentsPeopleKilled"] -> 
       Quantity[3140., "Years"^(-1) IndependentUnit["deaths"]], 
       EntityProperty[
        "Country", 
         "RoadAccidentsPeopleKilledPerHundredMillionVehicleKilometers"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "Country", "RoadAccidentsPeopleKilledPerHundredThousandPeople"] -> 
       Quantity[
        0.00013705032348632814`, ("People"^(-1)/"Years") 
         IndependentUnit["deaths"]], 
       EntityProperty["Country", "RoadArrivals"] -> Missing["NotApplicable"], 
       EntityProperty["Country", "RoadNetworkHighwaysDensity"] -> 
       Quantity[0.14615623062616243`, 
         Divide["Kilometers", "Kilometers"^2]], 
       EntityProperty["Country", "RoadNetworkHighwaysLength"] -> 
       Quantity[4715., "Kilometers"], 
       EntityProperty["Country", "RoadNetworkMotorwaysDensity"] -> 
       Quantity[0.029572225666460013`, 
         Divide["Kilometers", "Kilometers"^2]], 
       EntityProperty["Country", "RoadNetworkMotorwaysLength"] -> 
       Quantity[954., "Kilometers"], 
       EntityProperty["Country", "RoadNetworkOthersDensity"] -> 
       Quantity[0.9340049597024178, 
         Divide["Kilometers", "Kilometers"^2]], 
       EntityProperty["Country", "RoadNetworkOthersLength"] -> 
       Quantity[30131., "Kilometers"], 
       EntityProperty["Country", "RoadNetworkRoadDensity"] -> 
       Quantity[1.2177929324240546`, 
         Divide["Kilometers", "Kilometers"^2]], 
       EntityProperty["Country", "RoadNetworkSecondaryRoadsDensity"] -> 
       Quantity[0.10805951642901426`, 
         Divide["Kilometers", "Kilometers"^2]], 
       EntityProperty["Country", "RoadNetworkSecondaryRoadsLength"] -> 
       Quantity[3486., "Kilometers"], 
       EntityProperty["Country", "RoadNetworkTotalLength"] -> 
       Quantity[39286., "Kilometers"], EntityProperty["Country", "Roads"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RoadSectorDieselFuelConsumption"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RoadSectorEnergyConsumption"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RoadSectorEnergyConsumptionFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RoadSectorGasolineFuelConsumption"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "RoadTrafficBuses"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RoadTrafficMotorcycles"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RoadTrafficPassengerCars"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "RoadTrafficTotal"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RoadTrafficTrucksAndVans"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Robbery"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "RobberyRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "RoundwoodProduction"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Saving"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "SavingsDeposits"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "SavingsSmallTimeDeposits"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "SawnwoodProduction"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "SchematicPolygon"] -> 
       Polygon[
         GeoPosition[CompressedData["
1:eJwBxQE6/iFib1JlAwAAAAEAAAAbAAAAAgAAAKEa5U8KLTlALN4j9mRtXkC7
vJQVHiE5QLOrNTkhe15AJtLscCoIOUDxGNRtv3teQPo1SHfGAzlA8HfefFmA
XkBU718P3Nc4QE6AYfnzdF5AQtNt5BV7OEAirvd2JndeQH0nwXaLFThAbfZR
V4hnXkD8cJAQ5QE4QFedMLxtaV5AAGNs1zofN0DN2IZAZFpeQK71RUJbjjZA
P4QCAJE+XkDIDoUqkFQ2QD+TWK0nOV5AdaCYBo/mNUDYJyWpcTdeQCh5GtWO
9TVA2O7D5ggxXkCeWbfmM+s1QM+v9yyZLl5AQS7MnfRNNkAm4NdIEileQOo7
ZG/OizZAQL2+e+wTXkDUt8zpsvo2QO4aPjNSC15A6gQ0ETYON0DEIoYdRgJe
QIvZN5yeZDdAby2T4XgKXkC+sEaH0YM3QMcil0meB15AXKs97IXON0DPMotQ
7ApeQFvBJbZx1DdAjzaOWIsRXkBqvHSTGEw4QO9yEd+JH15AK8e/KnK/OEB7
w9idyTleQGtdD8sLCTlA/aIE/QVDXkAw8IHCRSU5QAd3DDTEWF5A7fTec7tM
OUC4rpgRXmJeQCmfuUk=
          "]]], 
       EntityProperty["Country", "SchoolEnrollmentFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "SeasonalBorrowings"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "SectorLaborFractions"] -> {
        "Agriculture" -> 0.051, "Industry" -> 0.368, "Services" -> 0.581}, 
       EntityProperty["Country", "SecureInternetServers"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "SecuritiesLentToDealers"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "SelfEmployed"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "SelfEmployedFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ServiceRelatedDeposits"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Shape"] -> 
       Graphics[{
          RGBColor[0.896, 0.8878, 0.8548], 
          EdgeForm[
           GrayLevel[0]], 
          Polygon[CompressedData["
1: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
XPR4rWCX1sBAykTya32BPCxeXfOMpeuF3MiUkNeSefjBtOPtj/1eqFS+ypyj
nodGlnPynwp6o5KBpdYhrTw8+1V5Qf1Zb6TsXfBCekUezua22NELvJE1aRsj
QMlDls/eeD45JjKW1bw3IPV9zLa5Fj/hjXSa+JIomVw0K33+/S6TSZ7v0eZH
gzl4PSAxpFXWB3k2BwJ7GnPwc0F5Tt4zH2Rdpyoyj+Rg6TkHmbPFPli/ufqE
0VbyvHUq2J1zfXBA2fbtPJEcDOV/9++xmg9SPaRnUn5kY9ngRO9FIR/sMDJi
jD/LxgEhhYATAUzUtFh6oLYpG9U/Fs7TYzCRdi5MK4KbjbECi10+dDCRVxM9
d59xNt5bvkuopp3Ut/hf21zZbHQT8J/j8tgbxz++fN39KQtn3gTGb1ch/tob
lw3Ss5CzZmxnbykTlXSDdJb7ZaFu54XaS0Wkfgvvw3Mss3Btg77HlkkmdoTI
Wx07mIXhcxL9rnYxkWvSsNpdJgsXBt6h4UEf5BrXJc09l4lLme2Z0R8IJzq1
hRpm4mjGac+IJ6QeHQ1JlaWZ2N+8e5N+zWlyfoLKXuZloFHhfLbsNj+knz93
ZbFmBnIneC+1Rfxw4Hzr/QdzM9BjeKG8/i0/LD1kqldpk07mVll16i9/Ms8o
nbO1aZg9c/iD2YpAZFXs8rcwTMOO4w8trL8GIG/v1W3jemmoofOo5AoGYqnW
/FcHl6XhopLHB+MWhWO9Dwouf5yCIdFpRlZh4dhxwSJxEycFFxsaQbtzOI5f
sM5q9EzBCC3911JZxD+m/8nwTAo+k9TWWqkfjsa/Cza/PZ6CAiU2zgFHw1Fz
yeOivYdTULR77UBOOuGSgMgbRil4w7bnSPDFcKSOuWk4OKdgxupFN5nRJJ/3
xbIiixRcOvvQeyw4HOnW6+re2aRgkVjefvGicCxNGWWPk/jTwl/fDL4n+qvh
pcI6Kailul16s08EOf+fBhT1UvDYlYhGqc8RyDjm88x/WwoO1Ufu2ywVhR00
+ZxXlcmYpn3HsNQtCqlUE5sTZcloOmzyYs1kFA5ojmiJ+ySjpYT+9z1DhEVd
H+OxZPSdajN24Gdjqe2Zc7LmyWjntCJj41o2cp+PTBXRk1HAs//SOmAjQ3rL
Z5pxMrLjyxYniLGRrrltI08zGbdtO7RB9AAbBy7HRVcaEb3Ywu9ELRs7VkV+
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
           "]]}, 
         ImageSize -> {{69.66320733733289}, {82.41391166977503}}], 
       EntityProperty["Country", "ShareOfWomenEmployed"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ShortWaveRadioStations"] -> 1, 
       EntityProperty["Country", "SignedEnvironmentalAgreements"] -> {}, 
       EntityProperty["Country", "SpotOilPrice"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "StartingAge"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "StartUpProceduresToRegisterABusiness"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "StatisticalDiscrepancy"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "StrengthOfLegalRightsIndex"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Submarines"] -> 4, 
       EntityProperty["Country", "SuffrageType"] -> 
       "20 years of age; universal", 
       EntityProperty["Country", "TargetFederalFundsRate"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "TaxPayments"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "TelephoneLines"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TelevisionReceivers"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TelevisionStations"] -> 76, 
       EntityProperty["Country", "TermsOfTradeAdjustment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TerrainTypes"] -> {
         Entity["TerrainType", "Hills"], 
         Entity["TerrainType", "Mountains"], 
         Entity["TerrainType", "Plains"], 
         Entity["TerrainType", "RollingPlains"], 
         Entity["TerrainType", "Volcanoes"]}, 
       EntityProperty["Country", "TerrestrialProtectedAreas"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TextilesAndClothingFraction"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "TimeDeposits"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TimeRequiredToBuildAWarehouse"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TimeRequiredToEnforceAContract"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TimeRequiredToObtainAnOperatingLicense"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TimeRequiredToRegisterProperty"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TimeRequiredToStartABusiness"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TimeSavingsDeposits"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TimeToPrepareAndPayTaxes"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TimeToResolveInsolvency"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "TimeZones"] -> {
         Entity["TimeZone", "Asia/Taipei"]}, 
       EntityProperty["Country", "TobaccoUseAdolescents"] -> 
       Missing["NotApplicable"], 
       EntityProperty["Country", "TobaccoUseAdults"] -> 
       Missing["NotApplicable"], EntityProperty["Country", "TotalArrivals"] -> 
       Quantity[3.716*^6, "People"/"Years"], 
       EntityProperty["Country", "TotalBorrowings"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TotalBusinessesRegistered"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TotalBusinessInventory"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TotalBusinessTaxRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TotalFertilityRate"] -> 
       Quantity[1.14, IndependentUnit["children"]/IndependentUnit["females"]],
        EntityProperty["Country", "Trade"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "TradeBalance"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "TradeDeficit"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "TradeValueAdded"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TradeWeightedExchangeIndex"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TransportationValueAdded"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TravelersChecksOutstanding"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Treasury"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TreasuryAverageYield"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "TreasuryDeposits"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "TreasurySecuritiesCompositeRate"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "UNCode"] -> "TWN", 
       EntityProperty["Country", "Unemployment"] -> Missing["NotAvailable"], 
       EntityProperty["Country", "UnemploymentAverageDuration"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "UnemploymentMedianDuration"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "UnemploymentRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "UnilateralCurrentTransfers"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "UnitLaborCost"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "UnitNonlaborCost"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "UNNumber"] -> 158, 
       EntityProperty["Country", "UnpavedAirportLengths"] -> {
        "Total" -> 4, Interval[{10000, 
            DirectedInfinity[1]}] -> 0, Interval[{8000, 10000}] -> 0, 
         Interval[{5000, 8000}] -> 2, Interval[{3000, 5000}] -> 0, 
         Interval[{0, 3000}] -> 2}, 
       EntityProperty["Country", "UnpavedAirports"] -> 4, 
       EntityProperty["Country", "UnpavedRoadLength"] -> 
       Quantity[2091., "Kilometers"], 
       EntityProperty["Country", "UnweightedSampleHousingUnits"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "UnweightedSamplePopulation"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Uranium"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "USOwnedAssetsAbroad"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "ValueAdded"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ValueLostDueToElectricalOutages"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "VaultCash"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "VehicleSales"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "VehiclesInUseBuses"] -> Quantity[119940., 
         IndependentUnit["buses"]], 
       EntityProperty["Country", "VehiclesInUseBusesPerKilometersOfRoads"] -> 
       Quantity[
        3.0529959782110674`, "Kilometers"^(-1) IndependentUnit["vehicles"]], 
       EntityProperty["Country", "VehiclesInUseBusesPerThousandPeople"] -> 
       Quantity[
        0.0052673685813716875`, "People"^(-1) IndependentUnit["vehicles"]], 
       EntityProperty["Country", "VehiclesInUseMotorcycles"] -> 
       Quantity[1.3557028*^7, 
         IndependentUnit["motorcycles"]], 
       EntityProperty[
        "Country", "VehiclesInUseMotorcyclesPerKilometersOfRoads"] -> 
       Quantity[
        345.08547574199457`, "Kilometers"^(-1) IndependentUnit["vehicles"]], 
       EntityProperty["Country", "VehiclesInUseMotorcyclesPerThousandPeople"] -> 
       Quantity[0.595379884475373, "People"^(-1) IndependentUnit["vehicles"]],
        EntityProperty["Country", "VehiclesInUsePassengerCars"] -> 
       Quantity[5.698324*^6, 
         IndependentUnit["cars"]], 
       EntityProperty[
        "Country", "VehiclesInUsePassengerCarsPerKilometersOfRoads"] -> 
       Quantity[
        145.0471923840554, "Kilometers"^(-1) IndependentUnit["vehicles"]], 
       EntityProperty[
        "Country", "VehiclesInUsePassengerCarsPerThousandPeople"] -> 
       Quantity[
        0.24732308959960939`, "People"^(-1) IndependentUnit["vehicles"]], 
       EntityProperty["Country", "VehiclesInUseTotal"] -> 
       Quantity[2.0399615*^7, 
         IndependentUnit["vehicles"]], 
       EntityProperty["Country", "VehiclesInUseTotalPerKilometersOfRoads"] -> 
       Quantity[174., "Kilometers"^(-1) IndependentUnit["vehicles"]], 
       EntityProperty["Country", "VehiclesInUseTotalPerThousandPeople"] -> 
       Quantity[
        0.2969872741699219, "People"^(-1) IndependentUnit["vehicles"]], 
       EntityProperty["Country", "VehiclesInUseTrucksAndVans"] -> 
       Quantity[1.024323*^6, 
         IndependentUnit["vehicles"]], 
       EntityProperty[
        "Country", "VehiclesInUseTrucksAndVansPerKilometersOfRoads"] -> 
       Quantity[
        26.073486738278266`, "Kilometers"^(-1) IndependentUnit["vehicles"]], 
       EntityProperty[
        "Country", "VehiclesInUseTrucksAndVansPerThousandPeople"] -> 
       Quantity[
        0.04498488233597125, "People"^(-1) IndependentUnit["vehicles"]], 
       EntityProperty["Country", "ViolentCrimeRate"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "ViolentCrimeTotal"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "VulnerableEmployment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "VulnerableEmploymentFraction"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "WageAndSalariedWorkers"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Country", "WageAndSalariedWorkersFraction"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "WagesCostIndex"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "WaterArea"] -> 
       Quantity[3720., "Kilometers"^2], 
       EntityProperty["Country", "WaterArrivals"] -> 
       Quantity[92000., "People"/"Years"], 
       EntityProperty["Country", "WaterProductivity"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "WaterwayLength"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "Workforce"] -> 
       Missing["NotAvailable"], EntityProperty["Country", "WPI"] -> 
       Missing["NotAvailable"]], "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 751], "Meta" -> 
     Association["ID" -> 276261128488374], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 751], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 751, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 490, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"number of owner\[Hyphen]occupied housing units\"", 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "NumberOfHomes"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "NumberOfHomes"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"number of marine protected areas\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "NumberOfMarineProtectedAreas"]]},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "NumberOfMarineProtectedAreas"]]},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"teachers\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "NumberOfTeachers"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "NumberOfTeachers"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"number of terrestrial protected areas\"", FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty[
                  "Country", "NumberOfTerrestrialProtectedAreas"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty[
                  "Country", "NumberOfTerrestrialProtectedAreas"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"nursing and midwifery personnel\"", FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "NursingAndMidwiferyPersonnel"]]},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "NursingAndMidwiferyPersonnel"]]},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"nursing and midwifery personnel per capita\"", FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty[
                  "Country", "NursingAndMidwiferyPersonnelPopulationRatio"]]},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty[
                  "Country", "NursingAndMidwiferyPersonnelPopulationRatio"]]},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"official languages\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OfficialLanguages"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Language", "ChineseMandarin::279r4"]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    Entity["Language", "ChineseMandarin::279r4"]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  "08ba291f-63ad-48b4-b810-ed2fb2e024f5"]][{
                   Key[
                    EntityProperty["Country", "OfficialLanguages"]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OfficialLanguages"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"oil exports\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OilExports"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"337181.85`", 
                   
                   RowBox[{
                    "\"US barrels\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"day\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OilExports"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"oil imports\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OilImports"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"315740.83`", 
                   
                   RowBox[{
                    "\"US barrels\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"day\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OilImports"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"oil reserves\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OilReserves"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.38`*^6", "\"US barrels\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OilReserves"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"DTP immunization\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OneYearOldsImmunizedWithDTP3"]]},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OneYearOldsImmunizedWithDTP3"]]},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"hepatitis B immunization\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty[
                  "Country", "OneYearOldsImmunizedWithHepB3"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty[
                  "Country", "OneYearOldsImmunizedWithHepB3"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Hib immunization\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OneYearOldsImmunizedWithHib3"]]},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OneYearOldsImmunizedWithHib3"]]},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"MCV immunization\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OneYearOldsImmunizedWithMCV"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OneYearOldsImmunizedWithMCV"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"other arrivals\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OtherArrivals"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.037`*^6", 
                   
                   RowBox[{
                    "\"people\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"yr\""}]}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OtherArrivals"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"other checkable deposits\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OtherCheckableDeposits"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OtherCheckableDeposits"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"other health service providers\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OtherHealthServiceProviders"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OtherHealthServiceProviders"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"other manufacturing fraction of manufacturing value \
added\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OtherManufacturingFraction"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OtherManufacturingFraction"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"economic output\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "Output"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "Output"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"output per hour\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OutputPerHour"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][{
                 Key[
                  EntityProperty["Country", "OutputPerHour"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 751, 1], {1, 751 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "08ba291f-63ad-48b4-b810-ed2fb2e024f5"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 751, 1], {1, 751 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "08ba291f-63ad-48b4-b810-ed2fb2e024f5"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 490, "\[Dash]", 509, " of ", 
                    Style[
                    751, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 490, "\[Dash]", 509, " of ", 
                    Style[
                    751, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "08ba291f-63ad-48b4-b810-ed2fb2e024f5"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "08ba291f-63ad-48b4-b810-ed2fb2e024f5"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "08ba291f-63ad-48b4-b810-ed2fb2e024f5"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "08ba291f-63ad-48b4-b810-ed2fb2e024f5"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "08ba291f-63ad-48b4-b810-ed2fb2e024f5"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 751, 1], {1, 751 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "08ba291f-63ad-48b4-b810-ed2fb2e024f5"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 751, 1], {1, 751 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "08ba291f-63ad-48b4-b810-ed2fb2e024f5"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "08ba291f-63ad-48b4-b810-ed2fb2e024f5", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "08ba291f-63ad-48b4-b810-ed2fb2e024f5"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "08ba291f-63ad-48b4-b810-ed2fb2e024f5"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "08ba291f-63ad-48b4-b810-ed2fb2e024f5"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{491., {281.6875, 287.3125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{491., {281.6875, 287.3125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.839591061875862*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"a7156761-7037-4a20-97b7-3d1dad2b7bc7"]
}, Open  ]],

Cell["\<\
Ker se iz takega prikaza ne da ni\[CHacek] razbrati si podatke poglejmo na \
druga\[CHacek]en na\[CHacek]in.\
\>", "Text",
 CellChangeTimes->{{3.839492755788022*^9, 
  3.83949277538419*^9}},ExpressionUUID->"948a31ac-6bcc-40ee-abea-\
7219aef34608"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"CountryData", "[", "\"\<Properties\>\"", "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{
  3.8394927827840557`*^9, {3.839591111282618*^9, 3.839591111292266*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"eb439144-d325-4599-90e2-7ec139fc2834"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Check", "[", 
         RowBox[{
          RowBox[{"CountryData", "[", 
           RowBox[{"\"\<Taiwan\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "All"}], "}"}]}], "]"}], ",", 
          RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "p"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lt", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"l", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "=!=", 
       RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}], "&"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Length", "@", "lt", " ", 
  RowBox[{"(*", "25", "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.839492789961259*^9, {3.8395911391483593`*^9, 3.839591139156823*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"23fcbe5e-a9bd-40a6-9a79-eb5b5d3b6be1"],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{
  3.839591140496312*^9, {3.839659449341302*^9, 3.839659452168056*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"37118464-28e5-44c4-9191-439c8125fb28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "@", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Check", "[", 
     RowBox[{
      RowBox[{"DateListPlot", "[", 
       RowBox[{
        RowBox[{"lt", "[", 
         RowBox[{"[", 
          RowBox[{"x", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"lt", "[", 
          RowBox[{"[", 
           RowBox[{"x", ",", "1"}], "]"}], "]"}]}]}], "]"}], ",", 
      "\"\<OPPS\>\""}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", 
      RowBox[{"Length", "@", "lt"}], ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.8394927950772963`*^9, {3.83959114385429*^9, 3.839591143862657*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"6ecad1b6-6aa1-4804-9978-e32f5048685f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 18, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 1, 25, 1}}, Typeset`size$$ = {
    360., {112., 116.27538323050908`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Check[
        DateListPlot[
         Part[$CellContext`lt, $CellContext`x$$, 2], PlotLabel -> 
         Part[$CellContext`lt, $CellContext`x$$, 1]], "OPPS"], 
      "Specifications" :> {{$CellContext`x$$, 1, 25, 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{406., {147.1875, 152.8125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.839591145516982*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"c11c6e51-7879-4b9c-87fb-0671ad7d4813"]
}, Open  ]],

Cell["\<\
Kot vidimo na Wolframu ni veliko podatkov o Taiwanu. Znano je, da na ceno \
\[CHacek]ipov zelo negativno vpliva su\[SHacek]a. Poglejmo si graf padavin \
Taiwana.\
\>", "Text",
 CellChangeTimes->{{3.8394928036263037`*^9, 
  3.8394928756652822`*^9}},ExpressionUUID->"a213646e-a266-461a-9b63-\
714feb2342b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"WeatherData", "[", 
    RowBox[{"\"\<Taiwan\>\"", ",", "\"\<TotalPrecipitation\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2010", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2021", ",", "12", ",", "31"}], "}"}], ",", "\"\<Month\>\""}],
       "}"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.839492881868641*^9, {3.839591150858329*^9, 3.839591150870864*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"05048bff-3181-4543-965f-53f485357742"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1kktIG1EUhkdBRKkaaLrwFRNBVBplihIMKJ2jVZFSiUI3rVSRvqTgA/HV
UhAhZCOoKEJ1E1BBurDRblLQEtJlLQiFiiASpQhzsolaKxTR5j/eORCGL/fe
c/77zbi6+9pfpGqa5k7+8EyWfrFvUpE/3hZ2pBv44/aRSbtL/XWZuyVgI3Rs
0lT0vKxj6up+km3bcZPWmg/f2isrsR7aSpiUKQcqwON75ya1hx3++HoL2Pn9
n0kyKdIEThxfKzaqwJHUNFbrBO76k8H0zo4Jy5in23KYlhFn6RK8k2JnlS8F
+4OFuazmZ4H7vQ6mhQ8oWQ/9KmaSdnZN8p2WWnyAfs7fbqYBtE+4JN/1Paa/
ydtGh+6Cp088TFWoz7WSL6tW9d+rAevlxNQBQftyfieviW/8rJ2hf9DzkEn0
prnFZ5mPqVwO3ALbHjzmG19td8CxzifWeh7YV9rJVCcXzBafDc+ZXkp5xV91
DxOmNR9Kvmlfr9q/JazXD6q8uR55v89GVd7NBsk79t7ymSH+3kwwSZzwV+Q3
AgGVZ1V8xEYnLX8F4nduhunHNiqB/eOhecv/F3Dk0SLTN3w+0XzJ1xNUeV2S
X3+6ovzOyvvXRj4qX37ZH3z9SflsJcMZ+Nm4ucH0CtcfbjX+A98eBY0=
       "]], 
      LineBox[{{3.5848428530973454`*^9, 60.925000000000004`}, {3.5869824*^9, 
       4.96}, {3.5895744*^9, 0.25}, {3.5923392*^9, 2.15}, {3.5948448*^9, 
       6.71}, {3.5975232*^9, 0.15}, {3.6002016*^9, 4.55}, {3.6026208*^9, 
       6.17}, {3.6052992*^9, 0.85}, {3.6078912*^9, 60.52}, {3.6105696*^9, 
       17.25}, {3.6131616*^9, 15.38}, {3.61584*^9, 33.21}, {3.6185184*^9, 
       4.98}}], 
      LineBox[{{3.6237888*^9, 0.}, {3.6263808*^9, 2.88}, {3.6290592*^9, 
       1.67}, {3.6317376*^9, 2.09}, {3.6341568*^9, 2.23}, {3.6368352*^9, 
       4.64}, {3.6391822193050194`*^9, 60.925000000000004`}}], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQve+OwF11udeO6WlAUObnABR6cFjpteMOudbXgTuk
QPyGreqvHd8EgkTA/ICLOq8dQbJyRx1BfIW3hlD1FcYg/oF7Zq8dq0XWuT+s
+mIP5E/4Zf3asdCW6/rigrMgvsEbh9eOmjH9h75qCILUM3C4vXYEKw8xA/P9
vF87AhUDdbwGqXd47f/acdZMIJDUAMkLsIe+djz8VQNoghGIv+FHJFT/FCWw
e0XiXzuCjZ9jAnYfWwrM/Xog/gfFzNeOS0DGP4a41zbvtePZM0DgowniJ+gX
v3ZkAAMWEN/AuwLmHn4Q/4JNLcz9b0DuWxDR9NrRGAwug/gFJe2vHbnAGhjB
7hPsee34DeTcr3xg9+lOhOmXB7tPfho0PFm1HBj3if8KnomIDwCy0Zxn
       "]], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQ7ZL3km/63NeO6WlAUObnABSaoLPgtePZMyBgC+In
eCx97Vgtss79YZUMiG+QsgomzwDiXwhd/9pRM6b/0FcNaRB/QeEWFHmH5J2v
HeVbXwfukHtqD+QL1O977QgyTWSdJEj+wazDrx3fAGVbX7OC+AoWJ2B8fhD/
Q/DZ144MYMADdp/rJRhfDuy+xOtQ+zMsQHyG4DuvHQ9/1YjpZ3IGuy/v4WvH
JQW2XNeVXcDu63oGs/87yD0ONa9fO86aCQIvwe6b8QGq/9BHEH9D51eY/EkQ
v2Hpr9eOhUDjFhd8BfEDDv5/7ZgGBkxg98WxvIHIGxiC3VfF+QZinpMG2H05
fG8g9uu5gt3XLvwGEr5W7iB+QaXEG0dwcIsYOfDr3H87WeYNPH4Ad9irIQ==

       "]], 
      LineBox[{{3.7740896354822073`*^9, 60.925000000000004`}, {3.7762848*^9, 
       13.25}, {3.7788768*^9, 1.45}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQQKGwzfOHo8rBJZ5y7oAOR/OG32xpEBAQ48t0bh
G6x3QOEznHaF8R/Yg0hB7zeO/Ye+asT0a4DMK7jhj6Je4FTIG0eu64sLbLk+
g9Q/eBoJ418H8Tcwxr9xbH0duEOu9TGIH/A5GUW/An/mG8c3IOnXB0HyBxjy
YPYJg+ybIFP8xnHWTBDYCZJPsKiA8U+C+Auu1qCYV/CxEdV9j9veOB4GGcdk
DjLvwb9uaPi0G4L4DR8mwNz7G+w+nmlvHOVBDt7n4AAAmjlqKg==
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.4712928*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.4081344*^9, 
        FormBox[
         StyleBox["\"2008\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         StyleBox["\"2010\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4397568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4397568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.4712928*^9, 3.8367648*^9}, {0, 60.925000000000004`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.839591163929014*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"25b91153-be0b-4c11-80fa-a86d94ad2c74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FinancialData", "[", 
      RowBox[{
       TemplateBox[{"\"NVIDIA\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Financial\"", ",", "\"NASDAQ:NVDA\""}], "]"}], 
         "\"Entity[\\\"Financial\\\", \\\"NASDAQ:NVDA\\\"]\"", 
         "\"financial entity\""},
        "Entity"], ",", "\"\<Jan. 1, 2015\>\""}], "]"}], ",", " ", 
     RowBox[{"WeatherData", "[", 
      RowBox[{"\"\<Taiwan\>\"", ",", "\"\<TotalPrecipitation\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2021", ",", "12", ",", "31"}], "}"}], ",", 
         "\"\<Month\>\""}], "}"}]}], "]"}]}], " ", "}"}], ",", " ", 
   RowBox[{"PlotLegends", " ", "\[Rule]", "  ", 
    RowBox[{"{", 
     RowBox[{"\"\<Nvidia\>\"", ",", " ", "\"\<Padavine\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "Automatic"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.839492896924101*^9, {3.839591170026814*^9, 3.839591171913486*^9}, {
   3.839596617925663*^9, 3.839596620598566*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"1a38332b-44ad-46bf-8d19-c4ddcc400a06"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
fjec
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVkn0s1HEcx0/pkLLTRZeSO2vRhhDKlXWfWVZTHtO0JVy0rsRZMqWW9GD0
dFp5OFu7yVNqpXTyEJ2siB4kK1q1oxbn82PHySHS7/v1V7/tt99ee39+38/7
+3l/RNKksPgFHA5HzL7kyz6KPguEnctMBUtl2m0sx8xaIXiZxAt68wYIq5R8
hIXrb4vn7uoIy2sECK9WNZS5X5skzKuwRwhpKJRcfseTsKxtcUTg+8/kvJb+
JXqG2gmhZsxGv+cc5ZAPLgiWAWU31IolpF447IGQHzslB40ZYc13H4RT1dUJ
qwvfk3rF9BaEVMbD0H7e+Jxld0aCMOLtG2rYZSQ6xzwA4WjtH+lYjzn5nxMU
iCCvkP7c+7GZ1EswmNVPZDQodQuJzjOLQAh/kQ6uKbRf1eQ+hHG57Nm3bhPC
GcujEeKHnKHdi54n5MYheF7paBsbWERYL5IhVMYl6idw3q9fIsI9s2++DrtN
CcdsOI6QptXqJWHDxJ97YBpC/V+usX7lBOHOrWcQmlJnFvfs1xB/qshMBFF5
40yav4GwPCULoYr/qXad5yCpr7K+gtCX/cBzpOw3nadrLkKw2rl7UwKH+nPI
Q0gQ6YLzL9H+enERQu+P6KnYSWvCChcVsqMF03EnS+pvRynCEbf9I9aH56i/
uEqExEM6qaGR5t0Z8ZDt5z3W/7CU5qVKfvKfLjlYhzBqW237Lv8L8cs724Rg
pwv1cdXMEl2rbEGw6ZhNLxDqCQs3t7HzTOIHLFhL768Pf4sQ46d2C7Ucp/lu
70K4U3ft5MU19D4xsZ8RtC/xWOR1C5pn+FeEN222JV/slhLuTOxDKJH6pq7O
pazK+YUQ1C17vGlFL/V3GhGESmWr8fob6q9AjzDR//HC3qf1dJ7ZvxE2Xh02
gmaK6Bml0whR3sKIlQ1ddD+b5xBk6cnmHuVD1N8BUwb2iItG3Zq51N8pCwYM
isppJyPdJ06CFQNHZPF88eS8vyw+A8VLom4mqa0Iy08KGEjPm9iicKb7Irll
zwBHWCDg8mk+vEeODFQ7lA5y79P8qoqdGDja3Zn5uPXztn9EQnfq
         "]], 
        LineBox[{{3.794688*^9, -0.6931471805599453}, {3.7974528*^9, 
         2.5079719227189963`}}], 
        LineBox[{{3.8025504*^9, 0.17395330712343798`}, {
         3.8052288*^9, -1.0216512475319814`}, {
         3.8079072*^9, -0.4942963218147801}}], 
        LineBox[{{3.8131776*^9, -1.9661128563728327`}, {3.8157696*^9, 
         1.5871923034867805`}, {3.818448*^9, -2.3025850929940455`}, {
         3.8211264*^9, -1.6094379124341003`}}], 
        LineBox[{{3.828816*^9, 3.1359289040472746`}, {3.8314944*^9, 
         2.863913698933143}, {3.8340864*^9, 0.5247285289349821}, {
         3.8367648*^9, 3.5112468868061133`}}]}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     GridLines -> {None, None}, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6290592*^9, -2.9072671914884176`}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6290592*^9, 3.8394432*^9}, {-2.9072671914884176`, 
      5.424421264865327}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, 
       Charting`ScaledTicks[{Log, Exp}]}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Nvidia\"", "\"Padavine\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.839591177866761*^9, 3.83959662670791*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"fb50bdb7-faa9-462e-a0a9-9d237f59ef55"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Aplikacija v oblaku", "Section",
 CellChangeTimes->{{3.839412406964354*^9, 
  3.839412414341261*^9}},ExpressionUUID->"2e5ad4fe-1f1f-4cd7-932e-\
edb786e276a2"],

Cell["\<\
Aplikacija bo primerjala grafe vne\[SHacek]ene delnice z Nvidijino delnico. \
\>", "Text",
 CellChangeTimes->{{3.839645568578785*^9, 
  3.839645591537471*^9}},ExpressionUUID->"0ef7a91b-2502-49a8-a5f3-\
3a95d1611d28"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MakeGraph", "[", "stock_", "]"}], ":=", 
   RowBox[{"Show", "[", 
    RowBox[{"DateListLogPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FinancialData", "[", 
         RowBox[{
          RowBox[{"Entity", "[", 
           RowBox[{"\"\<Financial\>\"", ",", "\"\<NASDAQ:NVDA\>\""}], "]"}], 
          ",", "\"\<Jan. 1, 2018\>\""}], "]"}], ",", 
        RowBox[{"FinancialData", "[", 
         RowBox[{"stock", ",", "\"\<Jan. 1, 2018\>\""}], "]"}]}], "}"}], ",", 
      
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Nvidia\>\"", ",", 
         RowBox[{"EntityValue", "[", 
          RowBox[{"stock", ",", "\"\<Name\>\""}], "]"}]}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "700"}], "}"}]}]}], "]"}], "]"}]}], "\n"}]], "Input",\

 CellChangeTimes->{{3.8290533986550083`*^9, 3.8290534103639116`*^9}, {
   3.829053879342289*^9, 3.8290538804455757`*^9}, {3.829055398055017*^9, 
   3.829055429534872*^9}, 3.8290554647280936`*^9, 3.829055514552232*^9, 
   3.829055644815674*^9, {3.829055701000588*^9, 3.8290557059364495`*^9}, {
   3.8291190935651517`*^9, 3.8291191059497185`*^9}, {3.829119649478363*^9, 
   3.8291196504772687`*^9}, {3.829122061472389*^9, 3.829122083967476*^9}, {
   3.8291221807534747`*^9, 3.829122183928318*^9}, {3.839411154481365*^9, 
   3.8394111595815477`*^9}, 3.8394112738124723`*^9, 3.839411362597547*^9, {
   3.8394115798449583`*^9, 3.8394115977218637`*^9}, {3.839411716789618*^9, 
   3.839411740591852*^9}, {3.839411790555139*^9, 3.8394117910381603`*^9}, {
   3.839412032263979*^9, 3.839412099603964*^9}, {3.839412167807907*^9, 
   3.8394121717349777`*^9}, {3.839581772567526*^9, 3.839581777723827*^9}, {
   3.8395833618240833`*^9, 3.839583374995986*^9}, 3.839585312904223*^9, 
   3.839585691587192*^9, {3.839585803746828*^9, 3.839585807267009*^9}, {
   3.8395858671662283`*^9, 3.83958586968204*^9}, {3.839586311658358*^9, 
   3.839586351047118*^9}, 3.839586469979348*^9, {3.839586558872705*^9, 
   3.8395865706450233`*^9}, {3.8395914524771976`*^9, 3.839591455747136*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4c9e64fe-1aa8-4fce-85bc-ff36eee4d4d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ob", "=", 
  RowBox[{"FormPage", "[", 
   RowBox[{
    RowBox[{"\"\<stock\>\"", "\[Rule]", "\"\<Financial\>\""}], ",", 
    RowBox[{
     RowBox[{"MakeGraph", "[", "#stock", "]"}], "&"}], ",", 
    RowBox[{"AppearanceRules", "\[Rule]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{
       "\"\<Title\>\"", "\[Rule]", "\"\<Comparison of two stocks\>\""}], ",", 
       
       RowBox[{
       "\"\<Description\>\"", "\[Rule]", 
        "\"\<Input the name of the company to compare it to Nvidia \
stock\>\""}], ",", 
       RowBox[{"\"\<SubmitLabel\>\"", "\[Rule]", "\"\<Submit\>\""}]}], 
      "|>"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.828686960118255*^9, 3.828686982350978*^9}, {
   3.8286885501268873`*^9, 3.828688596743184*^9}, {3.8286886385987873`*^9, 
   3.8286886481584663`*^9}, {3.828688775054389*^9, 3.8286889976792*^9}, {
   3.8286890289907856`*^9, 3.8286890836956987`*^9}, {3.8290510208907843`*^9, 
   3.829051057385893*^9}, {3.8290533683257976`*^9, 3.8290533770207405`*^9}, {
   3.829055084662651*^9, 3.829055088408214*^9}, {3.8291192753088956`*^9, 
   3.829119299565098*^9}, {3.8291193905414095`*^9, 3.8291193955088024`*^9}, 
   3.829119442616025*^9, {3.829119754509342*^9, 3.8291197585246153`*^9}, {
   3.82911980855756*^9, 3.8291198106450214`*^9}, {3.82920018772441*^9, 
   3.8292001996263247`*^9}, {3.8292002784189987`*^9, 3.829200302602762*^9}, {
   3.82920038897095*^9, 3.8292003971638384`*^9}, {3.8394113681899757`*^9, 
   3.8394114427507677`*^9}, {3.8395808904350033`*^9, 3.839580894996377*^9}, {
   3.839581600302374*^9, 3.839581603895527*^9}, {3.839581639083437*^9, 
   3.839581656067278*^9}, {3.8395826093109207`*^9, 3.8395826121337633`*^9}, {
   3.8395833809318933`*^9, 3.839583426883233*^9}, 3.839585326100277*^9, 
   3.839585706734226*^9, 3.839596213699597*^9, {3.8395967196884003`*^9, 
   3.839596721025635*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"e13355e7-f11a-428a-9893-d2064ebbf5fe"],

Cell[BoxData[
 InterpretationBox[
  DynamicModuleBox[{Forms`FormPage`PackagePrivate`temp$$ = Association[
   "stock" -> Association["Interpreter" -> "Financial", "Input" -> "Intel"]], 
   Forms`FormPage`PackagePrivate`vals$$ = Association[
   "stock" -> Entity["Financial", "NASDAQ:INTC"]], 
   Forms`FormPage`PackagePrivate`valid$$ = False, 
   Forms`FormPage`PackagePrivate`form2$$ = FormObject[
    Association[
    "stock" -> Association["Interpreter" -> "Financial", "Input" -> "Intel"]], 
    Association["stock" -> Entity["Financial", "NASDAQ:INTC"]], 
    AppearanceRules -> 
    Association[
     "Title" -> "Comparison of two stocks", "Description" -> 
      "Input the name of the company to compare it to Nvidia stock", 
      "SubmitLabel" -> "Submit"]], Forms`FormPage`PackagePrivate`valid2$$}, 
   DynamicBox[ToBoxes[
     With[{Forms`FormPage`PackagePrivate`formpane$ = Panel[
         Forms`getFormLayout[
          Forms`PackageScope`bindableForm[
          Forms`FormPage`PackagePrivate`temp$$, 
           Evaluate[Forms`FormPage`PackagePrivate`form2$$], None, None -> 
           Forms`PackageScope`completeAction[
            Forms`FormPage`PackagePrivate`form2$$, 
             Forms`FormPage`PackagePrivate`temp$$, 
             Forms`FormPage`PackagePrivate`vals$$, (
             Unset[Forms`FormPage`PackagePrivate`vals$$]; 
             Forms`FormPage`PackagePrivate`vals$$ = #; 
             Forms`FormPage`PackagePrivate`valid2$$ = Not[
                TrueQ[Forms`PackageScope`$DontComplete]])& , {
             AppearanceRules -> 
              Association[
               "Title" -> "Comparison of two stocks", "Description" -> 
                "Input the name of the company to compare it to Nvidia stock",
                 "SubmitLabel" -> "Submit"]}]]]], 
       Forms`FormPage`PackagePrivate`resultpane$ = Framed[
         If[
         Forms`FormPage`PackagePrivate`valid$$ = 
          And[Forms`FormPage`PackagePrivate`vals$$ =!= Association[], 
            FreeQ[
             Values[Forms`FormPage`PackagePrivate`vals$$], 
             Alternatives[
              Blank[Failure], Forms`PackageScope`fieldHidden]], 
            TrueQ[Forms`FormPage`PackagePrivate`valid2$$]], 
          Unset[Forms`FormPage`PackagePrivate`valid2$$]; Style[
            ($CellContext`MakeGraph[
             Slot["stock"]]& )[Forms`FormPage`PackagePrivate`vals$$], 
            "Output", "StandardForm"], 
          Style["Invalid form", "Message"]], FrameStyle -> Lighter[Gray], 
         Background -> White]}, 
      Panel[
       Column[
        Forms`doLayout[
        Automatic, Forms`FormPage`PackagePrivate`valid$$, {
         Forms`FormPage`PackagePrivate`formpane$, 
          Forms`FormPage`PackagePrivate`resultpane$, 
          Panel[
           Item[
            Row[{
              Spacer[0], 
              DefaultButton[
               Forms`PackageScope`completeAction[
               Forms`FormPage`PackagePrivate`form2$$, 
                Forms`FormPage`PackagePrivate`temp$$, 
                Forms`FormPage`PackagePrivate`vals$$, (
                Unset[Forms`FormPage`PackagePrivate`vals$$]; 
                Forms`FormPage`PackagePrivate`vals$$ = #; 
                Forms`FormPage`PackagePrivate`valid2$$ = Not[
                   TrueQ[Forms`PackageScope`$DontComplete]])& , {
                AppearanceRules -> 
                 Association[
                  "Title" -> "Comparison of two stocks", "Description" -> 
                   "Input the name of the company to compare it to Nvidia \
stock", "SubmitLabel" -> "Submit"]}]]}], Alignment -> Right]]}]]]], 
     StandardForm],
    ImageSizeCache->{384., {92.673828125, 97.326171875}},
    TrackedSymbols:>{Forms`FormPage`PackagePrivate`vals$$}],
   DynamicModuleValues:>{}],
  FormPage[
   FormObject[
    Association["stock" -> Association["Interpreter" -> "Financial"]], 
    Association[], AppearanceRules -> 
    Association[
     "Title" -> "Comparison of two stocks", "Description" -> 
      "Input the name of the company to compare it to Nvidia stock", 
      "SubmitLabel" -> "Submit"]], $CellContext`MakeGraph[
    Slot["stock"]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.839596724379071*^9, 3.839596737810046*^9}, 
   3.839645537818645*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"b3837570-7f05-4de4-a28f-d538709585b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"ob", ",", " ", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.829120781353653*^9, 3.8291207934463673`*^9}, {
  3.839585516116246*^9, 3.839585516846141*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"c149cdff-1890-48bc-ae19-ab8236dcb41d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/89ea165b-a222-484e-a043-d689eaef4e0d\"\
", "https://www.wolframcloud.com/obj/89ea165b-a222-484e-a043-d689eaef4e0d"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/89ea165b-a222-484e-a043-d689eaef4e0d"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.839580998901799*^9, 3.839581374570449*^9, 
  3.8395855221783543`*^9, 3.8395912185073843`*^9, 3.839591346453421*^9, 
  3.839646256626506*^9, 3.839662676745203*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"4967a4f6-6284-416b-b712-11ed7149f744"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 765},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"12.1 for Linux x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6c269e70-b640-45c6-abf4-b64a2624ece9"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 168, 3, 98, "Title",ExpressionUUID->"41df66de-46f5-4784-9070-df1411bada08"],
Cell[751, 27, 152, 3, 29, "Input",ExpressionUUID->"96f30f97-9c6b-419c-8354-67d1524a16fb"],
Cell[CellGroupData[{
Cell[928, 34, 167, 3, 68, "Section",ExpressionUUID->"dceb28dc-6c4c-437c-a77d-a4176e97a783"],
Cell[1098, 39, 328, 6, 35, "Text",ExpressionUUID->"b4a4d569-2d52-4395-9294-07369a0d86ad"],
Cell[CellGroupData[{
Cell[1451, 49, 517, 11, 42, "Input",ExpressionUUID->"e502ea71-f627-4cd0-9126-901600a2ba8a"],
Cell[1971, 62, 92536, 1796, 630, "Output",ExpressionUUID->"1c71dcb7-468d-4f83-a742-a7213461bbcf"]
}, Open  ]],
Cell[94522, 1861, 677, 12, 58, "Text",ExpressionUUID->"58322030-a303-424a-9484-f530eaabdd79"],
Cell[CellGroupData[{
Cell[95224, 1877, 1142, 27, 64, "Input",ExpressionUUID->"eed2fe77-8023-49a4-af2c-2bf449edc705"],
Cell[96369, 1906, 57781, 1391, 154, "Output",ExpressionUUID->"e05fa308-b6be-4c44-967e-dc56a8d1b638"]
}, Open  ]],
Cell[154165, 3300, 254, 6, 35, "Text",ExpressionUUID->"55dce983-5f6c-487d-ae51-cb5c5fad54a1"],
Cell[CellGroupData[{
Cell[154444, 3310, 1212, 28, 97, "Input",ExpressionUUID->"2deaad7a-8012-4075-a693-8be42dc8e3a9"],
Cell[155659, 3340, 13873, 292, 154, "Output",ExpressionUUID->"0fbc828b-dcd2-40f2-aeb9-28c94889c61d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[169581, 3638, 184, 3, 68, "Section",ExpressionUUID->"dff97070-423f-4d7d-bb9b-db628d9c4c91"],
Cell[169768, 3643, 373, 7, 35, "Text",ExpressionUUID->"7b7d7ada-5835-4f86-b878-a1971ee92516"],
Cell[CellGroupData[{
Cell[170166, 3654, 874, 21, 42, "Input",ExpressionUUID->"61614d84-ea30-4516-b1bb-8480a5e3dc43"],
Cell[171043, 3677, 15498, 308, 63, "Output",ExpressionUUID->"92dd992c-dec6-4b58-9cca-b36a80fdafa6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186578, 3990, 886, 21, 42, "Input",ExpressionUUID->"65fb498f-e16f-489b-b6d8-f4944757f610"],
Cell[187467, 4013, 17596, 350, 63, "Output",ExpressionUUID->"48e2868a-1457-4227-a073-0d4b3699905d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205100, 4368, 948, 27, 29, "Input",ExpressionUUID->"61c50de5-2f2e-4d3d-b88d-aba71bfe8c0a"],
Cell[206051, 4397, 15525, 321, 237, "Output",ExpressionUUID->"e21cf72b-1bc8-47be-a243-3a5e70e49c40"]
}, Open  ]],
Cell[221591, 4721, 305, 6, 35, "Text",ExpressionUUID->"f723e6db-349e-4ec0-a49b-3a9f961d6d52"],
Cell[CellGroupData[{
Cell[221921, 4731, 762, 21, 29, "Input",ExpressionUUID->"930bc44f-a4bd-4a8e-b363-f4e4299c4ce1"],
Cell[222686, 4754, 17079, 347, 247, "Output",ExpressionUUID->"9b2e3afc-b694-4c29-9f7c-619a544cf241"]
}, Open  ]],
Cell[239780, 5104, 282, 7, 58, "Text",ExpressionUUID->"d84f25a0-fcfc-4c5e-a4c8-0d059b253120"],
Cell[CellGroupData[{
Cell[240087, 5115, 1698, 36, 40, "Input",ExpressionUUID->"88d857d4-8943-4006-8112-bb9e57024d8b"],
Cell[241788, 5153, 45400, 869, 249, "Output",ExpressionUUID->"bd366015-2888-42b5-85e8-00f4b18af26b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287225, 6027, 1681, 36, 40, "Input",ExpressionUUID->"1175d9c7-3d2b-4fd8-ac9e-e91a6d8262b5"],
Cell[288909, 6065, 48420, 919, 246, "Output",ExpressionUUID->"6445d402-94b9-4763-8a25-88cd291394b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337366, 6989, 3537, 76, 67, "Input",ExpressionUUID->"3a391c9f-c216-4247-bd6b-86fbb84ad5eb"],
Cell[340906, 7067, 86188, 1545, 249, "Output",ExpressionUUID->"640f51a8-b874-41af-bd95-42d3b1da6b61"]
}, Open  ]],
Cell[427109, 8615, 203, 3, 35, "Text",ExpressionUUID->"e3a71cb4-ff10-462d-ae23-553c1197ef70"],
Cell[427315, 8620, 1445, 34, 71, "Text",ExpressionUUID->"8bf30f98-560b-47c9-a492-c67ee07b306f"],
Cell[428763, 8656, 281, 6, 35, "Text",ExpressionUUID->"dac9f3a8-14e8-414f-8c3d-e977aebc87b3"],
Cell[429047, 8664, 430, 8, 35, "Text",ExpressionUUID->"218afd9e-362e-4fd6-b74d-00c141de32ab"],
Cell[429480, 8674, 5690, 112, 150, "Input",ExpressionUUID->"d63a4167-868e-44c7-9685-729306e2588b"],
Cell[CellGroupData[{
Cell[435195, 8790, 6500, 134, 109, "Input",ExpressionUUID->"d0d2101f-0fe2-4ef9-b296-1ad034806ef1"],
Cell[441698, 8926, 41416, 857, 164, "Output",ExpressionUUID->"3474f86a-4013-4c06-9121-0366aa443472"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[483163, 9789, 172, 3, 68, "Section",ExpressionUUID->"7a2cdff4-6c29-4eb2-aa60-a2229c54d0aa"],
Cell[483338, 9794, 237, 6, 35, "Text",ExpressionUUID->"cf802da4-1f81-4a9c-834e-33eec3755807"],
Cell[CellGroupData[{
Cell[483600, 9804, 542, 12, 51, "Input",ExpressionUUID->"b123c3bf-4695-4160-8738-9cef9fe14d2d"],
Cell[484145, 9818, 6397, 134, 72, "Output",ExpressionUUID->"8bf4f74f-e252-4fc5-ab91-b618daf2c466"]
}, Open  ]],
Cell[CellGroupData[{
Cell[490579, 9957, 1003, 25, 92, "Input",ExpressionUUID->"afcfdb9c-f758-4c97-b14b-64c9db59ba8a"],
Cell[491585, 9984, 175, 2, 33, "Output",ExpressionUUID->"f78a765e-2db6-4b28-94e7-36e88d91d84d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[491797, 9991, 874, 23, 71, "Input",ExpressionUUID->"1eddffc7-320d-4fd7-a4ea-88a3e0f46a23"],
Cell[492674, 10016, 150, 2, 33, "Output",ExpressionUUID->"f7114025-7663-426c-b4a3-d85f15f96f99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[492861, 10023, 420, 9, 29, "Input",ExpressionUUID->"b9176fd2-4552-42f3-9cdd-595f3ce3fdf5"],
Cell[493284, 10034, 12610, 332, 449, "Output",ExpressionUUID->"ea762d08-1216-4663-8706-bfc740380c71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[505931, 10371, 897, 24, 51, "Input",ExpressionUUID->"d4658ffd-6c95-4b47-9bf4-c02f5305920a"],
Cell[506831, 10397, 451242, 8398, 437, "Output",ExpressionUUID->"ebefc78e-d4c5-46bd-a759-686c4dba43f2"]
}, Open  ]],
Cell[958088, 18798, 343, 7, 35, "Text",ExpressionUUID->"9934fae6-4f2c-4af1-80e8-d36941176dc6"],
Cell[CellGroupData[{
Cell[958456, 18809, 222, 4, 54, "Subsection",ExpressionUUID->"5bd40c32-9510-4452-b44e-ca37bf412fe6"],
Cell[958681, 18815, 296, 6, 35, "Text",ExpressionUUID->"0fb69e07-a1ce-4e9f-a5ac-4eded0017df9"],
Cell[CellGroupData[{
Cell[959002, 18825, 474, 10, 42, "Input",ExpressionUUID->"d8ca3e20-9fa2-4a84-9c6b-09ca2bf17483"],
Cell[959479, 18837, 209870, 3813, 588, "Output",ExpressionUUID->"a7156761-7037-4a20-97b7-3d1dad2b7bc7"]
}, Open  ]],
Cell[1169364, 22653, 257, 6, 35, "Text",ExpressionUUID->"948a31ac-6bcc-40ee-abea-7219aef34608"],
Cell[1169624, 22661, 296, 7, 29, "Input",ExpressionUUID->"eb439144-d325-4599-90e2-7ec139fc2834"],
Cell[CellGroupData[{
Cell[1169945, 22672, 1093, 32, 71, "Input",ExpressionUUID->"23fcbe5e-a9bd-40a6-9a79-eb5b5d3b6be1"],
Cell[1171041, 22706, 199, 3, 33, "Output",ExpressionUUID->"37118464-28e5-44c4-9191-439c8125fb28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1171277, 22714, 773, 21, 29, "Input",ExpressionUUID->"6ecad1b6-6aa1-4804-9978-e32f5048685f"],
Cell[1172053, 22737, 2039, 41, 319, "Output",ExpressionUUID->"c11c6e51-7879-4b9c-87fb-0671ad7d4813"]
}, Open  ]],
Cell[1174107, 22781, 315, 7, 35, "Text",ExpressionUUID->"a213646e-a266-461a-9b63-714feb2342b3"],
Cell[CellGroupData[{
Cell[1174447, 22792, 632, 15, 29, "Input",ExpressionUUID->"05048bff-3181-4543-965f-53f485357742"],
Cell[1175082, 22809, 13832, 334, 249, "Output",ExpressionUUID->"25b91153-be0b-4c11-80fa-a86d94ad2c74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1188951, 23148, 1314, 30, 69, "Input",ExpressionUUID->"1a38332b-44ad-46bf-8d19-c4ddcc400a06"],
Cell[1190268, 23180, 38406, 699, 428, "Output",ExpressionUUID->"fb50bdb7-faa9-462e-a0a9-9d237f59ef55"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1228735, 23886, 164, 3, 54, "Section",ExpressionUUID->"2e5ad4fe-1f1f-4cd7-932e-edb786e276a2"],
Cell[1228902, 23891, 226, 5, 35, "Text",ExpressionUUID->"0ef7a91b-2502-49a8-a5f3-3a95d1611d28"],
Cell[1229131, 23898, 2244, 43, 92, "Input",ExpressionUUID->"4c9e64fe-1aa8-4fce-85bc-ff36eee4d4d6"],
Cell[CellGroupData[{
Cell[1231400, 23945, 1957, 36, 51, "Input",ExpressionUUID->"e13355e7-f11a-428a-9893-d2064ebbf5fe"],
Cell[1233360, 23983, 4398, 92, 209, "Output",ExpressionUUID->"b3837570-7f05-4de4-a28f-d538709585b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1237795, 24080, 342, 6, 29, "Input",ExpressionUUID->"c149cdff-1890-48bc-ae19-ab8236dcb41d"],
Cell[1238140, 24088, 660, 13, 36, "Output",ExpressionUUID->"4967a4f6-6284-416b-b712-11ed7149f744"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

